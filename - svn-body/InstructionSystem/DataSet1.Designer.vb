'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3615
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet1
    Inherits Global.System.Data.DataSet
    
    Private tableT_Production_DAT As T_Production_DATDataTable
    
    Private tableT_Instruction_DAT As T_Instruction_DATDataTable
    
    Private tableT_Line_MST As T_Line_MSTDataTable
    
    Private tableT_LOG_DAT As T_LOG_DATDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("T_Production_DAT")) Is Nothing) Then
                MyBase.Tables.Add(New T_Production_DATDataTable(ds.Tables("T_Production_DAT")))
            End If
            If (Not (ds.Tables("T_Instruction_DAT")) Is Nothing) Then
                MyBase.Tables.Add(New T_Instruction_DATDataTable(ds.Tables("T_Instruction_DAT")))
            End If
            If (Not (ds.Tables("T_Line_MST")) Is Nothing) Then
                MyBase.Tables.Add(New T_Line_MSTDataTable(ds.Tables("T_Line_MST")))
            End If
            If (Not (ds.Tables("T_LOG_DAT")) Is Nothing) Then
                MyBase.Tables.Add(New T_LOG_DATDataTable(ds.Tables("T_LOG_DAT")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property T_Production_DAT() As T_Production_DATDataTable
        Get
            Return Me.tableT_Production_DAT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property T_Instruction_DAT() As T_Instruction_DATDataTable
        Get
            Return Me.tableT_Instruction_DAT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property T_Line_MST() As T_Line_MSTDataTable
        Get
            Return Me.tableT_Line_MST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property T_LOG_DAT() As T_LOG_DATDataTable
        Get
            Return Me.tableT_LOG_DAT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet1 = CType(MyBase.Clone,DataSet1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("T_Production_DAT")) Is Nothing) Then
                MyBase.Tables.Add(New T_Production_DATDataTable(ds.Tables("T_Production_DAT")))
            End If
            If (Not (ds.Tables("T_Instruction_DAT")) Is Nothing) Then
                MyBase.Tables.Add(New T_Instruction_DATDataTable(ds.Tables("T_Instruction_DAT")))
            End If
            If (Not (ds.Tables("T_Line_MST")) Is Nothing) Then
                MyBase.Tables.Add(New T_Line_MSTDataTable(ds.Tables("T_Line_MST")))
            End If
            If (Not (ds.Tables("T_LOG_DAT")) Is Nothing) Then
                MyBase.Tables.Add(New T_LOG_DATDataTable(ds.Tables("T_LOG_DAT")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableT_Production_DAT = CType(MyBase.Tables("T_Production_DAT"),T_Production_DATDataTable)
        If (initTable = true) Then
            If (Not (Me.tableT_Production_DAT) Is Nothing) Then
                Me.tableT_Production_DAT.InitVars
            End If
        End If
        Me.tableT_Instruction_DAT = CType(MyBase.Tables("T_Instruction_DAT"),T_Instruction_DATDataTable)
        If (initTable = true) Then
            If (Not (Me.tableT_Instruction_DAT) Is Nothing) Then
                Me.tableT_Instruction_DAT.InitVars
            End If
        End If
        Me.tableT_Line_MST = CType(MyBase.Tables("T_Line_MST"),T_Line_MSTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableT_Line_MST) Is Nothing) Then
                Me.tableT_Line_MST.InitVars
            End If
        End If
        Me.tableT_LOG_DAT = CType(MyBase.Tables("T_LOG_DAT"),T_LOG_DATDataTable)
        If (initTable = true) Then
            If (Not (Me.tableT_LOG_DAT) Is Nothing) Then
                Me.tableT_LOG_DAT.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableT_Production_DAT = New T_Production_DATDataTable
        MyBase.Tables.Add(Me.tableT_Production_DAT)
        Me.tableT_Instruction_DAT = New T_Instruction_DATDataTable
        MyBase.Tables.Add(Me.tableT_Instruction_DAT)
        Me.tableT_Line_MST = New T_Line_MSTDataTable
        MyBase.Tables.Add(Me.tableT_Line_MST)
        Me.tableT_LOG_DAT = New T_LOG_DATDataTable
        MyBase.Tables.Add(Me.tableT_LOG_DAT)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeT_Production_DAT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeT_Instruction_DAT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeT_Line_MST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeT_LOG_DAT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet1 = New DataSet1
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub T_Production_DATRowChangeEventHandler(ByVal sender As Object, ByVal e As T_Production_DATRowChangeEvent)
    
    Public Delegate Sub T_Instruction_DATRowChangeEventHandler(ByVal sender As Object, ByVal e As T_Instruction_DATRowChangeEvent)
    
    Public Delegate Sub T_Line_MSTRowChangeEventHandler(ByVal sender As Object, ByVal e As T_Line_MSTRowChangeEvent)
    
    Public Delegate Sub T_LOG_DATRowChangeEventHandler(ByVal sender As Object, ByVal e As T_LOG_DATRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class T_Production_DATDataTable
        Inherits Global.System.Data.TypedTableBase(Of T_Production_DATRow)
        
        Private columnSeqNo As Global.System.Data.DataColumn
        
        Private columnModelYear As Global.System.Data.DataColumn
        
        Private columnSuffixCode As Global.System.Data.DataColumn
        
        Private columnLotID As Global.System.Data.DataColumn
        
        Private columnLotNo As Global.System.Data.DataColumn
        
        Private columnUnit As Global.System.Data.DataColumn
        
        Private columnBlockModel As Global.System.Data.DataColumn
        
        Private columnBlockSeq As Global.System.Data.DataColumn
        
        Private columnMARK As Global.System.Data.DataColumn
        
        Private columnProductionDate As Global.System.Data.DataColumn
        
        Private columnProductionTime As Global.System.Data.DataColumn
        
        Private columnImportCode As Global.System.Data.DataColumn
        
        Private columnYChassisFlag As Global.System.Data.DataColumn
        
        Private columnGAShop As Global.System.Data.DataColumn
        
        Private columnHanmmerYears As Global.System.Data.DataColumn
        
        Private columnMODEL01ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL01ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL01ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL01ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL01ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL02ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL02ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL02ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL02ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL02ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL03ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL03ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL03ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL03ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL03ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL04ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL04ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL04ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL04ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL04ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL05ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL05ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL05ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL05ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL05ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL06ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL06ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL06ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL06ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL06ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL07ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL07ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL07ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL07ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL07ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL08ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL08ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL08ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL08ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL08ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL09ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL09ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL09ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL09ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL09ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL10ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL10ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL10ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL10ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL10ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL11ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL11ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL11ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL11ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL11ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL12ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL12ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL12ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL12ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL12ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL13ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL13ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL13ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL13ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL13ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL14ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL14ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL14ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL14ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL14ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL15ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL15ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL15ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL15ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL15ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL16ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL16ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL16ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL16ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL16ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL17ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL17ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL17ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL17ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL17ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL18ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL18ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL18ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL18ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL18ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL19ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL19ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL19ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL19ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL19ASM05 As Global.System.Data.DataColumn
        
        Private columnMODEL20ASM01 As Global.System.Data.DataColumn
        
        Private columnMODEL20ASM02 As Global.System.Data.DataColumn
        
        Private columnMODEL20ASM03 As Global.System.Data.DataColumn
        
        Private columnMODEL20ASM04 As Global.System.Data.DataColumn
        
        Private columnMODEL20ASM05 As Global.System.Data.DataColumn
        
        Private columnReserve01 As Global.System.Data.DataColumn
        
        Private columnReserve02 As Global.System.Data.DataColumn
        
        Private columnSubSeq As Global.System.Data.DataColumn
        
        Private columnXchgFlag As Global.System.Data.DataColumn
        
        Private columnInstructFlag As Global.System.Data.DataColumn
        
        Private columnFileName As Global.System.Data.DataColumn
        
        Private columnSEQ_DESC As Global.System.Data.DataColumn
        
        Private columnindexNo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "T_Production_DAT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SeqNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeqNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ModelYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SuffixCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuffixCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LotIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LotNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BlockModelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlockModel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BlockSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlockSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MARKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMARK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProductionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProductionTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductionTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ImportCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImportCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YChassisFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYChassisFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GAShopColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGAShop
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HanmmerYearsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHanmmerYears
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL01ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL01ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL01ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL01ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL01ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL01ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL01ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL01ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL01ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL01ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL02ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL02ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL02ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL02ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL02ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL02ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL02ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL02ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL02ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL02ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL03ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL03ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL03ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL03ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL03ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL03ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL03ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL03ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL03ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL03ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL04ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL04ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL04ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL04ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL04ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL04ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL04ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL04ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL04ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL04ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL05ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL05ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL05ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL05ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL05ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL05ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL05ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL05ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL05ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL05ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL06ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL06ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL06ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL06ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL06ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL06ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL06ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL06ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL06ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL06ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL07ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL07ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL07ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL07ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL07ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL07ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL07ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL07ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL07ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL07ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL08ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL08ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL08ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL08ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL08ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL08ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL08ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL08ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL08ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL08ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL09ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL09ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL09ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL09ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL09ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL09ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL09ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL09ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL09ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL09ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL10ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL10ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL10ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL10ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL10ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL10ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL10ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL10ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL10ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL10ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL11ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL11ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL11ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL11ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL11ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL11ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL11ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL11ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL11ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL11ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL12ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL12ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL12ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL12ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL12ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL12ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL12ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL12ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL12ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL12ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL13ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL13ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL13ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL13ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL13ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL13ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL13ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL13ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL13ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL13ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL14ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL14ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL14ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL14ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL14ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL14ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL14ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL14ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL14ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL14ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL15ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL15ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL15ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL15ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL15ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL15ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL15ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL15ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL15ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL15ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL16ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL16ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL16ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL16ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL16ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL16ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL16ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL16ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL16ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL16ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL17ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL17ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL17ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL17ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL17ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL17ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL17ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL17ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL17ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL17ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL18ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL18ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL18ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL18ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL18ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL18ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL18ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL18ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL18ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL18ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL19ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL19ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL19ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL19ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL19ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL19ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL19ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL19ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL19ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL19ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL20ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL20ASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL20ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL20ASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL20ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL20ASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL20ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL20ASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MODEL20ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL20ASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Reserve01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnReserve01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Reserve02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnReserve02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SubSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property XchgFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXchgFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InstructFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstructFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FileNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFileName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEQ_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQ_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property indexNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnindexNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As T_Production_DATRow
            Get
                Return CType(Me.Rows(index),T_Production_DATRow)
            End Get
        End Property
        
        Public Event T_Production_DATRowChanging As T_Production_DATRowChangeEventHandler
        
        Public Event T_Production_DATRowChanged As T_Production_DATRowChangeEventHandler
        
        Public Event T_Production_DATRowDeleting As T_Production_DATRowChangeEventHandler
        
        Public Event T_Production_DATRowDeleted As T_Production_DATRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddT_Production_DATRow(ByVal row As T_Production_DATRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddT_Production_DATRow( _
                    ByVal SeqNo As String,  _
                    ByVal ModelYear As String,  _
                    ByVal SuffixCode As String,  _
                    ByVal LotID As String,  _
                    ByVal LotNo As String,  _
                    ByVal Unit As String,  _
                    ByVal BlockModel As String,  _
                    ByVal BlockSeq As String,  _
                    ByVal MARK As String,  _
                    ByVal ProductionDate As String,  _
                    ByVal ProductionTime As String,  _
                    ByVal ImportCode As String,  _
                    ByVal YChassisFlag As String,  _
                    ByVal GAShop As String,  _
                    ByVal HanmmerYears As String,  _
                    ByVal MODEL01ASM01 As String,  _
                    ByVal MODEL01ASM02 As String,  _
                    ByVal MODEL01ASM03 As String,  _
                    ByVal MODEL01ASM04 As String,  _
                    ByVal MODEL01ASM05 As String,  _
                    ByVal MODEL02ASM01 As String,  _
                    ByVal MODEL02ASM02 As String,  _
                    ByVal MODEL02ASM03 As String,  _
                    ByVal MODEL02ASM04 As String,  _
                    ByVal MODEL02ASM05 As String,  _
                    ByVal MODEL03ASM01 As String,  _
                    ByVal MODEL03ASM02 As String,  _
                    ByVal MODEL03ASM03 As String,  _
                    ByVal MODEL03ASM04 As String,  _
                    ByVal MODEL03ASM05 As String,  _
                    ByVal MODEL04ASM01 As String,  _
                    ByVal MODEL04ASM02 As String,  _
                    ByVal MODEL04ASM03 As String,  _
                    ByVal MODEL04ASM04 As String,  _
                    ByVal MODEL04ASM05 As String,  _
                    ByVal MODEL05ASM01 As String,  _
                    ByVal MODEL05ASM02 As String,  _
                    ByVal MODEL05ASM03 As String,  _
                    ByVal MODEL05ASM04 As String,  _
                    ByVal MODEL05ASM05 As String,  _
                    ByVal MODEL06ASM01 As String,  _
                    ByVal MODEL06ASM02 As String,  _
                    ByVal MODEL06ASM03 As String,  _
                    ByVal MODEL06ASM04 As String,  _
                    ByVal MODEL06ASM05 As String,  _
                    ByVal MODEL07ASM01 As String,  _
                    ByVal MODEL07ASM02 As String,  _
                    ByVal MODEL07ASM03 As String,  _
                    ByVal MODEL07ASM04 As String,  _
                    ByVal MODEL07ASM05 As String,  _
                    ByVal MODEL08ASM01 As String,  _
                    ByVal MODEL08ASM02 As String,  _
                    ByVal MODEL08ASM03 As String,  _
                    ByVal MODEL08ASM04 As String,  _
                    ByVal MODEL08ASM05 As String,  _
                    ByVal MODEL09ASM01 As String,  _
                    ByVal MODEL09ASM02 As String,  _
                    ByVal MODEL09ASM03 As String,  _
                    ByVal MODEL09ASM04 As String,  _
                    ByVal MODEL09ASM05 As String,  _
                    ByVal MODEL10ASM01 As String,  _
                    ByVal MODEL10ASM02 As String,  _
                    ByVal MODEL10ASM03 As String,  _
                    ByVal MODEL10ASM04 As String,  _
                    ByVal MODEL10ASM05 As String,  _
                    ByVal MODEL11ASM01 As String,  _
                    ByVal MODEL11ASM02 As String,  _
                    ByVal MODEL11ASM03 As String,  _
                    ByVal MODEL11ASM04 As String,  _
                    ByVal MODEL11ASM05 As String,  _
                    ByVal MODEL12ASM01 As String,  _
                    ByVal MODEL12ASM02 As String,  _
                    ByVal MODEL12ASM03 As String,  _
                    ByVal MODEL12ASM04 As String,  _
                    ByVal MODEL12ASM05 As String,  _
                    ByVal MODEL13ASM01 As String,  _
                    ByVal MODEL13ASM02 As String,  _
                    ByVal MODEL13ASM03 As String,  _
                    ByVal MODEL13ASM04 As String,  _
                    ByVal MODEL13ASM05 As String,  _
                    ByVal MODEL14ASM01 As String,  _
                    ByVal MODEL14ASM02 As String,  _
                    ByVal MODEL14ASM03 As String,  _
                    ByVal MODEL14ASM04 As String,  _
                    ByVal MODEL14ASM05 As String,  _
                    ByVal MODEL15ASM01 As String,  _
                    ByVal MODEL15ASM02 As String,  _
                    ByVal MODEL15ASM03 As String,  _
                    ByVal MODEL15ASM04 As String,  _
                    ByVal MODEL15ASM05 As String,  _
                    ByVal MODEL16ASM01 As String,  _
                    ByVal MODEL16ASM02 As String,  _
                    ByVal MODEL16ASM03 As String,  _
                    ByVal MODEL16ASM04 As String,  _
                    ByVal MODEL16ASM05 As String,  _
                    ByVal MODEL17ASM01 As String,  _
                    ByVal MODEL17ASM02 As String,  _
                    ByVal MODEL17ASM03 As String,  _
                    ByVal MODEL17ASM04 As String,  _
                    ByVal MODEL17ASM05 As String,  _
                    ByVal MODEL18ASM01 As String,  _
                    ByVal MODEL18ASM02 As String,  _
                    ByVal MODEL18ASM03 As String,  _
                    ByVal MODEL18ASM04 As String,  _
                    ByVal MODEL18ASM05 As String,  _
                    ByVal MODEL19ASM01 As String,  _
                    ByVal MODEL19ASM02 As String,  _
                    ByVal MODEL19ASM03 As String,  _
                    ByVal MODEL19ASM04 As String,  _
                    ByVal MODEL19ASM05 As String,  _
                    ByVal MODEL20ASM01 As String,  _
                    ByVal MODEL20ASM02 As String,  _
                    ByVal MODEL20ASM03 As String,  _
                    ByVal MODEL20ASM04 As String,  _
                    ByVal MODEL20ASM05 As String,  _
                    ByVal Reserve01 As String,  _
                    ByVal Reserve02 As String,  _
                    ByVal SubSeq As Integer,  _
                    ByVal XchgFlag As String,  _
                    ByVal InstructFlag As Integer,  _
                    ByVal FileName As String,  _
                    ByVal SEQ_DESC As String,  _
                    ByVal indexNo As String) As T_Production_DATRow
            Dim rowT_Production_DATRow As T_Production_DATRow = CType(Me.NewRow,T_Production_DATRow)
            Dim columnValuesArray() As Object = New Object() {SeqNo, ModelYear, SuffixCode, LotID, LotNo, Unit, BlockModel, BlockSeq, MARK, ProductionDate, ProductionTime, ImportCode, YChassisFlag, GAShop, HanmmerYears, MODEL01ASM01, MODEL01ASM02, MODEL01ASM03, MODEL01ASM04, MODEL01ASM05, MODEL02ASM01, MODEL02ASM02, MODEL02ASM03, MODEL02ASM04, MODEL02ASM05, MODEL03ASM01, MODEL03ASM02, MODEL03ASM03, MODEL03ASM04, MODEL03ASM05, MODEL04ASM01, MODEL04ASM02, MODEL04ASM03, MODEL04ASM04, MODEL04ASM05, MODEL05ASM01, MODEL05ASM02, MODEL05ASM03, MODEL05ASM04, MODEL05ASM05, MODEL06ASM01, MODEL06ASM02, MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, MODEL07ASM01, MODEL07ASM02, MODEL07ASM03, MODEL07ASM04, MODEL07ASM05, MODEL08ASM01, MODEL08ASM02, MODEL08ASM03, MODEL08ASM04, MODEL08ASM05, MODEL09ASM01, MODEL09ASM02, MODEL09ASM03, MODEL09ASM04, MODEL09ASM05, MODEL10ASM01, MODEL10ASM02, MODEL10ASM03, MODEL10ASM04, MODEL10ASM05, MODEL11ASM01, MODEL11ASM02, MODEL11ASM03, MODEL11ASM04, MODEL11ASM05, MODEL12ASM01, MODEL12ASM02, MODEL12ASM03, MODEL12ASM04, MODEL12ASM05, MODEL13ASM01, MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MODEL13ASM05, MODEL14ASM01, MODEL14ASM02, MODEL14ASM03, MODEL14ASM04, MODEL14ASM05, MODEL15ASM01, MODEL15ASM02, MODEL15ASM03, MODEL15ASM04, MODEL15ASM05, MODEL16ASM01, MODEL16ASM02, MODEL16ASM03, MODEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17ASM02, MODEL17ASM03, MODEL17ASM04, MODEL17ASM05, MODEL18ASM01, MODEL18ASM02, MODEL18ASM03, MODEL18ASM04, MODEL18ASM05, MODEL19ASM01, MODEL19ASM02, MODEL19ASM03, MODEL19ASM04, MODEL19ASM05, MODEL20ASM01, MODEL20ASM02, MODEL20ASM03, MODEL20ASM04, MODEL20ASM05, Reserve01, Reserve02, SubSeq, XchgFlag, InstructFlag, FileName, SEQ_DESC, indexNo}
            rowT_Production_DATRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowT_Production_DATRow)
            Return rowT_Production_DATRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByModelYearSuffixCodeLotNoUnit(ByVal ModelYear As String, ByVal SuffixCode As String, ByVal LotNo As String, ByVal Unit As String) As T_Production_DATRow
            Return CType(Me.Rows.Find(New Object() {ModelYear, SuffixCode, LotNo, Unit}),T_Production_DATRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As T_Production_DATDataTable = CType(MyBase.Clone,T_Production_DATDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New T_Production_DATDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSeqNo = MyBase.Columns("SeqNo")
            Me.columnModelYear = MyBase.Columns("ModelYear")
            Me.columnSuffixCode = MyBase.Columns("SuffixCode")
            Me.columnLotID = MyBase.Columns("LotID")
            Me.columnLotNo = MyBase.Columns("LotNo")
            Me.columnUnit = MyBase.Columns("Unit")
            Me.columnBlockModel = MyBase.Columns("BlockModel")
            Me.columnBlockSeq = MyBase.Columns("BlockSeq")
            Me.columnMARK = MyBase.Columns("MARK")
            Me.columnProductionDate = MyBase.Columns("ProductionDate")
            Me.columnProductionTime = MyBase.Columns("ProductionTime")
            Me.columnImportCode = MyBase.Columns("ImportCode")
            Me.columnYChassisFlag = MyBase.Columns("YChassisFlag")
            Me.columnGAShop = MyBase.Columns("GAShop")
            Me.columnHanmmerYears = MyBase.Columns("HanmmerYears")
            Me.columnMODEL01ASM01 = MyBase.Columns("MODEL01ASM01")
            Me.columnMODEL01ASM02 = MyBase.Columns("MODEL01ASM02")
            Me.columnMODEL01ASM03 = MyBase.Columns("MODEL01ASM03")
            Me.columnMODEL01ASM04 = MyBase.Columns("MODEL01ASM04")
            Me.columnMODEL01ASM05 = MyBase.Columns("MODEL01ASM05")
            Me.columnMODEL02ASM01 = MyBase.Columns("MODEL02ASM01")
            Me.columnMODEL02ASM02 = MyBase.Columns("MODEL02ASM02")
            Me.columnMODEL02ASM03 = MyBase.Columns("MODEL02ASM03")
            Me.columnMODEL02ASM04 = MyBase.Columns("MODEL02ASM04")
            Me.columnMODEL02ASM05 = MyBase.Columns("MODEL02ASM05")
            Me.columnMODEL03ASM01 = MyBase.Columns("MODEL03ASM01")
            Me.columnMODEL03ASM02 = MyBase.Columns("MODEL03ASM02")
            Me.columnMODEL03ASM03 = MyBase.Columns("MODEL03ASM03")
            Me.columnMODEL03ASM04 = MyBase.Columns("MODEL03ASM04")
            Me.columnMODEL03ASM05 = MyBase.Columns("MODEL03ASM05")
            Me.columnMODEL04ASM01 = MyBase.Columns("MODEL04ASM01")
            Me.columnMODEL04ASM02 = MyBase.Columns("MODEL04ASM02")
            Me.columnMODEL04ASM03 = MyBase.Columns("MODEL04ASM03")
            Me.columnMODEL04ASM04 = MyBase.Columns("MODEL04ASM04")
            Me.columnMODEL04ASM05 = MyBase.Columns("MODEL04ASM05")
            Me.columnMODEL05ASM01 = MyBase.Columns("MODEL05ASM01")
            Me.columnMODEL05ASM02 = MyBase.Columns("MODEL05ASM02")
            Me.columnMODEL05ASM03 = MyBase.Columns("MODEL05ASM03")
            Me.columnMODEL05ASM04 = MyBase.Columns("MODEL05ASM04")
            Me.columnMODEL05ASM05 = MyBase.Columns("MODEL05ASM05")
            Me.columnMODEL06ASM01 = MyBase.Columns("MODEL06ASM01")
            Me.columnMODEL06ASM02 = MyBase.Columns("MODEL06ASM02")
            Me.columnMODEL06ASM03 = MyBase.Columns("MODEL06ASM03")
            Me.columnMODEL06ASM04 = MyBase.Columns("MODEL06ASM04")
            Me.columnMODEL06ASM05 = MyBase.Columns("MODEL06ASM05")
            Me.columnMODEL07ASM01 = MyBase.Columns("MODEL07ASM01")
            Me.columnMODEL07ASM02 = MyBase.Columns("MODEL07ASM02")
            Me.columnMODEL07ASM03 = MyBase.Columns("MODEL07ASM03")
            Me.columnMODEL07ASM04 = MyBase.Columns("MODEL07ASM04")
            Me.columnMODEL07ASM05 = MyBase.Columns("MODEL07ASM05")
            Me.columnMODEL08ASM01 = MyBase.Columns("MODEL08ASM01")
            Me.columnMODEL08ASM02 = MyBase.Columns("MODEL08ASM02")
            Me.columnMODEL08ASM03 = MyBase.Columns("MODEL08ASM03")
            Me.columnMODEL08ASM04 = MyBase.Columns("MODEL08ASM04")
            Me.columnMODEL08ASM05 = MyBase.Columns("MODEL08ASM05")
            Me.columnMODEL09ASM01 = MyBase.Columns("MODEL09ASM01")
            Me.columnMODEL09ASM02 = MyBase.Columns("MODEL09ASM02")
            Me.columnMODEL09ASM03 = MyBase.Columns("MODEL09ASM03")
            Me.columnMODEL09ASM04 = MyBase.Columns("MODEL09ASM04")
            Me.columnMODEL09ASM05 = MyBase.Columns("MODEL09ASM05")
            Me.columnMODEL10ASM01 = MyBase.Columns("MODEL10ASM01")
            Me.columnMODEL10ASM02 = MyBase.Columns("MODEL10ASM02")
            Me.columnMODEL10ASM03 = MyBase.Columns("MODEL10ASM03")
            Me.columnMODEL10ASM04 = MyBase.Columns("MODEL10ASM04")
            Me.columnMODEL10ASM05 = MyBase.Columns("MODEL10ASM05")
            Me.columnMODEL11ASM01 = MyBase.Columns("MODEL11ASM01")
            Me.columnMODEL11ASM02 = MyBase.Columns("MODEL11ASM02")
            Me.columnMODEL11ASM03 = MyBase.Columns("MODEL11ASM03")
            Me.columnMODEL11ASM04 = MyBase.Columns("MODEL11ASM04")
            Me.columnMODEL11ASM05 = MyBase.Columns("MODEL11ASM05")
            Me.columnMODEL12ASM01 = MyBase.Columns("MODEL12ASM01")
            Me.columnMODEL12ASM02 = MyBase.Columns("MODEL12ASM02")
            Me.columnMODEL12ASM03 = MyBase.Columns("MODEL12ASM03")
            Me.columnMODEL12ASM04 = MyBase.Columns("MODEL12ASM04")
            Me.columnMODEL12ASM05 = MyBase.Columns("MODEL12ASM05")
            Me.columnMODEL13ASM01 = MyBase.Columns("MODEL13ASM01")
            Me.columnMODEL13ASM02 = MyBase.Columns("MODEL13ASM02")
            Me.columnMODEL13ASM03 = MyBase.Columns("MODEL13ASM03")
            Me.columnMODEL13ASM04 = MyBase.Columns("MODEL13ASM04")
            Me.columnMODEL13ASM05 = MyBase.Columns("MODEL13ASM05")
            Me.columnMODEL14ASM01 = MyBase.Columns("MODEL14ASM01")
            Me.columnMODEL14ASM02 = MyBase.Columns("MODEL14ASM02")
            Me.columnMODEL14ASM03 = MyBase.Columns("MODEL14ASM03")
            Me.columnMODEL14ASM04 = MyBase.Columns("MODEL14ASM04")
            Me.columnMODEL14ASM05 = MyBase.Columns("MODEL14ASM05")
            Me.columnMODEL15ASM01 = MyBase.Columns("MODEL15ASM01")
            Me.columnMODEL15ASM02 = MyBase.Columns("MODEL15ASM02")
            Me.columnMODEL15ASM03 = MyBase.Columns("MODEL15ASM03")
            Me.columnMODEL15ASM04 = MyBase.Columns("MODEL15ASM04")
            Me.columnMODEL15ASM05 = MyBase.Columns("MODEL15ASM05")
            Me.columnMODEL16ASM01 = MyBase.Columns("MODEL16ASM01")
            Me.columnMODEL16ASM02 = MyBase.Columns("MODEL16ASM02")
            Me.columnMODEL16ASM03 = MyBase.Columns("MODEL16ASM03")
            Me.columnMODEL16ASM04 = MyBase.Columns("MODEL16ASM04")
            Me.columnMODEL16ASM05 = MyBase.Columns("MODEL16ASM05")
            Me.columnMODEL17ASM01 = MyBase.Columns("MODEL17ASM01")
            Me.columnMODEL17ASM02 = MyBase.Columns("MODEL17ASM02")
            Me.columnMODEL17ASM03 = MyBase.Columns("MODEL17ASM03")
            Me.columnMODEL17ASM04 = MyBase.Columns("MODEL17ASM04")
            Me.columnMODEL17ASM05 = MyBase.Columns("MODEL17ASM05")
            Me.columnMODEL18ASM01 = MyBase.Columns("MODEL18ASM01")
            Me.columnMODEL18ASM02 = MyBase.Columns("MODEL18ASM02")
            Me.columnMODEL18ASM03 = MyBase.Columns("MODEL18ASM03")
            Me.columnMODEL18ASM04 = MyBase.Columns("MODEL18ASM04")
            Me.columnMODEL18ASM05 = MyBase.Columns("MODEL18ASM05")
            Me.columnMODEL19ASM01 = MyBase.Columns("MODEL19ASM01")
            Me.columnMODEL19ASM02 = MyBase.Columns("MODEL19ASM02")
            Me.columnMODEL19ASM03 = MyBase.Columns("MODEL19ASM03")
            Me.columnMODEL19ASM04 = MyBase.Columns("MODEL19ASM04")
            Me.columnMODEL19ASM05 = MyBase.Columns("MODEL19ASM05")
            Me.columnMODEL20ASM01 = MyBase.Columns("MODEL20ASM01")
            Me.columnMODEL20ASM02 = MyBase.Columns("MODEL20ASM02")
            Me.columnMODEL20ASM03 = MyBase.Columns("MODEL20ASM03")
            Me.columnMODEL20ASM04 = MyBase.Columns("MODEL20ASM04")
            Me.columnMODEL20ASM05 = MyBase.Columns("MODEL20ASM05")
            Me.columnReserve01 = MyBase.Columns("Reserve01")
            Me.columnReserve02 = MyBase.Columns("Reserve02")
            Me.columnSubSeq = MyBase.Columns("SubSeq")
            Me.columnXchgFlag = MyBase.Columns("XchgFlag")
            Me.columnInstructFlag = MyBase.Columns("InstructFlag")
            Me.columnFileName = MyBase.Columns("FileName")
            Me.columnSEQ_DESC = MyBase.Columns("SEQ_DESC")
            Me.columnindexNo = MyBase.Columns("indexNo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSeqNo = New Global.System.Data.DataColumn("SeqNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeqNo)
            Me.columnModelYear = New Global.System.Data.DataColumn("ModelYear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelYear)
            Me.columnSuffixCode = New Global.System.Data.DataColumn("SuffixCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuffixCode)
            Me.columnLotID = New Global.System.Data.DataColumn("LotID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotID)
            Me.columnLotNo = New Global.System.Data.DataColumn("LotNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotNo)
            Me.columnUnit = New Global.System.Data.DataColumn("Unit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnit)
            Me.columnBlockModel = New Global.System.Data.DataColumn("BlockModel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlockModel)
            Me.columnBlockSeq = New Global.System.Data.DataColumn("BlockSeq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlockSeq)
            Me.columnMARK = New Global.System.Data.DataColumn("MARK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMARK)
            Me.columnProductionDate = New Global.System.Data.DataColumn("ProductionDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductionDate)
            Me.columnProductionTime = New Global.System.Data.DataColumn("ProductionTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductionTime)
            Me.columnImportCode = New Global.System.Data.DataColumn("ImportCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImportCode)
            Me.columnYChassisFlag = New Global.System.Data.DataColumn("YChassisFlag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYChassisFlag)
            Me.columnGAShop = New Global.System.Data.DataColumn("GAShop", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGAShop)
            Me.columnHanmmerYears = New Global.System.Data.DataColumn("HanmmerYears", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHanmmerYears)
            Me.columnMODEL01ASM01 = New Global.System.Data.DataColumn("MODEL01ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL01ASM01)
            Me.columnMODEL01ASM02 = New Global.System.Data.DataColumn("MODEL01ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL01ASM02)
            Me.columnMODEL01ASM03 = New Global.System.Data.DataColumn("MODEL01ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL01ASM03)
            Me.columnMODEL01ASM04 = New Global.System.Data.DataColumn("MODEL01ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL01ASM04)
            Me.columnMODEL01ASM05 = New Global.System.Data.DataColumn("MODEL01ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL01ASM05)
            Me.columnMODEL02ASM01 = New Global.System.Data.DataColumn("MODEL02ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL02ASM01)
            Me.columnMODEL02ASM02 = New Global.System.Data.DataColumn("MODEL02ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL02ASM02)
            Me.columnMODEL02ASM03 = New Global.System.Data.DataColumn("MODEL02ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL02ASM03)
            Me.columnMODEL02ASM04 = New Global.System.Data.DataColumn("MODEL02ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL02ASM04)
            Me.columnMODEL02ASM05 = New Global.System.Data.DataColumn("MODEL02ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL02ASM05)
            Me.columnMODEL03ASM01 = New Global.System.Data.DataColumn("MODEL03ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL03ASM01)
            Me.columnMODEL03ASM02 = New Global.System.Data.DataColumn("MODEL03ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL03ASM02)
            Me.columnMODEL03ASM03 = New Global.System.Data.DataColumn("MODEL03ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL03ASM03)
            Me.columnMODEL03ASM04 = New Global.System.Data.DataColumn("MODEL03ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL03ASM04)
            Me.columnMODEL03ASM05 = New Global.System.Data.DataColumn("MODEL03ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL03ASM05)
            Me.columnMODEL04ASM01 = New Global.System.Data.DataColumn("MODEL04ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL04ASM01)
            Me.columnMODEL04ASM02 = New Global.System.Data.DataColumn("MODEL04ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL04ASM02)
            Me.columnMODEL04ASM03 = New Global.System.Data.DataColumn("MODEL04ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL04ASM03)
            Me.columnMODEL04ASM04 = New Global.System.Data.DataColumn("MODEL04ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL04ASM04)
            Me.columnMODEL04ASM05 = New Global.System.Data.DataColumn("MODEL04ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL04ASM05)
            Me.columnMODEL05ASM01 = New Global.System.Data.DataColumn("MODEL05ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL05ASM01)
            Me.columnMODEL05ASM02 = New Global.System.Data.DataColumn("MODEL05ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL05ASM02)
            Me.columnMODEL05ASM03 = New Global.System.Data.DataColumn("MODEL05ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL05ASM03)
            Me.columnMODEL05ASM04 = New Global.System.Data.DataColumn("MODEL05ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL05ASM04)
            Me.columnMODEL05ASM05 = New Global.System.Data.DataColumn("MODEL05ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL05ASM05)
            Me.columnMODEL06ASM01 = New Global.System.Data.DataColumn("MODEL06ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL06ASM01)
            Me.columnMODEL06ASM02 = New Global.System.Data.DataColumn("MODEL06ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL06ASM02)
            Me.columnMODEL06ASM03 = New Global.System.Data.DataColumn("MODEL06ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL06ASM03)
            Me.columnMODEL06ASM04 = New Global.System.Data.DataColumn("MODEL06ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL06ASM04)
            Me.columnMODEL06ASM05 = New Global.System.Data.DataColumn("MODEL06ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL06ASM05)
            Me.columnMODEL07ASM01 = New Global.System.Data.DataColumn("MODEL07ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL07ASM01)
            Me.columnMODEL07ASM02 = New Global.System.Data.DataColumn("MODEL07ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL07ASM02)
            Me.columnMODEL07ASM03 = New Global.System.Data.DataColumn("MODEL07ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL07ASM03)
            Me.columnMODEL07ASM04 = New Global.System.Data.DataColumn("MODEL07ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL07ASM04)
            Me.columnMODEL07ASM05 = New Global.System.Data.DataColumn("MODEL07ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL07ASM05)
            Me.columnMODEL08ASM01 = New Global.System.Data.DataColumn("MODEL08ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL08ASM01)
            Me.columnMODEL08ASM02 = New Global.System.Data.DataColumn("MODEL08ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL08ASM02)
            Me.columnMODEL08ASM03 = New Global.System.Data.DataColumn("MODEL08ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL08ASM03)
            Me.columnMODEL08ASM04 = New Global.System.Data.DataColumn("MODEL08ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL08ASM04)
            Me.columnMODEL08ASM05 = New Global.System.Data.DataColumn("MODEL08ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL08ASM05)
            Me.columnMODEL09ASM01 = New Global.System.Data.DataColumn("MODEL09ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL09ASM01)
            Me.columnMODEL09ASM02 = New Global.System.Data.DataColumn("MODEL09ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL09ASM02)
            Me.columnMODEL09ASM03 = New Global.System.Data.DataColumn("MODEL09ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL09ASM03)
            Me.columnMODEL09ASM04 = New Global.System.Data.DataColumn("MODEL09ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL09ASM04)
            Me.columnMODEL09ASM05 = New Global.System.Data.DataColumn("MODEL09ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL09ASM05)
            Me.columnMODEL10ASM01 = New Global.System.Data.DataColumn("MODEL10ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL10ASM01)
            Me.columnMODEL10ASM02 = New Global.System.Data.DataColumn("MODEL10ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL10ASM02)
            Me.columnMODEL10ASM03 = New Global.System.Data.DataColumn("MODEL10ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL10ASM03)
            Me.columnMODEL10ASM04 = New Global.System.Data.DataColumn("MODEL10ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL10ASM04)
            Me.columnMODEL10ASM05 = New Global.System.Data.DataColumn("MODEL10ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL10ASM05)
            Me.columnMODEL11ASM01 = New Global.System.Data.DataColumn("MODEL11ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL11ASM01)
            Me.columnMODEL11ASM02 = New Global.System.Data.DataColumn("MODEL11ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL11ASM02)
            Me.columnMODEL11ASM03 = New Global.System.Data.DataColumn("MODEL11ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL11ASM03)
            Me.columnMODEL11ASM04 = New Global.System.Data.DataColumn("MODEL11ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL11ASM04)
            Me.columnMODEL11ASM05 = New Global.System.Data.DataColumn("MODEL11ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL11ASM05)
            Me.columnMODEL12ASM01 = New Global.System.Data.DataColumn("MODEL12ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL12ASM01)
            Me.columnMODEL12ASM02 = New Global.System.Data.DataColumn("MODEL12ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL12ASM02)
            Me.columnMODEL12ASM03 = New Global.System.Data.DataColumn("MODEL12ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL12ASM03)
            Me.columnMODEL12ASM04 = New Global.System.Data.DataColumn("MODEL12ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL12ASM04)
            Me.columnMODEL12ASM05 = New Global.System.Data.DataColumn("MODEL12ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL12ASM05)
            Me.columnMODEL13ASM01 = New Global.System.Data.DataColumn("MODEL13ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL13ASM01)
            Me.columnMODEL13ASM02 = New Global.System.Data.DataColumn("MODEL13ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL13ASM02)
            Me.columnMODEL13ASM03 = New Global.System.Data.DataColumn("MODEL13ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL13ASM03)
            Me.columnMODEL13ASM04 = New Global.System.Data.DataColumn("MODEL13ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL13ASM04)
            Me.columnMODEL13ASM05 = New Global.System.Data.DataColumn("MODEL13ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL13ASM05)
            Me.columnMODEL14ASM01 = New Global.System.Data.DataColumn("MODEL14ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL14ASM01)
            Me.columnMODEL14ASM02 = New Global.System.Data.DataColumn("MODEL14ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL14ASM02)
            Me.columnMODEL14ASM03 = New Global.System.Data.DataColumn("MODEL14ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL14ASM03)
            Me.columnMODEL14ASM04 = New Global.System.Data.DataColumn("MODEL14ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL14ASM04)
            Me.columnMODEL14ASM05 = New Global.System.Data.DataColumn("MODEL14ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL14ASM05)
            Me.columnMODEL15ASM01 = New Global.System.Data.DataColumn("MODEL15ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL15ASM01)
            Me.columnMODEL15ASM02 = New Global.System.Data.DataColumn("MODEL15ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL15ASM02)
            Me.columnMODEL15ASM03 = New Global.System.Data.DataColumn("MODEL15ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL15ASM03)
            Me.columnMODEL15ASM04 = New Global.System.Data.DataColumn("MODEL15ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL15ASM04)
            Me.columnMODEL15ASM05 = New Global.System.Data.DataColumn("MODEL15ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL15ASM05)
            Me.columnMODEL16ASM01 = New Global.System.Data.DataColumn("MODEL16ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL16ASM01)
            Me.columnMODEL16ASM02 = New Global.System.Data.DataColumn("MODEL16ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL16ASM02)
            Me.columnMODEL16ASM03 = New Global.System.Data.DataColumn("MODEL16ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL16ASM03)
            Me.columnMODEL16ASM04 = New Global.System.Data.DataColumn("MODEL16ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL16ASM04)
            Me.columnMODEL16ASM05 = New Global.System.Data.DataColumn("MODEL16ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL16ASM05)
            Me.columnMODEL17ASM01 = New Global.System.Data.DataColumn("MODEL17ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL17ASM01)
            Me.columnMODEL17ASM02 = New Global.System.Data.DataColumn("MODEL17ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL17ASM02)
            Me.columnMODEL17ASM03 = New Global.System.Data.DataColumn("MODEL17ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL17ASM03)
            Me.columnMODEL17ASM04 = New Global.System.Data.DataColumn("MODEL17ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL17ASM04)
            Me.columnMODEL17ASM05 = New Global.System.Data.DataColumn("MODEL17ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL17ASM05)
            Me.columnMODEL18ASM01 = New Global.System.Data.DataColumn("MODEL18ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL18ASM01)
            Me.columnMODEL18ASM02 = New Global.System.Data.DataColumn("MODEL18ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL18ASM02)
            Me.columnMODEL18ASM03 = New Global.System.Data.DataColumn("MODEL18ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL18ASM03)
            Me.columnMODEL18ASM04 = New Global.System.Data.DataColumn("MODEL18ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL18ASM04)
            Me.columnMODEL18ASM05 = New Global.System.Data.DataColumn("MODEL18ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL18ASM05)
            Me.columnMODEL19ASM01 = New Global.System.Data.DataColumn("MODEL19ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL19ASM01)
            Me.columnMODEL19ASM02 = New Global.System.Data.DataColumn("MODEL19ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL19ASM02)
            Me.columnMODEL19ASM03 = New Global.System.Data.DataColumn("MODEL19ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL19ASM03)
            Me.columnMODEL19ASM04 = New Global.System.Data.DataColumn("MODEL19ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL19ASM04)
            Me.columnMODEL19ASM05 = New Global.System.Data.DataColumn("MODEL19ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL19ASM05)
            Me.columnMODEL20ASM01 = New Global.System.Data.DataColumn("MODEL20ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL20ASM01)
            Me.columnMODEL20ASM02 = New Global.System.Data.DataColumn("MODEL20ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL20ASM02)
            Me.columnMODEL20ASM03 = New Global.System.Data.DataColumn("MODEL20ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL20ASM03)
            Me.columnMODEL20ASM04 = New Global.System.Data.DataColumn("MODEL20ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL20ASM04)
            Me.columnMODEL20ASM05 = New Global.System.Data.DataColumn("MODEL20ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL20ASM05)
            Me.columnReserve01 = New Global.System.Data.DataColumn("Reserve01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReserve01)
            Me.columnReserve02 = New Global.System.Data.DataColumn("Reserve02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReserve02)
            Me.columnSubSeq = New Global.System.Data.DataColumn("SubSeq", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubSeq)
            Me.columnXchgFlag = New Global.System.Data.DataColumn("XchgFlag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXchgFlag)
            Me.columnInstructFlag = New Global.System.Data.DataColumn("InstructFlag", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstructFlag)
            Me.columnFileName = New Global.System.Data.DataColumn("FileName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFileName)
            Me.columnSEQ_DESC = New Global.System.Data.DataColumn("SEQ_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQ_DESC)
            Me.columnindexNo = New Global.System.Data.DataColumn("indexNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindexNo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnModelYear, Me.columnSuffixCode, Me.columnLotNo, Me.columnUnit}, true))
            Me.columnSeqNo.AllowDBNull = false
            Me.columnSeqNo.MaxLength = 5
            Me.columnModelYear.AllowDBNull = false
            Me.columnModelYear.MaxLength = 3
            Me.columnSuffixCode.AllowDBNull = false
            Me.columnSuffixCode.MaxLength = 5
            Me.columnLotID.AllowDBNull = false
            Me.columnLotID.MaxLength = 3
            Me.columnLotNo.AllowDBNull = false
            Me.columnLotNo.MaxLength = 3
            Me.columnUnit.AllowDBNull = false
            Me.columnUnit.MaxLength = 3
            Me.columnBlockModel.MaxLength = 8
            Me.columnBlockSeq.MaxLength = 3
            Me.columnMARK.MaxLength = 3
            Me.columnProductionDate.MaxLength = 8
            Me.columnProductionTime.MaxLength = 4
            Me.columnImportCode.MaxLength = 10
            Me.columnYChassisFlag.MaxLength = 1
            Me.columnGAShop.MaxLength = 2
            Me.columnHanmmerYears.MaxLength = 2
            Me.columnMODEL01ASM01.MaxLength = 10
            Me.columnMODEL01ASM02.MaxLength = 10
            Me.columnMODEL01ASM03.MaxLength = 10
            Me.columnMODEL01ASM04.MaxLength = 10
            Me.columnMODEL01ASM05.MaxLength = 10
            Me.columnMODEL02ASM01.MaxLength = 10
            Me.columnMODEL02ASM02.MaxLength = 10
            Me.columnMODEL02ASM03.MaxLength = 10
            Me.columnMODEL02ASM04.MaxLength = 10
            Me.columnMODEL02ASM05.MaxLength = 10
            Me.columnMODEL03ASM01.MaxLength = 10
            Me.columnMODEL03ASM02.MaxLength = 10
            Me.columnMODEL03ASM03.MaxLength = 10
            Me.columnMODEL03ASM04.MaxLength = 10
            Me.columnMODEL03ASM05.MaxLength = 10
            Me.columnMODEL04ASM01.MaxLength = 10
            Me.columnMODEL04ASM02.MaxLength = 10
            Me.columnMODEL04ASM03.MaxLength = 10
            Me.columnMODEL04ASM04.MaxLength = 10
            Me.columnMODEL04ASM05.MaxLength = 10
            Me.columnMODEL05ASM01.MaxLength = 10
            Me.columnMODEL05ASM02.MaxLength = 10
            Me.columnMODEL05ASM03.MaxLength = 10
            Me.columnMODEL05ASM04.MaxLength = 10
            Me.columnMODEL05ASM05.MaxLength = 10
            Me.columnMODEL06ASM01.MaxLength = 10
            Me.columnMODEL06ASM02.MaxLength = 10
            Me.columnMODEL06ASM03.MaxLength = 10
            Me.columnMODEL06ASM04.MaxLength = 10
            Me.columnMODEL06ASM05.MaxLength = 10
            Me.columnMODEL07ASM01.MaxLength = 10
            Me.columnMODEL07ASM02.MaxLength = 10
            Me.columnMODEL07ASM03.MaxLength = 10
            Me.columnMODEL07ASM04.MaxLength = 10
            Me.columnMODEL07ASM05.MaxLength = 10
            Me.columnMODEL08ASM01.MaxLength = 10
            Me.columnMODEL08ASM02.MaxLength = 10
            Me.columnMODEL08ASM03.MaxLength = 10
            Me.columnMODEL08ASM04.MaxLength = 10
            Me.columnMODEL08ASM05.MaxLength = 10
            Me.columnMODEL09ASM01.MaxLength = 10
            Me.columnMODEL09ASM02.MaxLength = 10
            Me.columnMODEL09ASM03.MaxLength = 10
            Me.columnMODEL09ASM04.MaxLength = 10
            Me.columnMODEL09ASM05.MaxLength = 10
            Me.columnMODEL10ASM01.MaxLength = 10
            Me.columnMODEL10ASM02.MaxLength = 10
            Me.columnMODEL10ASM03.MaxLength = 10
            Me.columnMODEL10ASM04.MaxLength = 10
            Me.columnMODEL10ASM05.MaxLength = 10
            Me.columnMODEL11ASM01.MaxLength = 10
            Me.columnMODEL11ASM02.MaxLength = 10
            Me.columnMODEL11ASM03.MaxLength = 10
            Me.columnMODEL11ASM04.MaxLength = 10
            Me.columnMODEL11ASM05.MaxLength = 10
            Me.columnMODEL12ASM01.MaxLength = 10
            Me.columnMODEL12ASM02.MaxLength = 10
            Me.columnMODEL12ASM03.MaxLength = 10
            Me.columnMODEL12ASM04.MaxLength = 10
            Me.columnMODEL12ASM05.MaxLength = 10
            Me.columnMODEL13ASM01.MaxLength = 10
            Me.columnMODEL13ASM02.MaxLength = 10
            Me.columnMODEL13ASM03.MaxLength = 10
            Me.columnMODEL13ASM04.MaxLength = 10
            Me.columnMODEL13ASM05.MaxLength = 10
            Me.columnMODEL14ASM01.MaxLength = 10
            Me.columnMODEL14ASM02.MaxLength = 10
            Me.columnMODEL14ASM03.MaxLength = 10
            Me.columnMODEL14ASM04.MaxLength = 10
            Me.columnMODEL14ASM05.MaxLength = 10
            Me.columnMODEL15ASM01.MaxLength = 10
            Me.columnMODEL15ASM02.MaxLength = 10
            Me.columnMODEL15ASM03.MaxLength = 10
            Me.columnMODEL15ASM04.MaxLength = 10
            Me.columnMODEL15ASM05.MaxLength = 10
            Me.columnMODEL16ASM01.MaxLength = 10
            Me.columnMODEL16ASM02.MaxLength = 10
            Me.columnMODEL16ASM03.MaxLength = 10
            Me.columnMODEL16ASM04.MaxLength = 10
            Me.columnMODEL16ASM05.MaxLength = 10
            Me.columnMODEL17ASM01.MaxLength = 10
            Me.columnMODEL17ASM02.MaxLength = 10
            Me.columnMODEL17ASM03.MaxLength = 10
            Me.columnMODEL17ASM04.MaxLength = 10
            Me.columnMODEL17ASM05.MaxLength = 10
            Me.columnMODEL18ASM01.MaxLength = 10
            Me.columnMODEL18ASM02.MaxLength = 10
            Me.columnMODEL18ASM03.MaxLength = 10
            Me.columnMODEL18ASM04.MaxLength = 10
            Me.columnMODEL18ASM05.MaxLength = 10
            Me.columnMODEL19ASM01.MaxLength = 10
            Me.columnMODEL19ASM02.MaxLength = 10
            Me.columnMODEL19ASM03.MaxLength = 10
            Me.columnMODEL19ASM04.MaxLength = 10
            Me.columnMODEL19ASM05.MaxLength = 10
            Me.columnMODEL20ASM01.MaxLength = 10
            Me.columnMODEL20ASM02.MaxLength = 10
            Me.columnMODEL20ASM03.MaxLength = 10
            Me.columnMODEL20ASM04.MaxLength = 10
            Me.columnMODEL20ASM05.MaxLength = 10
            Me.columnReserve01.MaxLength = 100
            Me.columnReserve02.MaxLength = 100
            Me.columnXchgFlag.MaxLength = 4
            Me.columnFileName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewT_Production_DATRow() As T_Production_DATRow
            Return CType(Me.NewRow,T_Production_DATRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New T_Production_DATRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(T_Production_DATRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.T_Production_DATRowChangedEvent) Is Nothing) Then
                RaiseEvent T_Production_DATRowChanged(Me, New T_Production_DATRowChangeEvent(CType(e.Row,T_Production_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.T_Production_DATRowChangingEvent) Is Nothing) Then
                RaiseEvent T_Production_DATRowChanging(Me, New T_Production_DATRowChangeEvent(CType(e.Row,T_Production_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.T_Production_DATRowDeletedEvent) Is Nothing) Then
                RaiseEvent T_Production_DATRowDeleted(Me, New T_Production_DATRowChangeEvent(CType(e.Row,T_Production_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.T_Production_DATRowDeletingEvent) Is Nothing) Then
                RaiseEvent T_Production_DATRowDeleting(Me, New T_Production_DATRowChangeEvent(CType(e.Row,T_Production_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveT_Production_DATRow(ByVal row As T_Production_DATRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DataSet1 = New DataSet1
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "T_Production_DATDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class T_Instruction_DATDataTable
        Inherits Global.System.Data.TypedTableBase(Of T_Instruction_DATRow)
        
        Private columnSeqNo As Global.System.Data.DataColumn
        
        Private columnModelYear As Global.System.Data.DataColumn
        
        Private columnSuffixCode As Global.System.Data.DataColumn
        
        Private columnLotID As Global.System.Data.DataColumn
        
        Private columnLotNo As Global.System.Data.DataColumn
        
        Private columnUnit As Global.System.Data.DataColumn
        
        Private columnBlockModel As Global.System.Data.DataColumn
        
        Private columnBlockSeq As Global.System.Data.DataColumn
        
        Private columnMARK As Global.System.Data.DataColumn
        
        Private columnProductionDate As Global.System.Data.DataColumn
        
        Private columnProductionTime As Global.System.Data.DataColumn
        
        Private columnImportCode As Global.System.Data.DataColumn
        
        Private columnYChassisFlag As Global.System.Data.DataColumn
        
        Private columnGAShop As Global.System.Data.DataColumn
        
        Private columnHanmmerYears As Global.System.Data.DataColumn
        
        Private columnASM01 As Global.System.Data.DataColumn
        
        Private columnASM02 As Global.System.Data.DataColumn
        
        Private columnASM03 As Global.System.Data.DataColumn
        
        Private columnASM04 As Global.System.Data.DataColumn
        
        Private columnASM05 As Global.System.Data.DataColumn
        
        Private columnXchgFlag As Global.System.Data.DataColumn
        
        Private columnInsResult As Global.System.Data.DataColumn
        
        Private columnInsPassFlag As Global.System.Data.DataColumn
        
        Private columnLine_No As Global.System.Data.DataColumn
        
        Private columnCarrResult As Global.System.Data.DataColumn
        
        Private columnCarrPassFlag As Global.System.Data.DataColumn
        
        Private columnSubSeq As Global.System.Data.DataColumn
        
        Private columnindexNo As Global.System.Data.DataColumn
        
        Private columnBelowDelFlag As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "T_Instruction_DAT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SeqNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeqNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ModelYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SuffixCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuffixCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LotIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LotNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BlockModelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlockModel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BlockSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlockSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MARKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMARK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProductionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProductionTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductionTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ImportCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImportCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YChassisFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYChassisFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GAShopColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGAShop
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HanmmerYearsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHanmmerYears
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASM01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnASM01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASM02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnASM02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASM03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnASM03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASM04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnASM04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASM05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnASM05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property XchgFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXchgFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsResult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsPassFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsPassFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Line_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLine_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CarrResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCarrResult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CarrPassFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCarrPassFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SubSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property indexNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnindexNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BelowDelFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBelowDelFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As T_Instruction_DATRow
            Get
                Return CType(Me.Rows(index),T_Instruction_DATRow)
            End Get
        End Property
        
        Public Event T_Instruction_DATRowChanging As T_Instruction_DATRowChangeEventHandler
        
        Public Event T_Instruction_DATRowChanged As T_Instruction_DATRowChangeEventHandler
        
        Public Event T_Instruction_DATRowDeleting As T_Instruction_DATRowChangeEventHandler
        
        Public Event T_Instruction_DATRowDeleted As T_Instruction_DATRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddT_Instruction_DATRow(ByVal row As T_Instruction_DATRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddT_Instruction_DATRow( _
                    ByVal SeqNo As String,  _
                    ByVal ModelYear As String,  _
                    ByVal SuffixCode As String,  _
                    ByVal LotID As String,  _
                    ByVal LotNo As String,  _
                    ByVal Unit As String,  _
                    ByVal BlockModel As String,  _
                    ByVal BlockSeq As String,  _
                    ByVal MARK As String,  _
                    ByVal ProductionDate As String,  _
                    ByVal ProductionTime As String,  _
                    ByVal ImportCode As String,  _
                    ByVal YChassisFlag As String,  _
                    ByVal GAShop As String,  _
                    ByVal HanmmerYears As String,  _
                    ByVal ASM01 As String,  _
                    ByVal ASM02 As String,  _
                    ByVal ASM03 As String,  _
                    ByVal ASM04 As String,  _
                    ByVal ASM05 As String,  _
                    ByVal XchgFlag As String,  _
                    ByVal InsResult As Date,  _
                    ByVal InsPassFlag As Boolean,  _
                    ByVal Line_No As Integer,  _
                    ByVal CarrResult As Date,  _
                    ByVal CarrPassFlag As Boolean,  _
                    ByVal SubSeq As Integer,  _
                    ByVal indexNo As String,  _
                    ByVal BelowDelFlag As Boolean) As T_Instruction_DATRow
            Dim rowT_Instruction_DATRow As T_Instruction_DATRow = CType(Me.NewRow,T_Instruction_DATRow)
            Dim columnValuesArray() As Object = New Object() {SeqNo, ModelYear, SuffixCode, LotID, LotNo, Unit, BlockModel, BlockSeq, MARK, ProductionDate, ProductionTime, ImportCode, YChassisFlag, GAShop, HanmmerYears, ASM01, ASM02, ASM03, ASM04, ASM05, XchgFlag, InsResult, InsPassFlag, Line_No, CarrResult, CarrPassFlag, SubSeq, indexNo, BelowDelFlag}
            rowT_Instruction_DATRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowT_Instruction_DATRow)
            Return rowT_Instruction_DATRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByModelYearSuffixCodeLotNoUnitLine_No(ByVal ModelYear As String, ByVal SuffixCode As String, ByVal LotNo As String, ByVal Unit As String, ByVal Line_No As Integer) As T_Instruction_DATRow
            Return CType(Me.Rows.Find(New Object() {ModelYear, SuffixCode, LotNo, Unit, Line_No}),T_Instruction_DATRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As T_Instruction_DATDataTable = CType(MyBase.Clone,T_Instruction_DATDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New T_Instruction_DATDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSeqNo = MyBase.Columns("SeqNo")
            Me.columnModelYear = MyBase.Columns("ModelYear")
            Me.columnSuffixCode = MyBase.Columns("SuffixCode")
            Me.columnLotID = MyBase.Columns("LotID")
            Me.columnLotNo = MyBase.Columns("LotNo")
            Me.columnUnit = MyBase.Columns("Unit")
            Me.columnBlockModel = MyBase.Columns("BlockModel")
            Me.columnBlockSeq = MyBase.Columns("BlockSeq")
            Me.columnMARK = MyBase.Columns("MARK")
            Me.columnProductionDate = MyBase.Columns("ProductionDate")
            Me.columnProductionTime = MyBase.Columns("ProductionTime")
            Me.columnImportCode = MyBase.Columns("ImportCode")
            Me.columnYChassisFlag = MyBase.Columns("YChassisFlag")
            Me.columnGAShop = MyBase.Columns("GAShop")
            Me.columnHanmmerYears = MyBase.Columns("HanmmerYears")
            Me.columnASM01 = MyBase.Columns("ASM01")
            Me.columnASM02 = MyBase.Columns("ASM02")
            Me.columnASM03 = MyBase.Columns("ASM03")
            Me.columnASM04 = MyBase.Columns("ASM04")
            Me.columnASM05 = MyBase.Columns("ASM05")
            Me.columnXchgFlag = MyBase.Columns("XchgFlag")
            Me.columnInsResult = MyBase.Columns("InsResult")
            Me.columnInsPassFlag = MyBase.Columns("InsPassFlag")
            Me.columnLine_No = MyBase.Columns("Line_No")
            Me.columnCarrResult = MyBase.Columns("CarrResult")
            Me.columnCarrPassFlag = MyBase.Columns("CarrPassFlag")
            Me.columnSubSeq = MyBase.Columns("SubSeq")
            Me.columnindexNo = MyBase.Columns("indexNo")
            Me.columnBelowDelFlag = MyBase.Columns("BelowDelFlag")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSeqNo = New Global.System.Data.DataColumn("SeqNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeqNo)
            Me.columnModelYear = New Global.System.Data.DataColumn("ModelYear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelYear)
            Me.columnSuffixCode = New Global.System.Data.DataColumn("SuffixCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuffixCode)
            Me.columnLotID = New Global.System.Data.DataColumn("LotID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotID)
            Me.columnLotNo = New Global.System.Data.DataColumn("LotNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotNo)
            Me.columnUnit = New Global.System.Data.DataColumn("Unit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnit)
            Me.columnBlockModel = New Global.System.Data.DataColumn("BlockModel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlockModel)
            Me.columnBlockSeq = New Global.System.Data.DataColumn("BlockSeq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlockSeq)
            Me.columnMARK = New Global.System.Data.DataColumn("MARK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMARK)
            Me.columnProductionDate = New Global.System.Data.DataColumn("ProductionDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductionDate)
            Me.columnProductionTime = New Global.System.Data.DataColumn("ProductionTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductionTime)
            Me.columnImportCode = New Global.System.Data.DataColumn("ImportCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImportCode)
            Me.columnYChassisFlag = New Global.System.Data.DataColumn("YChassisFlag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYChassisFlag)
            Me.columnGAShop = New Global.System.Data.DataColumn("GAShop", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGAShop)
            Me.columnHanmmerYears = New Global.System.Data.DataColumn("HanmmerYears", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHanmmerYears)
            Me.columnASM01 = New Global.System.Data.DataColumn("ASM01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASM01)
            Me.columnASM02 = New Global.System.Data.DataColumn("ASM02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASM02)
            Me.columnASM03 = New Global.System.Data.DataColumn("ASM03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASM03)
            Me.columnASM04 = New Global.System.Data.DataColumn("ASM04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASM04)
            Me.columnASM05 = New Global.System.Data.DataColumn("ASM05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASM05)
            Me.columnXchgFlag = New Global.System.Data.DataColumn("XchgFlag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXchgFlag)
            Me.columnInsResult = New Global.System.Data.DataColumn("InsResult", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsResult)
            Me.columnInsPassFlag = New Global.System.Data.DataColumn("InsPassFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsPassFlag)
            Me.columnLine_No = New Global.System.Data.DataColumn("Line_No", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLine_No)
            Me.columnCarrResult = New Global.System.Data.DataColumn("CarrResult", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCarrResult)
            Me.columnCarrPassFlag = New Global.System.Data.DataColumn("CarrPassFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCarrPassFlag)
            Me.columnSubSeq = New Global.System.Data.DataColumn("SubSeq", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubSeq)
            Me.columnindexNo = New Global.System.Data.DataColumn("indexNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindexNo)
            Me.columnBelowDelFlag = New Global.System.Data.DataColumn("BelowDelFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBelowDelFlag)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnModelYear, Me.columnSuffixCode, Me.columnLotNo, Me.columnUnit, Me.columnLine_No}, true))
            Me.columnSeqNo.AllowDBNull = false
            Me.columnSeqNo.MaxLength = 5
            Me.columnModelYear.AllowDBNull = false
            Me.columnModelYear.MaxLength = 3
            Me.columnSuffixCode.AllowDBNull = false
            Me.columnSuffixCode.MaxLength = 5
            Me.columnLotID.AllowDBNull = false
            Me.columnLotID.MaxLength = 3
            Me.columnLotNo.AllowDBNull = false
            Me.columnLotNo.MaxLength = 3
            Me.columnUnit.AllowDBNull = false
            Me.columnUnit.MaxLength = 3
            Me.columnBlockModel.MaxLength = 8
            Me.columnBlockSeq.MaxLength = 3
            Me.columnMARK.MaxLength = 3
            Me.columnProductionDate.MaxLength = 8
            Me.columnProductionTime.MaxLength = 4
            Me.columnImportCode.MaxLength = 10
            Me.columnYChassisFlag.MaxLength = 1
            Me.columnGAShop.MaxLength = 2
            Me.columnHanmmerYears.MaxLength = 2
            Me.columnASM01.MaxLength = 10
            Me.columnASM02.MaxLength = 10
            Me.columnASM03.MaxLength = 10
            Me.columnASM04.MaxLength = 10
            Me.columnASM05.MaxLength = 10
            Me.columnXchgFlag.MaxLength = 4
            Me.columnInsPassFlag.AllowDBNull = false
            Me.columnLine_No.AllowDBNull = false
            Me.columnCarrPassFlag.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewT_Instruction_DATRow() As T_Instruction_DATRow
            Return CType(Me.NewRow,T_Instruction_DATRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New T_Instruction_DATRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(T_Instruction_DATRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.T_Instruction_DATRowChangedEvent) Is Nothing) Then
                RaiseEvent T_Instruction_DATRowChanged(Me, New T_Instruction_DATRowChangeEvent(CType(e.Row,T_Instruction_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.T_Instruction_DATRowChangingEvent) Is Nothing) Then
                RaiseEvent T_Instruction_DATRowChanging(Me, New T_Instruction_DATRowChangeEvent(CType(e.Row,T_Instruction_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.T_Instruction_DATRowDeletedEvent) Is Nothing) Then
                RaiseEvent T_Instruction_DATRowDeleted(Me, New T_Instruction_DATRowChangeEvent(CType(e.Row,T_Instruction_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.T_Instruction_DATRowDeletingEvent) Is Nothing) Then
                RaiseEvent T_Instruction_DATRowDeleting(Me, New T_Instruction_DATRowChangeEvent(CType(e.Row,T_Instruction_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveT_Instruction_DATRow(ByVal row As T_Instruction_DATRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DataSet1 = New DataSet1
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "T_Instruction_DATDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class T_Line_MSTDataTable
        Inherits Global.System.Data.TypedTableBase(Of T_Line_MSTRow)
        
        Private columnLineCode As Global.System.Data.DataColumn
        
        Private columnLineName As Global.System.Data.DataColumn
        
        Private columnLineType As Global.System.Data.DataColumn
        
        Private columnMainLineFlag As Global.System.Data.DataColumn
        
        Private columnOnlineFlag As Global.System.Data.DataColumn
        
        Private columnIpAddress As Global.System.Data.DataColumn
        
        Private columnNetAddress As Global.System.Data.DataColumn
        
        Private columnNodeAddress As Global.System.Data.DataColumn
        
        Private columnUnitAddress As Global.System.Data.DataColumn
        
        Private columnReadReqAddress As Global.System.Data.DataColumn
        
        Private columnWriteProductionAddress As Global.System.Data.DataColumn
        
        Private columnWriteCarryOutAddress As Global.System.Data.DataColumn
        
        Private columnPart1 As Global.System.Data.DataColumn
        
        Private columnPart2 As Global.System.Data.DataColumn
        
        Private columnPart3 As Global.System.Data.DataColumn
        
        Private columnPart4 As Global.System.Data.DataColumn
        
        Private columnPart5 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "T_Line_MST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LineCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LineNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LineTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MainLineFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainLineFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OnlineFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOnlineFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IpAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIpAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NetAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NodeAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNodeAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UnitAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnitAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ReadReqAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReadReqAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WriteProductionAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWriteProductionAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WriteCarryOutAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWriteCarryOutAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Part1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPart1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Part2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPart2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Part3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPart3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Part4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPart4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Part5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPart5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As T_Line_MSTRow
            Get
                Return CType(Me.Rows(index),T_Line_MSTRow)
            End Get
        End Property
        
        Public Event T_Line_MSTRowChanging As T_Line_MSTRowChangeEventHandler
        
        Public Event T_Line_MSTRowChanged As T_Line_MSTRowChangeEventHandler
        
        Public Event T_Line_MSTRowDeleting As T_Line_MSTRowChangeEventHandler
        
        Public Event T_Line_MSTRowDeleted As T_Line_MSTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddT_Line_MSTRow(ByVal row As T_Line_MSTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddT_Line_MSTRow( _
                    ByVal LineCode As Integer,  _
                    ByVal LineName As String,  _
                    ByVal LineType As Integer,  _
                    ByVal MainLineFlag As Boolean,  _
                    ByVal OnlineFlag As Boolean,  _
                    ByVal IpAddress As String,  _
                    ByVal NetAddress As Integer,  _
                    ByVal NodeAddress As Integer,  _
                    ByVal UnitAddress As Integer,  _
                    ByVal ReadReqAddress As Integer,  _
                    ByVal WriteProductionAddress As Integer,  _
                    ByVal WriteCarryOutAddress As Integer,  _
                    ByVal Part1 As Boolean,  _
                    ByVal Part2 As Boolean,  _
                    ByVal Part3 As Boolean,  _
                    ByVal Part4 As Boolean,  _
                    ByVal Part5 As Boolean) As T_Line_MSTRow
            Dim rowT_Line_MSTRow As T_Line_MSTRow = CType(Me.NewRow,T_Line_MSTRow)
            Dim columnValuesArray() As Object = New Object() {LineCode, LineName, LineType, MainLineFlag, OnlineFlag, IpAddress, NetAddress, NodeAddress, UnitAddress, ReadReqAddress, WriteProductionAddress, WriteCarryOutAddress, Part1, Part2, Part3, Part4, Part5}
            rowT_Line_MSTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowT_Line_MSTRow)
            Return rowT_Line_MSTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByLineCode(ByVal LineCode As Integer) As T_Line_MSTRow
            Return CType(Me.Rows.Find(New Object() {LineCode}),T_Line_MSTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As T_Line_MSTDataTable = CType(MyBase.Clone,T_Line_MSTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New T_Line_MSTDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnLineCode = MyBase.Columns("LineCode")
            Me.columnLineName = MyBase.Columns("LineName")
            Me.columnLineType = MyBase.Columns("LineType")
            Me.columnMainLineFlag = MyBase.Columns("MainLineFlag")
            Me.columnOnlineFlag = MyBase.Columns("OnlineFlag")
            Me.columnIpAddress = MyBase.Columns("IpAddress")
            Me.columnNetAddress = MyBase.Columns("NetAddress")
            Me.columnNodeAddress = MyBase.Columns("NodeAddress")
            Me.columnUnitAddress = MyBase.Columns("UnitAddress")
            Me.columnReadReqAddress = MyBase.Columns("ReadReqAddress")
            Me.columnWriteProductionAddress = MyBase.Columns("WriteProductionAddress")
            Me.columnWriteCarryOutAddress = MyBase.Columns("WriteCarryOutAddress")
            Me.columnPart1 = MyBase.Columns("Part1")
            Me.columnPart2 = MyBase.Columns("Part2")
            Me.columnPart3 = MyBase.Columns("Part3")
            Me.columnPart4 = MyBase.Columns("Part4")
            Me.columnPart5 = MyBase.Columns("Part5")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnLineCode = New Global.System.Data.DataColumn("LineCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineCode)
            Me.columnLineName = New Global.System.Data.DataColumn("LineName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineName)
            Me.columnLineType = New Global.System.Data.DataColumn("LineType", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineType)
            Me.columnMainLineFlag = New Global.System.Data.DataColumn("MainLineFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainLineFlag)
            Me.columnOnlineFlag = New Global.System.Data.DataColumn("OnlineFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOnlineFlag)
            Me.columnIpAddress = New Global.System.Data.DataColumn("IpAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIpAddress)
            Me.columnNetAddress = New Global.System.Data.DataColumn("NetAddress", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetAddress)
            Me.columnNodeAddress = New Global.System.Data.DataColumn("NodeAddress", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNodeAddress)
            Me.columnUnitAddress = New Global.System.Data.DataColumn("UnitAddress", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnitAddress)
            Me.columnReadReqAddress = New Global.System.Data.DataColumn("ReadReqAddress", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReadReqAddress)
            Me.columnWriteProductionAddress = New Global.System.Data.DataColumn("WriteProductionAddress", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWriteProductionAddress)
            Me.columnWriteCarryOutAddress = New Global.System.Data.DataColumn("WriteCarryOutAddress", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWriteCarryOutAddress)
            Me.columnPart1 = New Global.System.Data.DataColumn("Part1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPart1)
            Me.columnPart2 = New Global.System.Data.DataColumn("Part2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPart2)
            Me.columnPart3 = New Global.System.Data.DataColumn("Part3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPart3)
            Me.columnPart4 = New Global.System.Data.DataColumn("Part4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPart4)
            Me.columnPart5 = New Global.System.Data.DataColumn("Part5", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPart5)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLineCode}, true))
            Me.columnLineCode.AllowDBNull = false
            Me.columnLineCode.Unique = true
            Me.columnLineName.MaxLength = 60
            Me.columnLineType.AllowDBNull = false
            Me.columnMainLineFlag.AllowDBNull = false
            Me.columnOnlineFlag.AllowDBNull = false
            Me.columnIpAddress.AllowDBNull = false
            Me.columnIpAddress.MaxLength = 15
            Me.columnNetAddress.AllowDBNull = false
            Me.columnNodeAddress.AllowDBNull = false
            Me.columnUnitAddress.AllowDBNull = false
            Me.columnReadReqAddress.AllowDBNull = false
            Me.columnWriteProductionAddress.AllowDBNull = false
            Me.columnWriteCarryOutAddress.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewT_Line_MSTRow() As T_Line_MSTRow
            Return CType(Me.NewRow,T_Line_MSTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New T_Line_MSTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(T_Line_MSTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.T_Line_MSTRowChangedEvent) Is Nothing) Then
                RaiseEvent T_Line_MSTRowChanged(Me, New T_Line_MSTRowChangeEvent(CType(e.Row,T_Line_MSTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.T_Line_MSTRowChangingEvent) Is Nothing) Then
                RaiseEvent T_Line_MSTRowChanging(Me, New T_Line_MSTRowChangeEvent(CType(e.Row,T_Line_MSTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.T_Line_MSTRowDeletedEvent) Is Nothing) Then
                RaiseEvent T_Line_MSTRowDeleted(Me, New T_Line_MSTRowChangeEvent(CType(e.Row,T_Line_MSTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.T_Line_MSTRowDeletingEvent) Is Nothing) Then
                RaiseEvent T_Line_MSTRowDeleting(Me, New T_Line_MSTRowChangeEvent(CType(e.Row,T_Line_MSTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveT_Line_MSTRow(ByVal row As T_Line_MSTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DataSet1 = New DataSet1
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "T_Line_MSTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class T_LOG_DATDataTable
        Inherits Global.System.Data.TypedTableBase(Of T_LOG_DATRow)
        
        Private columnindexNo As Global.System.Data.DataColumn
        
        Private columnLogType As Global.System.Data.DataColumn
        
        Private columnPcName As Global.System.Data.DataColumn
        
        Private columnOccDate As Global.System.Data.DataColumn
        
        Private columnMessage As Global.System.Data.DataColumn
        
        Private columnLineName As Global.System.Data.DataColumn
        
        Private columnLogId As Global.System.Data.DataColumn
        
        Private columnlogDetail As Global.System.Data.DataColumn
        
        Private columnDate As Global.System.Data.DataColumn
        
        Private columnTime As Global.System.Data.DataColumn
        
        Private columnLogLevel As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "T_LOG_DAT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property indexNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnindexNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LogTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PcNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPcName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OccDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOccDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MessageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMessage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LineNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LogIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property logDetailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlogDetail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LogLevelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogLevel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As T_LOG_DATRow
            Get
                Return CType(Me.Rows(index),T_LOG_DATRow)
            End Get
        End Property
        
        Public Event T_LOG_DATRowChanging As T_LOG_DATRowChangeEventHandler
        
        Public Event T_LOG_DATRowChanged As T_LOG_DATRowChangeEventHandler
        
        Public Event T_LOG_DATRowDeleting As T_LOG_DATRowChangeEventHandler
        
        Public Event T_LOG_DATRowDeleted As T_LOG_DATRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddT_LOG_DATRow(ByVal row As T_LOG_DATRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddT_LOG_DATRow(ByVal indexNo As String, ByVal LogType As Integer, ByVal PcName As String, ByVal OccDate As Date, ByVal Message As String, ByVal LineName As String, ByVal logDetail As String, ByVal _Date As String, ByVal Time As String, ByVal LogLevel As Integer) As T_LOG_DATRow
            Dim rowT_LOG_DATRow As T_LOG_DATRow = CType(Me.NewRow,T_LOG_DATRow)
            Dim columnValuesArray() As Object = New Object() {indexNo, LogType, PcName, OccDate, Message, LineName, Nothing, logDetail, _Date, Time, LogLevel}
            rowT_LOG_DATRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowT_LOG_DATRow)
            Return rowT_LOG_DATRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByLogTypeOccDateLogId(ByVal LogType As Integer, ByVal OccDate As Date, ByVal LogId As Integer) As T_LOG_DATRow
            Return CType(Me.Rows.Find(New Object() {LogType, OccDate, LogId}),T_LOG_DATRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As T_LOG_DATDataTable = CType(MyBase.Clone,T_LOG_DATDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New T_LOG_DATDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnindexNo = MyBase.Columns("indexNo")
            Me.columnLogType = MyBase.Columns("LogType")
            Me.columnPcName = MyBase.Columns("PcName")
            Me.columnOccDate = MyBase.Columns("OccDate")
            Me.columnMessage = MyBase.Columns("Message")
            Me.columnLineName = MyBase.Columns("LineName")
            Me.columnLogId = MyBase.Columns("LogId")
            Me.columnlogDetail = MyBase.Columns("logDetail")
            Me.columnDate = MyBase.Columns("Date")
            Me.columnTime = MyBase.Columns("Time")
            Me.columnLogLevel = MyBase.Columns("LogLevel")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnindexNo = New Global.System.Data.DataColumn("indexNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindexNo)
            Me.columnLogType = New Global.System.Data.DataColumn("LogType", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogType)
            Me.columnPcName = New Global.System.Data.DataColumn("PcName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPcName)
            Me.columnOccDate = New Global.System.Data.DataColumn("OccDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOccDate)
            Me.columnMessage = New Global.System.Data.DataColumn("Message", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMessage)
            Me.columnLineName = New Global.System.Data.DataColumn("LineName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineName)
            Me.columnLogId = New Global.System.Data.DataColumn("LogId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogId)
            Me.columnlogDetail = New Global.System.Data.DataColumn("logDetail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlogDetail)
            Me.columnDate = New Global.System.Data.DataColumn("Date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "DateColumn")
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnDate")
            Me.columnDate.ExtendedProperties.Add("Generator_UserColumnName", "Date")
            MyBase.Columns.Add(Me.columnDate)
            Me.columnTime = New Global.System.Data.DataColumn("Time", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTime)
            Me.columnLogLevel = New Global.System.Data.DataColumn("LogLevel", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogLevel)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLogType, Me.columnOccDate, Me.columnLogId}, true))
            Me.columnLogType.AllowDBNull = false
            Me.columnPcName.MaxLength = 60
            Me.columnOccDate.AllowDBNull = false
            Me.columnMessage.MaxLength = 255
            Me.columnLineName.MaxLength = 60
            Me.columnLogId.AutoIncrement = true
            Me.columnLogId.AutoIncrementSeed = -1
            Me.columnLogId.AutoIncrementStep = -1
            Me.columnLogId.AllowDBNull = false
            Me.columnLogId.ReadOnly = true
            Me.columnlogDetail.ReadOnly = true
            Me.columnlogDetail.MaxLength = 355
            Me.columnDate.ReadOnly = true
            Me.columnDate.MaxLength = 30
            Me.columnTime.ReadOnly = true
            Me.columnTime.MaxLength = 30
            Me.columnLogLevel.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewT_LOG_DATRow() As T_LOG_DATRow
            Return CType(Me.NewRow,T_LOG_DATRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New T_LOG_DATRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(T_LOG_DATRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.T_LOG_DATRowChangedEvent) Is Nothing) Then
                RaiseEvent T_LOG_DATRowChanged(Me, New T_LOG_DATRowChangeEvent(CType(e.Row,T_LOG_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.T_LOG_DATRowChangingEvent) Is Nothing) Then
                RaiseEvent T_LOG_DATRowChanging(Me, New T_LOG_DATRowChangeEvent(CType(e.Row,T_LOG_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.T_LOG_DATRowDeletedEvent) Is Nothing) Then
                RaiseEvent T_LOG_DATRowDeleted(Me, New T_LOG_DATRowChangeEvent(CType(e.Row,T_LOG_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.T_LOG_DATRowDeletingEvent) Is Nothing) Then
                RaiseEvent T_LOG_DATRowDeleting(Me, New T_LOG_DATRowChangeEvent(CType(e.Row,T_LOG_DATRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveT_LOG_DATRow(ByVal row As T_LOG_DATRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DataSet1 = New DataSet1
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "T_LOG_DATDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class T_Production_DATRow
        Inherits Global.System.Data.DataRow
        
        Private tableT_Production_DAT As T_Production_DATDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableT_Production_DAT = CType(Me.Table,T_Production_DATDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SeqNo() As String
            Get
                Return CType(Me(Me.tableT_Production_DAT.SeqNoColumn),String)
            End Get
            Set
                Me(Me.tableT_Production_DAT.SeqNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ModelYear() As String
            Get
                Return CType(Me(Me.tableT_Production_DAT.ModelYearColumn),String)
            End Get
            Set
                Me(Me.tableT_Production_DAT.ModelYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SuffixCode() As String
            Get
                Return CType(Me(Me.tableT_Production_DAT.SuffixCodeColumn),String)
            End Get
            Set
                Me(Me.tableT_Production_DAT.SuffixCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LotID() As String
            Get
                Return CType(Me(Me.tableT_Production_DAT.LotIDColumn),String)
            End Get
            Set
                Me(Me.tableT_Production_DAT.LotIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LotNo() As String
            Get
                Return CType(Me(Me.tableT_Production_DAT.LotNoColumn),String)
            End Get
            Set
                Me(Me.tableT_Production_DAT.LotNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Unit() As String
            Get
                Return CType(Me(Me.tableT_Production_DAT.UnitColumn),String)
            End Get
            Set
                Me(Me.tableT_Production_DAT.UnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BlockModel() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.BlockModelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlockModel' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.BlockModelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BlockSeq() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.BlockSeqColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlockSeq' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.BlockSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MARK() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MARKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MARK' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MARKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProductionDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.ProductionDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductionDate' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.ProductionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProductionTime() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.ProductionTimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductionTime' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.ProductionTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ImportCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.ImportCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImportCode' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.ImportCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property YChassisFlag() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.YChassisFlagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YChassisFlag' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.YChassisFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GAShop() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.GAShopColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GAShop' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.GAShopColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HanmmerYears() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.HanmmerYearsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HanmmerYears' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.HanmmerYearsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL01ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL01ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL01ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL01ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL01ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL01ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL01ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL01ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL01ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL01ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL01ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL01ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL01ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL01ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL01ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL01ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL01ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL01ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL01ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL01ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL02ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL02ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL02ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL02ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL02ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL02ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL02ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL02ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL02ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL02ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL02ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL02ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL02ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL02ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL02ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL02ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL02ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL02ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL02ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL02ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL03ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL03ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL03ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL03ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL03ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL03ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL03ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL03ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL03ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL03ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL03ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL03ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL03ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL03ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL03ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL03ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL03ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL03ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL03ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL03ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL04ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL04ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL04ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL04ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL04ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL04ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL04ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL04ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL04ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL04ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL04ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL04ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL04ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL04ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL04ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL04ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL04ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL04ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL04ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL04ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL05ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL05ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL05ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL05ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL05ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL05ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL05ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL05ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL05ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL05ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL05ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL05ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL05ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL05ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL05ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL05ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL05ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL05ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL05ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL05ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL06ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL06ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL06ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL06ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL06ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL06ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL06ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL06ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL06ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL06ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL06ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL06ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL06ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL06ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL06ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL06ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL06ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL06ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL06ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL06ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL07ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL07ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL07ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL07ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL07ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL07ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL07ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL07ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL07ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL07ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL07ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL07ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL07ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL07ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL07ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL07ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL07ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL07ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL07ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL07ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL08ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL08ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL08ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL08ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL08ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL08ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL08ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL08ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL08ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL08ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL08ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL08ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL08ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL08ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL08ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL08ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL08ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL08ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL08ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL08ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL09ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL09ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL09ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL09ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL09ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL09ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL09ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL09ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL09ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL09ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL09ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL09ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL09ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL09ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL09ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL09ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL09ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL09ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL09ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL09ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL10ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL10ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL10ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL10ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL10ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL10ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL10ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL10ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL10ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL10ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL10ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL10ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL10ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL10ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL10ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL10ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL10ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL10ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL10ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL10ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL11ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL11ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL11ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL11ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL11ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL11ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL11ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL11ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL11ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL11ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL11ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL11ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL11ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL11ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL11ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL11ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL11ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL11ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL11ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL11ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL12ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL12ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL12ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL12ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL12ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL12ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL12ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL12ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL12ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL12ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL12ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL12ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL12ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL12ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL12ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL12ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL12ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL12ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL12ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL12ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL13ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL13ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL13ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL13ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL13ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL13ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL13ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL13ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL13ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL13ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL13ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL13ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL13ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL13ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL13ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL13ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL13ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL13ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL13ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL13ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL14ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL14ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL14ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL14ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL14ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL14ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL14ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL14ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL14ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL14ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL14ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL14ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL14ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL14ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL14ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL14ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL14ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL14ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL14ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL14ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL15ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL15ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL15ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL15ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL15ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL15ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL15ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL15ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL15ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL15ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL15ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL15ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL15ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL15ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL15ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL15ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL15ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL15ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL15ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL15ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL16ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL16ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL16ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL16ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL16ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL16ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL16ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL16ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL16ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL16ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL16ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL16ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL16ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL16ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL16ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL16ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL16ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL16ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL16ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL16ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL17ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL17ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL17ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL17ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL17ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL17ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL17ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL17ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL17ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL17ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL17ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL17ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL17ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL17ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL17ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL17ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL17ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL17ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL17ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL17ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL18ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL18ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL18ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL18ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL18ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL18ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL18ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL18ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL18ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL18ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL18ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL18ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL18ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL18ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL18ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL18ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL18ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL18ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL18ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL18ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL19ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL19ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL19ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL19ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL19ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL19ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL19ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL19ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL19ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL19ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL19ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL19ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL19ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL19ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL19ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL19ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL19ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL19ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL19ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL19ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL20ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL20ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL20ASM01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL20ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL20ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL20ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL20ASM02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL20ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL20ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL20ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL20ASM03' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL20ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL20ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL20ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL20ASM04' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL20ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MODEL20ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.MODEL20ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL20ASM05' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.MODEL20ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Reserve01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.Reserve01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reserve01' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.Reserve01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Reserve02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.Reserve02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reserve02' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.Reserve02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SubSeq() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.SubSeqColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubSeq' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.SubSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property XchgFlag() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.XchgFlagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XchgFlag' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.XchgFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InstructFlag() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.InstructFlagColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InstructFlag' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.InstructFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FileName() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.FileNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FileName' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.FileNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEQ_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.SEQ_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEQ_DESC' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.SEQ_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property indexNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Production_DAT.indexNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'indexNo' in table 'T_Production_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Production_DAT.indexNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBlockModelNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.BlockModelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBlockModelNull()
            Me(Me.tableT_Production_DAT.BlockModelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBlockSeqNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.BlockSeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBlockSeqNull()
            Me(Me.tableT_Production_DAT.BlockSeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMARKNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MARKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMARKNull()
            Me(Me.tableT_Production_DAT.MARKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProductionDateNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.ProductionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProductionDateNull()
            Me(Me.tableT_Production_DAT.ProductionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProductionTimeNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.ProductionTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProductionTimeNull()
            Me(Me.tableT_Production_DAT.ProductionTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImportCodeNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.ImportCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImportCodeNull()
            Me(Me.tableT_Production_DAT.ImportCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYChassisFlagNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.YChassisFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYChassisFlagNull()
            Me(Me.tableT_Production_DAT.YChassisFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGAShopNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.GAShopColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGAShopNull()
            Me(Me.tableT_Production_DAT.GAShopColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHanmmerYearsNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.HanmmerYearsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHanmmerYearsNull()
            Me(Me.tableT_Production_DAT.HanmmerYearsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL01ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL01ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL01ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL01ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL01ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL01ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL01ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL01ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL01ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL01ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL01ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL01ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL01ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL01ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL01ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL01ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL01ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL01ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL01ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL01ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL02ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL02ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL02ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL02ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL02ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL02ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL02ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL02ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL02ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL02ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL02ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL02ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL02ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL02ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL02ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL02ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL02ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL02ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL02ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL02ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL03ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL03ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL03ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL03ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL03ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL03ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL03ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL03ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL03ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL03ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL03ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL03ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL03ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL03ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL03ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL03ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL03ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL03ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL03ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL03ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL04ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL04ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL04ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL04ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL04ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL04ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL04ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL04ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL04ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL04ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL04ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL04ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL04ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL04ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL04ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL04ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL04ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL04ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL04ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL04ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL05ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL05ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL05ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL05ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL05ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL05ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL05ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL05ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL05ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL05ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL05ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL05ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL05ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL05ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL05ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL05ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL05ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL05ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL05ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL05ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL06ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL06ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL06ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL06ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL06ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL06ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL06ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL06ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL06ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL06ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL06ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL06ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL06ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL06ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL06ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL06ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL06ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL06ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL06ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL06ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL07ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL07ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL07ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL07ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL07ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL07ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL07ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL07ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL07ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL07ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL07ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL07ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL07ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL07ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL07ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL07ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL07ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL07ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL07ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL07ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL08ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL08ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL08ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL08ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL08ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL08ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL08ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL08ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL08ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL08ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL08ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL08ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL08ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL08ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL08ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL08ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL08ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL08ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL08ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL08ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL09ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL09ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL09ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL09ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL09ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL09ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL09ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL09ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL09ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL09ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL09ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL09ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL09ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL09ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL09ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL09ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL09ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL09ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL09ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL09ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL10ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL10ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL10ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL10ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL10ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL10ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL10ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL10ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL10ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL10ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL10ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL10ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL10ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL10ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL10ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL10ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL10ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL10ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL10ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL10ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL11ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL11ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL11ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL11ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL11ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL11ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL11ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL11ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL11ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL11ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL11ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL11ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL11ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL11ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL11ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL11ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL11ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL11ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL11ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL11ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL12ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL12ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL12ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL12ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL12ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL12ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL12ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL12ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL12ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL12ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL12ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL12ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL12ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL12ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL12ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL12ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL12ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL12ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL12ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL12ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL13ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL13ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL13ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL13ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL13ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL13ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL13ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL13ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL13ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL13ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL13ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL13ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL13ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL13ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL13ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL13ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL13ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL13ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL13ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL13ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL14ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL14ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL14ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL14ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL14ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL14ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL14ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL14ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL14ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL14ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL14ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL14ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL14ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL14ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL14ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL14ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL14ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL14ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL14ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL14ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL15ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL15ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL15ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL15ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL15ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL15ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL15ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL15ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL15ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL15ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL15ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL15ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL15ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL15ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL15ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL15ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL15ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL15ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL15ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL15ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL16ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL16ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL16ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL16ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL16ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL16ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL16ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL16ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL16ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL16ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL16ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL16ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL16ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL16ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL16ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL16ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL16ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL16ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL16ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL16ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL17ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL17ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL17ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL17ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL17ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL17ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL17ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL17ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL17ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL17ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL17ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL17ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL17ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL17ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL17ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL17ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL17ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL17ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL17ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL17ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL18ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL18ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL18ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL18ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL18ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL18ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL18ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL18ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL18ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL18ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL18ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL18ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL18ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL18ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL18ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL18ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL18ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL18ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL18ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL18ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL19ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL19ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL19ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL19ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL19ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL19ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL19ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL19ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL19ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL19ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL19ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL19ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL19ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL19ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL19ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL19ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL19ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL19ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL19ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL19ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL20ASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL20ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL20ASM01Null()
            Me(Me.tableT_Production_DAT.MODEL20ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL20ASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL20ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL20ASM02Null()
            Me(Me.tableT_Production_DAT.MODEL20ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL20ASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL20ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL20ASM03Null()
            Me(Me.tableT_Production_DAT.MODEL20ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL20ASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL20ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL20ASM04Null()
            Me(Me.tableT_Production_DAT.MODEL20ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMODEL20ASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.MODEL20ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMODEL20ASM05Null()
            Me(Me.tableT_Production_DAT.MODEL20ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReserve01Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.Reserve01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReserve01Null()
            Me(Me.tableT_Production_DAT.Reserve01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReserve02Null() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.Reserve02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReserve02Null()
            Me(Me.tableT_Production_DAT.Reserve02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubSeqNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.SubSeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubSeqNull()
            Me(Me.tableT_Production_DAT.SubSeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsXchgFlagNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.XchgFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetXchgFlagNull()
            Me(Me.tableT_Production_DAT.XchgFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInstructFlagNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.InstructFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInstructFlagNull()
            Me(Me.tableT_Production_DAT.InstructFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFileNameNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.FileNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFileNameNull()
            Me(Me.tableT_Production_DAT.FileNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEQ_DESCNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.SEQ_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEQ_DESCNull()
            Me(Me.tableT_Production_DAT.SEQ_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsindexNoNull() As Boolean
            Return Me.IsNull(Me.tableT_Production_DAT.indexNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetindexNoNull()
            Me(Me.tableT_Production_DAT.indexNoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class T_Instruction_DATRow
        Inherits Global.System.Data.DataRow
        
        Private tableT_Instruction_DAT As T_Instruction_DATDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableT_Instruction_DAT = CType(Me.Table,T_Instruction_DATDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SeqNo() As String
            Get
                Return CType(Me(Me.tableT_Instruction_DAT.SeqNoColumn),String)
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.SeqNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ModelYear() As String
            Get
                Return CType(Me(Me.tableT_Instruction_DAT.ModelYearColumn),String)
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.ModelYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SuffixCode() As String
            Get
                Return CType(Me(Me.tableT_Instruction_DAT.SuffixCodeColumn),String)
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.SuffixCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LotID() As String
            Get
                Return CType(Me(Me.tableT_Instruction_DAT.LotIDColumn),String)
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.LotIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LotNo() As String
            Get
                Return CType(Me(Me.tableT_Instruction_DAT.LotNoColumn),String)
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.LotNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Unit() As String
            Get
                Return CType(Me(Me.tableT_Instruction_DAT.UnitColumn),String)
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.UnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BlockModel() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.BlockModelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlockModel' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.BlockModelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BlockSeq() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.BlockSeqColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlockSeq' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.BlockSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MARK() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.MARKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MARK' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.MARKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProductionDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.ProductionDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductionDate' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.ProductionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProductionTime() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.ProductionTimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductionTime' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.ProductionTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ImportCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.ImportCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImportCode' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.ImportCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property YChassisFlag() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.YChassisFlagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YChassisFlag' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.YChassisFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GAShop() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.GAShopColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GAShop' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.GAShopColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HanmmerYears() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.HanmmerYearsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HanmmerYears' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.HanmmerYearsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASM01() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.ASM01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASM01' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.ASM01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASM02() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.ASM02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASM02' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.ASM02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASM03() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.ASM03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASM03' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.ASM03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASM04() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.ASM04Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASM04' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.ASM04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASM05() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.ASM05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASM05' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.ASM05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property XchgFlag() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.XchgFlagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XchgFlag' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.XchgFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsResult() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.InsResultColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsResult' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.InsResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsPassFlag() As Boolean
            Get
                Return CType(Me(Me.tableT_Instruction_DAT.InsPassFlagColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.InsPassFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Line_No() As Integer
            Get
                Return CType(Me(Me.tableT_Instruction_DAT.Line_NoColumn),Integer)
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.Line_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CarrResult() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.CarrResultColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CarrResult' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.CarrResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CarrPassFlag() As Boolean
            Get
                Return CType(Me(Me.tableT_Instruction_DAT.CarrPassFlagColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.CarrPassFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SubSeq() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.SubSeqColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubSeq' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.SubSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property indexNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.indexNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'indexNo' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.indexNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BelowDelFlag() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableT_Instruction_DAT.BelowDelFlagColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BelowDelFlag' in table 'T_Instruction_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Instruction_DAT.BelowDelFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBlockModelNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.BlockModelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBlockModelNull()
            Me(Me.tableT_Instruction_DAT.BlockModelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBlockSeqNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.BlockSeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBlockSeqNull()
            Me(Me.tableT_Instruction_DAT.BlockSeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMARKNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.MARKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMARKNull()
            Me(Me.tableT_Instruction_DAT.MARKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProductionDateNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.ProductionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProductionDateNull()
            Me(Me.tableT_Instruction_DAT.ProductionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProductionTimeNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.ProductionTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProductionTimeNull()
            Me(Me.tableT_Instruction_DAT.ProductionTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImportCodeNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.ImportCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImportCodeNull()
            Me(Me.tableT_Instruction_DAT.ImportCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYChassisFlagNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.YChassisFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYChassisFlagNull()
            Me(Me.tableT_Instruction_DAT.YChassisFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGAShopNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.GAShopColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGAShopNull()
            Me(Me.tableT_Instruction_DAT.GAShopColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHanmmerYearsNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.HanmmerYearsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHanmmerYearsNull()
            Me(Me.tableT_Instruction_DAT.HanmmerYearsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsASM01Null() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.ASM01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetASM01Null()
            Me(Me.tableT_Instruction_DAT.ASM01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsASM02Null() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.ASM02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetASM02Null()
            Me(Me.tableT_Instruction_DAT.ASM02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsASM03Null() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.ASM03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetASM03Null()
            Me(Me.tableT_Instruction_DAT.ASM03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsASM04Null() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.ASM04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetASM04Null()
            Me(Me.tableT_Instruction_DAT.ASM04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsASM05Null() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.ASM05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetASM05Null()
            Me(Me.tableT_Instruction_DAT.ASM05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsXchgFlagNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.XchgFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetXchgFlagNull()
            Me(Me.tableT_Instruction_DAT.XchgFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsResultNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.InsResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsResultNull()
            Me(Me.tableT_Instruction_DAT.InsResultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCarrResultNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.CarrResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCarrResultNull()
            Me(Me.tableT_Instruction_DAT.CarrResultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubSeqNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.SubSeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubSeqNull()
            Me(Me.tableT_Instruction_DAT.SubSeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsindexNoNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.indexNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetindexNoNull()
            Me(Me.tableT_Instruction_DAT.indexNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBelowDelFlagNull() As Boolean
            Return Me.IsNull(Me.tableT_Instruction_DAT.BelowDelFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBelowDelFlagNull()
            Me(Me.tableT_Instruction_DAT.BelowDelFlagColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class T_Line_MSTRow
        Inherits Global.System.Data.DataRow
        
        Private tableT_Line_MST As T_Line_MSTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableT_Line_MST = CType(Me.Table,T_Line_MSTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LineCode() As Integer
            Get
                Return CType(Me(Me.tableT_Line_MST.LineCodeColumn),Integer)
            End Get
            Set
                Me(Me.tableT_Line_MST.LineCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LineName() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_Line_MST.LineNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LineName' in table 'T_Line_MST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Line_MST.LineNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LineType() As Integer
            Get
                Return CType(Me(Me.tableT_Line_MST.LineTypeColumn),Integer)
            End Get
            Set
                Me(Me.tableT_Line_MST.LineTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MainLineFlag() As Boolean
            Get
                Return CType(Me(Me.tableT_Line_MST.MainLineFlagColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_Line_MST.MainLineFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OnlineFlag() As Boolean
            Get
                Return CType(Me(Me.tableT_Line_MST.OnlineFlagColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_Line_MST.OnlineFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IpAddress() As String
            Get
                Return CType(Me(Me.tableT_Line_MST.IpAddressColumn),String)
            End Get
            Set
                Me(Me.tableT_Line_MST.IpAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NetAddress() As Integer
            Get
                Return CType(Me(Me.tableT_Line_MST.NetAddressColumn),Integer)
            End Get
            Set
                Me(Me.tableT_Line_MST.NetAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NodeAddress() As Integer
            Get
                Return CType(Me(Me.tableT_Line_MST.NodeAddressColumn),Integer)
            End Get
            Set
                Me(Me.tableT_Line_MST.NodeAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UnitAddress() As Integer
            Get
                Return CType(Me(Me.tableT_Line_MST.UnitAddressColumn),Integer)
            End Get
            Set
                Me(Me.tableT_Line_MST.UnitAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ReadReqAddress() As Integer
            Get
                Return CType(Me(Me.tableT_Line_MST.ReadReqAddressColumn),Integer)
            End Get
            Set
                Me(Me.tableT_Line_MST.ReadReqAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property WriteProductionAddress() As Integer
            Get
                Return CType(Me(Me.tableT_Line_MST.WriteProductionAddressColumn),Integer)
            End Get
            Set
                Me(Me.tableT_Line_MST.WriteProductionAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property WriteCarryOutAddress() As Integer
            Get
                Return CType(Me(Me.tableT_Line_MST.WriteCarryOutAddressColumn),Integer)
            End Get
            Set
                Me(Me.tableT_Line_MST.WriteCarryOutAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Part1() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableT_Line_MST.Part1Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part1' in table 'T_Line_MST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Line_MST.Part1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Part2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableT_Line_MST.Part2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part2' in table 'T_Line_MST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Line_MST.Part2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Part3() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableT_Line_MST.Part3Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part3' in table 'T_Line_MST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Line_MST.Part3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Part4() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableT_Line_MST.Part4Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part4' in table 'T_Line_MST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Line_MST.Part4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Part5() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableT_Line_MST.Part5Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part5' in table 'T_Line_MST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_Line_MST.Part5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLineNameNull() As Boolean
            Return Me.IsNull(Me.tableT_Line_MST.LineNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLineNameNull()
            Me(Me.tableT_Line_MST.LineNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPart1Null() As Boolean
            Return Me.IsNull(Me.tableT_Line_MST.Part1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPart1Null()
            Me(Me.tableT_Line_MST.Part1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPart2Null() As Boolean
            Return Me.IsNull(Me.tableT_Line_MST.Part2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPart2Null()
            Me(Me.tableT_Line_MST.Part2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPart3Null() As Boolean
            Return Me.IsNull(Me.tableT_Line_MST.Part3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPart3Null()
            Me(Me.tableT_Line_MST.Part3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPart4Null() As Boolean
            Return Me.IsNull(Me.tableT_Line_MST.Part4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPart4Null()
            Me(Me.tableT_Line_MST.Part4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPart5Null() As Boolean
            Return Me.IsNull(Me.tableT_Line_MST.Part5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPart5Null()
            Me(Me.tableT_Line_MST.Part5Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class T_LOG_DATRow
        Inherits Global.System.Data.DataRow
        
        Private tableT_LOG_DAT As T_LOG_DATDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableT_LOG_DAT = CType(Me.Table,T_LOG_DATDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property indexNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_LOG_DAT.indexNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'indexNo' in table 'T_LOG_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_LOG_DAT.indexNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LogType() As Integer
            Get
                Return CType(Me(Me.tableT_LOG_DAT.LogTypeColumn),Integer)
            End Get
            Set
                Me(Me.tableT_LOG_DAT.LogTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PcName() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_LOG_DAT.PcNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PcName' in table 'T_LOG_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_LOG_DAT.PcNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OccDate() As Date
            Get
                Return CType(Me(Me.tableT_LOG_DAT.OccDateColumn),Date)
            End Get
            Set
                Me(Me.tableT_LOG_DAT.OccDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Message() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_LOG_DAT.MessageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Message' in table 'T_LOG_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_LOG_DAT.MessageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LineName() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_LOG_DAT.LineNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LineName' in table 'T_LOG_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_LOG_DAT.LineNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LogId() As Integer
            Get
                Return CType(Me(Me.tableT_LOG_DAT.LogIdColumn),Integer)
            End Get
            Set
                Me(Me.tableT_LOG_DAT.LogIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property logDetail() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_LOG_DAT.logDetailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'logDetail' in table 'T_LOG_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_LOG_DAT.logDetailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Date() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_LOG_DAT.DateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date' in table 'T_LOG_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_LOG_DAT.DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Time() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_LOG_DAT.TimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Time' in table 'T_LOG_DAT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_LOG_DAT.TimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LogLevel() As Integer
            Get
                Return CType(Me(Me.tableT_LOG_DAT.LogLevelColumn),Integer)
            End Get
            Set
                Me(Me.tableT_LOG_DAT.LogLevelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsindexNoNull() As Boolean
            Return Me.IsNull(Me.tableT_LOG_DAT.indexNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetindexNoNull()
            Me(Me.tableT_LOG_DAT.indexNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPcNameNull() As Boolean
            Return Me.IsNull(Me.tableT_LOG_DAT.PcNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPcNameNull()
            Me(Me.tableT_LOG_DAT.PcNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMessageNull() As Boolean
            Return Me.IsNull(Me.tableT_LOG_DAT.MessageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMessageNull()
            Me(Me.tableT_LOG_DAT.MessageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLineNameNull() As Boolean
            Return Me.IsNull(Me.tableT_LOG_DAT.LineNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLineNameNull()
            Me(Me.tableT_LOG_DAT.LineNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslogDetailNull() As Boolean
            Return Me.IsNull(Me.tableT_LOG_DAT.logDetailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlogDetailNull()
            Me(Me.tableT_LOG_DAT.logDetailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_DateNull() As Boolean
            Return Me.IsNull(Me.tableT_LOG_DAT.DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_DateNull()
            Me(Me.tableT_LOG_DAT.DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTimeNull() As Boolean
            Return Me.IsNull(Me.tableT_LOG_DAT.TimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTimeNull()
            Me(Me.tableT_LOG_DAT.TimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class T_Production_DATRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As T_Production_DATRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As T_Production_DATRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As T_Production_DATRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class T_Instruction_DATRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As T_Instruction_DATRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As T_Instruction_DATRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As T_Instruction_DATRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class T_Line_MSTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As T_Line_MSTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As T_Line_MSTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As T_Line_MSTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class T_LOG_DATRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As T_LOG_DATRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As T_LOG_DATRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As T_LOG_DATRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSet1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class T_Production_DATTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "T_Production_DAT"
            tableMapping.ColumnMappings.Add("SeqNo", "SeqNo")
            tableMapping.ColumnMappings.Add("ModelYear", "ModelYear")
            tableMapping.ColumnMappings.Add("SuffixCode", "SuffixCode")
            tableMapping.ColumnMappings.Add("LotID", "LotID")
            tableMapping.ColumnMappings.Add("LotNo", "LotNo")
            tableMapping.ColumnMappings.Add("Unit", "Unit")
            tableMapping.ColumnMappings.Add("BlockModel", "BlockModel")
            tableMapping.ColumnMappings.Add("BlockSeq", "BlockSeq")
            tableMapping.ColumnMappings.Add("MARK", "MARK")
            tableMapping.ColumnMappings.Add("ProductionDate", "ProductionDate")
            tableMapping.ColumnMappings.Add("ProductionTime", "ProductionTime")
            tableMapping.ColumnMappings.Add("ImportCode", "ImportCode")
            tableMapping.ColumnMappings.Add("YChassisFlag", "YChassisFlag")
            tableMapping.ColumnMappings.Add("GAShop", "GAShop")
            tableMapping.ColumnMappings.Add("HanmmerYears", "HanmmerYears")
            tableMapping.ColumnMappings.Add("MODEL01ASM01", "MODEL01ASM01")
            tableMapping.ColumnMappings.Add("MODEL01ASM02", "MODEL01ASM02")
            tableMapping.ColumnMappings.Add("MODEL01ASM03", "MODEL01ASM03")
            tableMapping.ColumnMappings.Add("MODEL01ASM04", "MODEL01ASM04")
            tableMapping.ColumnMappings.Add("MODEL01ASM05", "MODEL01ASM05")
            tableMapping.ColumnMappings.Add("MODEL02ASM01", "MODEL02ASM01")
            tableMapping.ColumnMappings.Add("MODEL02ASM02", "MODEL02ASM02")
            tableMapping.ColumnMappings.Add("MODEL02ASM03", "MODEL02ASM03")
            tableMapping.ColumnMappings.Add("MODEL02ASM04", "MODEL02ASM04")
            tableMapping.ColumnMappings.Add("MODEL02ASM05", "MODEL02ASM05")
            tableMapping.ColumnMappings.Add("MODEL03ASM01", "MODEL03ASM01")
            tableMapping.ColumnMappings.Add("MODEL03ASM02", "MODEL03ASM02")
            tableMapping.ColumnMappings.Add("MODEL03ASM03", "MODEL03ASM03")
            tableMapping.ColumnMappings.Add("MODEL03ASM04", "MODEL03ASM04")
            tableMapping.ColumnMappings.Add("MODEL03ASM05", "MODEL03ASM05")
            tableMapping.ColumnMappings.Add("MODEL04ASM01", "MODEL04ASM01")
            tableMapping.ColumnMappings.Add("MODEL04ASM02", "MODEL04ASM02")
            tableMapping.ColumnMappings.Add("MODEL04ASM03", "MODEL04ASM03")
            tableMapping.ColumnMappings.Add("MODEL04ASM04", "MODEL04ASM04")
            tableMapping.ColumnMappings.Add("MODEL04ASM05", "MODEL04ASM05")
            tableMapping.ColumnMappings.Add("MODEL05ASM01", "MODEL05ASM01")
            tableMapping.ColumnMappings.Add("MODEL05ASM02", "MODEL05ASM02")
            tableMapping.ColumnMappings.Add("MODEL05ASM03", "MODEL05ASM03")
            tableMapping.ColumnMappings.Add("MODEL05ASM04", "MODEL05ASM04")
            tableMapping.ColumnMappings.Add("MODEL05ASM05", "MODEL05ASM05")
            tableMapping.ColumnMappings.Add("MODEL06ASM01", "MODEL06ASM01")
            tableMapping.ColumnMappings.Add("MODEL06ASM02", "MODEL06ASM02")
            tableMapping.ColumnMappings.Add("MODEL06ASM03", "MODEL06ASM03")
            tableMapping.ColumnMappings.Add("MODEL06ASM04", "MODEL06ASM04")
            tableMapping.ColumnMappings.Add("MODEL06ASM05", "MODEL06ASM05")
            tableMapping.ColumnMappings.Add("MODEL07ASM01", "MODEL07ASM01")
            tableMapping.ColumnMappings.Add("MODEL07ASM02", "MODEL07ASM02")
            tableMapping.ColumnMappings.Add("MODEL07ASM03", "MODEL07ASM03")
            tableMapping.ColumnMappings.Add("MODEL07ASM04", "MODEL07ASM04")
            tableMapping.ColumnMappings.Add("MODEL07ASM05", "MODEL07ASM05")
            tableMapping.ColumnMappings.Add("MODEL08ASM01", "MODEL08ASM01")
            tableMapping.ColumnMappings.Add("MODEL08ASM02", "MODEL08ASM02")
            tableMapping.ColumnMappings.Add("MODEL08ASM03", "MODEL08ASM03")
            tableMapping.ColumnMappings.Add("MODEL08ASM04", "MODEL08ASM04")
            tableMapping.ColumnMappings.Add("MODEL08ASM05", "MODEL08ASM05")
            tableMapping.ColumnMappings.Add("MODEL09ASM01", "MODEL09ASM01")
            tableMapping.ColumnMappings.Add("MODEL09ASM02", "MODEL09ASM02")
            tableMapping.ColumnMappings.Add("MODEL09ASM03", "MODEL09ASM03")
            tableMapping.ColumnMappings.Add("MODEL09ASM04", "MODEL09ASM04")
            tableMapping.ColumnMappings.Add("MODEL09ASM05", "MODEL09ASM05")
            tableMapping.ColumnMappings.Add("MODEL10ASM01", "MODEL10ASM01")
            tableMapping.ColumnMappings.Add("MODEL10ASM02", "MODEL10ASM02")
            tableMapping.ColumnMappings.Add("MODEL10ASM03", "MODEL10ASM03")
            tableMapping.ColumnMappings.Add("MODEL10ASM04", "MODEL10ASM04")
            tableMapping.ColumnMappings.Add("MODEL10ASM05", "MODEL10ASM05")
            tableMapping.ColumnMappings.Add("MODEL11ASM01", "MODEL11ASM01")
            tableMapping.ColumnMappings.Add("MODEL11ASM02", "MODEL11ASM02")
            tableMapping.ColumnMappings.Add("MODEL11ASM03", "MODEL11ASM03")
            tableMapping.ColumnMappings.Add("MODEL11ASM04", "MODEL11ASM04")
            tableMapping.ColumnMappings.Add("MODEL11ASM05", "MODEL11ASM05")
            tableMapping.ColumnMappings.Add("MODEL12ASM01", "MODEL12ASM01")
            tableMapping.ColumnMappings.Add("MODEL12ASM02", "MODEL12ASM02")
            tableMapping.ColumnMappings.Add("MODEL12ASM03", "MODEL12ASM03")
            tableMapping.ColumnMappings.Add("MODEL12ASM04", "MODEL12ASM04")
            tableMapping.ColumnMappings.Add("MODEL12ASM05", "MODEL12ASM05")
            tableMapping.ColumnMappings.Add("MODEL13ASM01", "MODEL13ASM01")
            tableMapping.ColumnMappings.Add("MODEL13ASM02", "MODEL13ASM02")
            tableMapping.ColumnMappings.Add("MODEL13ASM03", "MODEL13ASM03")
            tableMapping.ColumnMappings.Add("MODEL13ASM04", "MODEL13ASM04")
            tableMapping.ColumnMappings.Add("MODEL13ASM05", "MODEL13ASM05")
            tableMapping.ColumnMappings.Add("MODEL14ASM01", "MODEL14ASM01")
            tableMapping.ColumnMappings.Add("MODEL14ASM02", "MODEL14ASM02")
            tableMapping.ColumnMappings.Add("MODEL14ASM03", "MODEL14ASM03")
            tableMapping.ColumnMappings.Add("MODEL14ASM04", "MODEL14ASM04")
            tableMapping.ColumnMappings.Add("MODEL14ASM05", "MODEL14ASM05")
            tableMapping.ColumnMappings.Add("MODEL15ASM01", "MODEL15ASM01")
            tableMapping.ColumnMappings.Add("MODEL15ASM02", "MODEL15ASM02")
            tableMapping.ColumnMappings.Add("MODEL15ASM03", "MODEL15ASM03")
            tableMapping.ColumnMappings.Add("MODEL15ASM04", "MODEL15ASM04")
            tableMapping.ColumnMappings.Add("MODEL15ASM05", "MODEL15ASM05")
            tableMapping.ColumnMappings.Add("MODEL16ASM01", "MODEL16ASM01")
            tableMapping.ColumnMappings.Add("MODEL16ASM02", "MODEL16ASM02")
            tableMapping.ColumnMappings.Add("MODEL16ASM03", "MODEL16ASM03")
            tableMapping.ColumnMappings.Add("MODEL16ASM04", "MODEL16ASM04")
            tableMapping.ColumnMappings.Add("MODEL16ASM05", "MODEL16ASM05")
            tableMapping.ColumnMappings.Add("MODEL17ASM01", "MODEL17ASM01")
            tableMapping.ColumnMappings.Add("MODEL17ASM02", "MODEL17ASM02")
            tableMapping.ColumnMappings.Add("MODEL17ASM03", "MODEL17ASM03")
            tableMapping.ColumnMappings.Add("MODEL17ASM04", "MODEL17ASM04")
            tableMapping.ColumnMappings.Add("MODEL17ASM05", "MODEL17ASM05")
            tableMapping.ColumnMappings.Add("MODEL18ASM01", "MODEL18ASM01")
            tableMapping.ColumnMappings.Add("MODEL18ASM02", "MODEL18ASM02")
            tableMapping.ColumnMappings.Add("MODEL18ASM03", "MODEL18ASM03")
            tableMapping.ColumnMappings.Add("MODEL18ASM04", "MODEL18ASM04")
            tableMapping.ColumnMappings.Add("MODEL18ASM05", "MODEL18ASM05")
            tableMapping.ColumnMappings.Add("MODEL19ASM01", "MODEL19ASM01")
            tableMapping.ColumnMappings.Add("MODEL19ASM02", "MODEL19ASM02")
            tableMapping.ColumnMappings.Add("MODEL19ASM03", "MODEL19ASM03")
            tableMapping.ColumnMappings.Add("MODEL19ASM04", "MODEL19ASM04")
            tableMapping.ColumnMappings.Add("MODEL19ASM05", "MODEL19ASM05")
            tableMapping.ColumnMappings.Add("MODEL20ASM01", "MODEL20ASM01")
            tableMapping.ColumnMappings.Add("MODEL20ASM02", "MODEL20ASM02")
            tableMapping.ColumnMappings.Add("MODEL20ASM03", "MODEL20ASM03")
            tableMapping.ColumnMappings.Add("MODEL20ASM04", "MODEL20ASM04")
            tableMapping.ColumnMappings.Add("MODEL20ASM05", "MODEL20ASM05")
            tableMapping.ColumnMappings.Add("Reserve01", "Reserve01")
            tableMapping.ColumnMappings.Add("Reserve02", "Reserve02")
            tableMapping.ColumnMappings.Add("SubSeq", "SubSeq")
            tableMapping.ColumnMappings.Add("XchgFlag", "XchgFlag")
            tableMapping.ColumnMappings.Add("InstructFlag", "InstructFlag")
            tableMapping.ColumnMappings.Add("FileName", "FileName")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [T_Production_DAT] WHERE (([SeqNo] = @Original_SeqNo) AND ([ModelYear"& _ 
                "] = @Original_ModelYear) AND ([SuffixCode] = @Original_SuffixCode) AND ([LotID] "& _ 
                "= @Original_LotID) AND ([LotNo] = @Original_LotNo) AND ([Unit] = @Original_Unit)"& _ 
                " AND ((@IsNull_BlockModel = 1 AND [BlockModel] IS NULL) OR ([BlockModel] = @Orig"& _ 
                "inal_BlockModel)) AND ((@IsNull_BlockSeq = 1 AND [BlockSeq] IS NULL) OR ([BlockS"& _ 
                "eq] = @Original_BlockSeq)) AND ((@IsNull_MARK = 1 AND [MARK] IS NULL) OR ([MARK]"& _ 
                " = @Original_MARK)) AND ((@IsNull_ProductionDate = 1 AND [ProductionDate] IS NUL"& _ 
                "L) OR ([ProductionDate] = @Original_ProductionDate)) AND ((@IsNull_ProductionTim"& _ 
                "e = 1 AND [ProductionTime] IS NULL) OR ([ProductionTime] = @Original_ProductionT"& _ 
                "ime)) AND ((@IsNull_ImportCode = 1 AND [ImportCode] IS NULL) OR ([ImportCode] = "& _ 
                "@Original_ImportCode)) AND ((@IsNull_YChassisFlag = 1 AND [YChassisFlag] IS NULL"& _ 
                ") OR ([YChassisFlag] = @Original_YChassisFlag)) AND ((@IsNull_GAShop = 1 AND [GA"& _ 
                "Shop] IS NULL) OR ([GAShop] = @Original_GAShop)) AND ((@IsNull_HanmmerYears = 1 "& _ 
                "AND [HanmmerYears] IS NULL) OR ([HanmmerYears] = @Original_HanmmerYears)) AND (("& _ 
                "@IsNull_MODEL01ASM01 = 1 AND [MODEL01ASM01] IS NULL) OR ([MODEL01ASM01] = @Origi"& _ 
                "nal_MODEL01ASM01)) AND ((@IsNull_MODEL01ASM02 = 1 AND [MODEL01ASM02] IS NULL) OR"& _ 
                " ([MODEL01ASM02] = @Original_MODEL01ASM02)) AND ((@IsNull_MODEL01ASM03 = 1 AND ["& _ 
                "MODEL01ASM03] IS NULL) OR ([MODEL01ASM03] = @Original_MODEL01ASM03)) AND ((@IsNu"& _ 
                "ll_MODEL01ASM04 = 1 AND [MODEL01ASM04] IS NULL) OR ([MODEL01ASM04] = @Original_M"& _ 
                "ODEL01ASM04)) AND ((@IsNull_MODEL01ASM05 = 1 AND [MODEL01ASM05] IS NULL) OR ([MO"& _ 
                "DEL01ASM05] = @Original_MODEL01ASM05)) AND ((@IsNull_MODEL02ASM01 = 1 AND [MODEL"& _ 
                "02ASM01] IS NULL) OR ([MODEL02ASM01] = @Original_MODEL02ASM01)) AND ((@IsNull_MO"& _ 
                "DEL02ASM02 = 1 AND [MODEL02ASM02] IS NULL) OR ([MODEL02ASM02] = @Original_MODEL0"& _ 
                "2ASM02)) AND ((@IsNull_MODEL02ASM03 = 1 AND [MODEL02ASM03] IS NULL) OR ([MODEL02"& _ 
                "ASM03] = @Original_MODEL02ASM03)) AND ((@IsNull_MODEL02ASM04 = 1 AND [MODEL02ASM"& _ 
                "04] IS NULL) OR ([MODEL02ASM04] = @Original_MODEL02ASM04)) AND ((@IsNull_MODEL02"& _ 
                "ASM05 = 1 AND [MODEL02ASM05] IS NULL) OR ([MODEL02ASM05] = @Original_MODEL02ASM0"& _ 
                "5)) AND ((@IsNull_MODEL03ASM01 = 1 AND [MODEL03ASM01] IS NULL) OR ([MODEL03ASM01"& _ 
                "] = @Original_MODEL03ASM01)) AND ((@IsNull_MODEL03ASM02 = 1 AND [MODEL03ASM02] I"& _ 
                "S NULL) OR ([MODEL03ASM02] = @Original_MODEL03ASM02)) AND ((@IsNull_MODEL03ASM03"& _ 
                " = 1 AND [MODEL03ASM03] IS NULL) OR ([MODEL03ASM03] = @Original_MODEL03ASM03)) A"& _ 
                "ND ((@IsNull_MODEL03ASM04 = 1 AND [MODEL03ASM04] IS NULL) OR ([MODEL03ASM04] = @"& _ 
                "Original_MODEL03ASM04)) AND ((@IsNull_MODEL03ASM05 = 1 AND [MODEL03ASM05] IS NUL"& _ 
                "L) OR ([MODEL03ASM05] = @Original_MODEL03ASM05)) AND ((@IsNull_MODEL04ASM01 = 1 "& _ 
                "AND [MODEL04ASM01] IS NULL) OR ([MODEL04ASM01] = @Original_MODEL04ASM01)) AND (("& _ 
                "@IsNull_MODEL04ASM02 = 1 AND [MODEL04ASM02] IS NULL) OR ([MODEL04ASM02] = @Origi"& _ 
                "nal_MODEL04ASM02)) AND ((@IsNull_MODEL04ASM03 = 1 AND [MODEL04ASM03] IS NULL) OR"& _ 
                " ([MODEL04ASM03] = @Original_MODEL04ASM03)) AND ((@IsNull_MODEL04ASM04 = 1 AND ["& _ 
                "MODEL04ASM04] IS NULL) OR ([MODEL04ASM04] = @Original_MODEL04ASM04)) AND ((@IsNu"& _ 
                "ll_MODEL04ASM05 = 1 AND [MODEL04ASM05] IS NULL) OR ([MODEL04ASM05] = @Original_M"& _ 
                "ODEL04ASM05)) AND ((@IsNull_MODEL05ASM01 = 1 AND [MODEL05ASM01] IS NULL) OR ([MO"& _ 
                "DEL05ASM01] = @Original_MODEL05ASM01)) AND ((@IsNull_MODEL05ASM02 = 1 AND [MODEL"& _ 
                "05ASM02] IS NULL) OR ([MODEL05ASM02] = @Original_MODEL05ASM02)) AND ((@IsNull_MO"& _ 
                "DEL05ASM03 = 1 AND [MODEL05ASM03] IS NULL) OR ([MODEL05ASM03] = @Original_MODEL0"& _ 
                "5ASM03)) AND ((@IsNull_MODEL05ASM04 = 1 AND [MODEL05ASM04] IS NULL) OR ([MODEL05"& _ 
                "ASM04] = @Original_MODEL05ASM04)) AND ((@IsNull_MODEL05ASM05 = 1 AND [MODEL05ASM"& _ 
                "05] IS NULL) OR ([MODEL05ASM05] = @Original_MODEL05ASM05)) AND ((@IsNull_MODEL06"& _ 
                "ASM01 = 1 AND [MODEL06ASM01] IS NULL) OR ([MODEL06ASM01] = @Original_MODEL06ASM0"& _ 
                "1)) AND ((@IsNull_MODEL06ASM02 = 1 AND [MODEL06ASM02] IS NULL) OR ([MODEL06ASM02"& _ 
                "] = @Original_MODEL06ASM02)) AND ((@IsNull_MODEL06ASM03 = 1 AND [MODEL06ASM03] I"& _ 
                "S NULL) OR ([MODEL06ASM03] = @Original_MODEL06ASM03)) AND ((@IsNull_MODEL06ASM04"& _ 
                " = 1 AND [MODEL06ASM04] IS NULL) OR ([MODEL06ASM04] = @Original_MODEL06ASM04)) A"& _ 
                "ND ((@IsNull_MODEL06ASM05 = 1 AND [MODEL06ASM05] IS NULL) OR ([MODEL06ASM05] = @"& _ 
                "Original_MODEL06ASM05)) AND ((@IsNull_MODEL07ASM01 = 1 AND [MODEL07ASM01] IS NUL"& _ 
                "L) OR ([MODEL07ASM01] = @Original_MODEL07ASM01)) AND ((@IsNull_MODEL07ASM02 = 1 "& _ 
                "AND [MODEL07ASM02] IS NULL) OR ([MODEL07ASM02] = @Original_MODEL07ASM02)) AND (("& _ 
                "@IsNull_MODEL07ASM03 = 1 AND [MODEL07ASM03] IS NULL) OR ([MODEL07ASM03] = @Origi"& _ 
                "nal_MODEL07ASM03)) AND ((@IsNull_MODEL07ASM04 = 1 AND [MODEL07ASM04] IS NULL) OR"& _ 
                " ([MODEL07ASM04] = @Original_MODEL07ASM04)) AND ((@IsNull_MODEL07ASM05 = 1 AND ["& _ 
                "MODEL07ASM05] IS NULL) OR ([MODEL07ASM05] = @Original_MODEL07ASM05)) AND ((@IsNu"& _ 
                "ll_MODEL08ASM01 = 1 AND [MODEL08ASM01] IS NULL) OR ([MODEL08ASM01] = @Original_M"& _ 
                "ODEL08ASM01)) AND ((@IsNull_MODEL08ASM02 = 1 AND [MODEL08ASM02] IS NULL) OR ([MO"& _ 
                "DEL08ASM02] = @Original_MODEL08ASM02)) AND ((@IsNull_MODEL08ASM03 = 1 AND [MODEL"& _ 
                "08ASM03] IS NULL) OR ([MODEL08ASM03] = @Original_MODEL08ASM03)) AND ((@IsNull_MO"& _ 
                "DEL08ASM04 = 1 AND [MODEL08ASM04] IS NULL) OR ([MODEL08ASM04] = @Original_MODEL0"& _ 
                "8ASM04)) AND ((@IsNull_MODEL08ASM05 = 1 AND [MODEL08ASM05] IS NULL) OR ([MODEL08"& _ 
                "ASM05] = @Original_MODEL08ASM05)) AND ((@IsNull_MODEL09ASM01 = 1 AND [MODEL09ASM"& _ 
                "01] IS NULL) OR ([MODEL09ASM01] = @Original_MODEL09ASM01)) AND ((@IsNull_MODEL09"& _ 
                "ASM02 = 1 AND [MODEL09ASM02] IS NULL) OR ([MODEL09ASM02] = @Original_MODEL09ASM0"& _ 
                "2)) AND ((@IsNull_MODEL09ASM03 = 1 AND [MODEL09ASM03] IS NULL) OR ([MODEL09ASM03"& _ 
                "] = @Original_MODEL09ASM03)) AND ((@IsNull_MODEL09ASM04 = 1 AND [MODEL09ASM04] I"& _ 
                "S NULL) OR ([MODEL09ASM04] = @Original_MODEL09ASM04)) AND ((@IsNull_MODEL09ASM05"& _ 
                " = 1 AND [MODEL09ASM05] IS NULL) OR ([MODEL09ASM05] = @Original_MODEL09ASM05)) A"& _ 
                "ND ((@IsNull_MODEL10ASM01 = 1 AND [MODEL10ASM01] IS NULL) OR ([MODEL10ASM01] = @"& _ 
                "Original_MODEL10ASM01)) AND ((@IsNull_MODEL10ASM02 = 1 AND [MODEL10ASM02] IS NUL"& _ 
                "L) OR ([MODEL10ASM02] = @Original_MODEL10ASM02)) AND ((@IsNull_MODEL10ASM03 = 1 "& _ 
                "AND [MODEL10ASM03] IS NULL) OR ([MODEL10ASM03] = @Original_MODEL10ASM03)) AND (("& _ 
                "@IsNull_MODEL10ASM04 = 1 AND [MODEL10ASM04] IS NULL) OR ([MODEL10ASM04] = @Origi"& _ 
                "nal_MODEL10ASM04)) AND ((@IsNull_MODEL10ASM05 = 1 AND [MODEL10ASM05] IS NULL) OR"& _ 
                " ([MODEL10ASM05] = @Original_MODEL10ASM05)) AND ((@IsNull_MODEL11ASM01 = 1 AND ["& _ 
                "MODEL11ASM01] IS NULL) OR ([MODEL11ASM01] = @Original_MODEL11ASM01)) AND ((@IsNu"& _ 
                "ll_MODEL11ASM02 = 1 AND [MODEL11ASM02] IS NULL) OR ([MODEL11ASM02] = @Original_M"& _ 
                "ODEL11ASM02)) AND ((@IsNull_MODEL11ASM03 = 1 AND [MODEL11ASM03] IS NULL) OR ([MO"& _ 
                "DEL11ASM03] = @Original_MODEL11ASM03)) AND ((@IsNull_MODEL11ASM04 = 1 AND [MODEL"& _ 
                "11ASM04] IS NULL) OR ([MODEL11ASM04] = @Original_MODEL11ASM04)) AND ((@IsNull_MO"& _ 
                "DEL11ASM05 = 1 AND [MODEL11ASM05] IS NULL) OR ([MODEL11ASM05] = @Original_MODEL1"& _ 
                "1ASM05)) AND ((@IsNull_MODEL12ASM01 = 1 AND [MODEL12ASM01] IS NULL) OR ([MODEL12"& _ 
                "ASM01] = @Original_MODEL12ASM01)) AND ((@IsNull_MODEL12ASM02 = 1 AND [MODEL12ASM"& _ 
                "02] IS NULL) OR ([MODEL12ASM02] = @Original_MODEL12ASM02)) AND ((@IsNull_MODEL12"& _ 
                "ASM03 = 1 AND [MODEL12ASM03] IS NULL) OR ([MODEL12ASM03] = @Original_MODEL12ASM0"& _ 
                "3)) AND ((@IsNull_MODEL12ASM04 = 1 AND [MODEL12ASM04] IS NULL) OR ([MODEL12ASM04"& _ 
                "] = @Original_MODEL12ASM04)) AND ((@IsNull_MODEL12ASM05 = 1 AND [MODEL12ASM05] I"& _ 
                "S NULL) OR ([MODEL12ASM05] = @Original_MODEL12ASM05)) AND ((@IsNull_MODEL13ASM01"& _ 
                " = 1 AND [MODEL13ASM01] IS NULL) OR ([MODEL13ASM01] = @Original_MODEL13ASM01)) A"& _ 
                "ND ((@IsNull_MODEL13ASM02 = 1 AND [MODEL13ASM02] IS NULL) OR ([MODEL13ASM02] = @"& _ 
                "Original_MODEL13ASM02)) AND ((@IsNull_MODEL13ASM03 = 1 AND [MODEL13ASM03] IS NUL"& _ 
                "L) OR ([MODEL13ASM03] = @Original_MODEL13ASM03)) AND ((@IsNull_MODEL13ASM04 = 1 "& _ 
                "AND [MODEL13ASM04] IS NULL) OR ([MODEL13ASM04] = @Original_MODEL13ASM04)) AND (("& _ 
                "@IsNull_MODEL13ASM05 = 1 AND [MODEL13ASM05] IS NULL) OR ([MODEL13ASM05] = @Origi"& _ 
                "nal_MODEL13ASM05)) AND ((@IsNull_MODEL14ASM01 = 1 AND [MODEL14ASM01] IS NULL) OR"& _ 
                " ([MODEL14ASM01] = @Original_MODEL14ASM01)) AND ((@IsNull_MODEL14ASM02 = 1 AND ["& _ 
                "MODEL14ASM02] IS NULL) OR ([MODEL14ASM02] = @Original_MODEL14ASM02)) AND ((@IsNu"& _ 
                "ll_MODEL14ASM03 = 1 AND [MODEL14ASM03] IS NULL) OR ([MODEL14ASM03] = @Original_M"& _ 
                "ODEL14ASM03)) AND ((@IsNull_MODEL14ASM04 = 1 AND [MODEL14ASM04] IS NULL) OR ([MO"& _ 
                "DEL14ASM04] = @Original_MODEL14ASM04)) AND ((@IsNull_MODEL14ASM05 = 1 AND [MODEL"& _ 
                "14ASM05] IS NULL) OR ([MODEL14ASM05] = @Original_MODEL14ASM05)) AND ((@IsNull_MO"& _ 
                "DEL15ASM01 = 1 AND [MODEL15ASM01] IS NULL) OR ([MODEL15ASM01] = @Original_MODEL1"& _ 
                "5ASM01)) AND ((@IsNull_MODEL15ASM02 = 1 AND [MODEL15ASM02] IS NULL) OR ([MODEL15"& _ 
                "ASM02] = @Original_MODEL15ASM02)) AND ((@IsNull_MODEL15ASM03 = 1 AND [MODEL15ASM"& _ 
                "03] IS NULL) OR ([MODEL15ASM03] = @Original_MODEL15ASM03)) AND ((@IsNull_MODEL15"& _ 
                "ASM04 = 1 AND [MODEL15ASM04] IS NULL) OR ([MODEL15ASM04] = @Original_MODEL15ASM0"& _ 
                "4)) AND ((@IsNull_MODEL15ASM05 = 1 AND [MODEL15ASM05] IS NULL) OR ([MODEL15ASM05"& _ 
                "] = @Original_MODEL15ASM05)) AND ((@IsNull_MODEL16ASM01 = 1 AND [MODEL16ASM01] I"& _ 
                "S NULL) OR ([MODEL16ASM01] = @Original_MODEL16ASM01)) AND ((@IsNull_MODEL16ASM02"& _ 
                " = 1 AND [MODEL16ASM02] IS NULL) OR ([MODEL16ASM02] = @Original_MODEL16ASM02)) A"& _ 
                "ND ((@IsNull_MODEL16ASM03 = 1 AND [MODEL16ASM03] IS NULL) OR ([MODEL16ASM03] = @"& _ 
                "Original_MODEL16ASM03)) AND ((@IsNull_MODEL16ASM04 = 1 AND [MODEL16ASM04] IS NUL"& _ 
                "L) OR ([MODEL16ASM04] = @Original_MODEL16ASM04)) AND ((@IsNull_MODEL16ASM05 = 1 "& _ 
                "AND [MODEL16ASM05] IS NULL) OR ([MODEL16ASM05] = @Original_MODEL16ASM05)) AND (("& _ 
                "@IsNull_MODEL17ASM01 = 1 AND [MODEL17ASM01] IS NULL) OR ([MODEL17ASM01] = @Origi"& _ 
                "nal_MODEL17ASM01)) AND ((@IsNull_MODEL17ASM02 = 1 AND [MODEL17ASM02] IS NULL) OR"& _ 
                " ([MODEL17ASM02] = @Original_MODEL17ASM02)) AND ((@IsNull_MODEL17ASM03 = 1 AND ["& _ 
                "MODEL17ASM03] IS NULL) OR ([MODEL17ASM03] = @Original_MODEL17ASM03)) AND ((@IsNu"& _ 
                "ll_MODEL17ASM04 = 1 AND [MODEL17ASM04] IS NULL) OR ([MODEL17ASM04] = @Original_M"& _ 
                "ODEL17ASM04)) AND ((@IsNull_MODEL17ASM05 = 1 AND [MODEL17ASM05] IS NULL) OR ([MO"& _ 
                "DEL17ASM05] = @Original_MODEL17ASM05)) AND ((@IsNull_MODEL18ASM01 = 1 AND [MODEL"& _ 
                "18ASM01] IS NULL) OR ([MODEL18ASM01] = @Original_MODEL18ASM01)) AND ((@IsNull_MO"& _ 
                "DEL18ASM02 = 1 AND [MODEL18ASM02] IS NULL) OR ([MODEL18ASM02] = @Original_MODEL1"& _ 
                "8ASM02)) AND ((@IsNull_MODEL18ASM03 = 1 AND [MODEL18ASM03] IS NULL) OR ([MODEL18"& _ 
                "ASM03] = @Original_MODEL18ASM03)) AND ((@IsNull_MODEL18ASM04 = 1 AND [MODEL18ASM"& _ 
                "04] IS NULL) OR ([MODEL18ASM04] = @Original_MODEL18ASM04)) AND ((@IsNull_MODEL18"& _ 
                "ASM05 = 1 AND [MODEL18ASM05] IS NULL) OR ([MODEL18ASM05] = @Original_MODEL18ASM0"& _ 
                "5)) AND ((@IsNull_MODEL19ASM01 = 1 AND [MODEL19ASM01] IS NULL) OR ([MODEL19ASM01"& _ 
                "] = @Original_MODEL19ASM01)) AND ((@IsNull_MODEL19ASM02 = 1 AND [MODEL19ASM02] I"& _ 
                "S NULL) OR ([MODEL19ASM02] = @Original_MODEL19ASM02)) AND ((@IsNull_MODEL19ASM03"& _ 
                " = 1 AND [MODEL19ASM03] IS NULL) OR ([MODEL19ASM03] = @Original_MODEL19ASM03)) A"& _ 
                "ND ((@IsNull_MODEL19ASM04 = 1 AND [MODEL19ASM04] IS NULL) OR ([MODEL19ASM04] = @"& _ 
                "Original_MODEL19ASM04)) AND ((@IsNull_MODEL19ASM05 = 1 AND [MODEL19ASM05] IS NUL"& _ 
                "L) OR ([MODEL19ASM05] = @Original_MODEL19ASM05)) AND ((@IsNull_MODEL20ASM01 = 1 "& _ 
                "AND [MODEL20ASM01] IS NULL) OR ([MODEL20ASM01] = @Original_MODEL20ASM01)) AND (("& _ 
                "@IsNull_MODEL20ASM02 = 1 AND [MODEL20ASM02] IS NULL) OR ([MODEL20ASM02] = @Origi"& _ 
                "nal_MODEL20ASM02)) AND ((@IsNull_MODEL20ASM03 = 1 AND [MODEL20ASM03] IS NULL) OR"& _ 
                " ([MODEL20ASM03] = @Original_MODEL20ASM03)) AND ((@IsNull_MODEL20ASM04 = 1 AND ["& _ 
                "MODEL20ASM04] IS NULL) OR ([MODEL20ASM04] = @Original_MODEL20ASM04)) AND ((@IsNu"& _ 
                "ll_MODEL20ASM05 = 1 AND [MODEL20ASM05] IS NULL) OR ([MODEL20ASM05] = @Original_M"& _ 
                "ODEL20ASM05)) AND ((@IsNull_Reserve01 = 1 AND [Reserve01] IS NULL) OR ([Reserve0"& _ 
                "1] = @Original_Reserve01)) AND ((@IsNull_Reserve02 = 1 AND [Reserve02] IS NULL) "& _ 
                "OR ([Reserve02] = @Original_Reserve02)) AND ((@IsNull_SubSeq = 1 AND [SubSeq] IS"& _ 
                " NULL) OR ([SubSeq] = @Original_SubSeq)) AND ((@IsNull_XchgFlag = 1 AND [XchgFla"& _ 
                "g] IS NULL) OR ([XchgFlag] = @Original_XchgFlag)) AND ((@IsNull_InstructFlag = 1"& _ 
                " AND [InstructFlag] IS NULL) OR ([InstructFlag] = @Original_InstructFlag)) AND ("& _ 
                "(@IsNull_FileName = 1 AND [FileName] IS NULL) OR ([FileName] = @Original_FileNam"& _ 
                "e)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SeqNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModelYear", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SuffixCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Unit", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BlockModel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BlockModel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BlockSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BlockSeq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MARK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MARK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProductionDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProductionDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProductionTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProductionTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ImportCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ImportCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YChassisFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YChassisFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GAShop", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GAShop", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HanmmerYears", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HanmmerYears", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL01ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL01ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL01ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL01ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL01ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL01ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL01ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL01ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL01ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL01ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL02ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL02ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL02ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL02ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL02ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL02ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL02ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL02ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL02ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL02ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL03ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL03ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL03ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL03ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL03ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL03ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL03ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL03ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL03ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL03ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL04ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL04ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL04ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL04ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL04ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL04ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL04ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL04ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL04ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL04ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL05ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL05ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL05ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL05ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL05ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL05ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL05ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL05ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL05ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL05ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL06ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL06ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL06ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL06ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL06ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL06ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL06ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL06ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL06ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL06ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL07ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL07ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL07ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL07ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL07ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL07ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL07ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL07ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL07ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL07ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL08ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL08ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL08ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL08ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL08ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL08ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL08ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL08ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL08ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL08ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL09ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL09ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL09ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL09ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL09ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL09ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL09ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL09ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL09ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL09ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL10ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL10ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL10ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL10ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL10ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL10ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL10ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL10ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL10ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL10ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL11ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL11ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL11ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL11ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL11ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL11ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL11ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL11ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL11ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL11ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL12ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL12ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL12ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL12ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL12ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL12ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL12ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL12ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL12ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL12ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL13ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL13ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL13ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL13ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL13ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL13ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL13ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL13ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL13ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL13ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL14ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL14ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL14ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL14ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL14ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL14ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL14ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL14ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL14ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL14ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL15ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL15ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL15ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL15ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL15ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL15ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL15ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL15ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL15ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL15ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL16ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL16ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL16ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL16ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL16ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL16ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL16ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL16ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL16ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL16ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL17ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL17ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL17ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL17ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL17ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL17ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL17ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL17ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL17ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL17ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL18ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL18ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL18ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL18ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL18ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL18ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL18ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL18ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL18ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL18ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL19ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL19ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL19ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL19ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL19ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL19ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL19ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL19ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL19ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL19ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL20ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL20ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL20ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL20ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL20ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL20ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL20ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL20ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL20ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL20ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Reserve01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Reserve01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Reserve02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Reserve02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_XchgFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_XchgFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InstructFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InstructFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InstructFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InstructFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FileName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FileName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FileName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FileName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [T_Production_DAT] ([SeqNo], [ModelYear], [SuffixCode], [LotID], [Lot"& _ 
                "No], [Unit], [BlockModel], [BlockSeq], [MARK], [ProductionDate], [ProductionTime"& _ 
                "], [ImportCode], [YChassisFlag], [GAShop], [HanmmerYears], [MODEL01ASM01], [MODE"& _ 
                "L01ASM02], [MODEL01ASM03], [MODEL01ASM04], [MODEL01ASM05], [MODEL02ASM01], [MODE"& _ 
                "L02ASM02], [MODEL02ASM03], [MODEL02ASM04], [MODEL02ASM05], [MODEL03ASM01], [MODE"& _ 
                "L03ASM02], [MODEL03ASM03], [MODEL03ASM04], [MODEL03ASM05], [MODEL04ASM01], [MODE"& _ 
                "L04ASM02], [MODEL04ASM03], [MODEL04ASM04], [MODEL04ASM05], [MODEL05ASM01], [MODE"& _ 
                "L05ASM02], [MODEL05ASM03], [MODEL05ASM04], [MODEL05ASM05], [MODEL06ASM01], [MODE"& _ 
                "L06ASM02], [MODEL06ASM03], [MODEL06ASM04], [MODEL06ASM05], [MODEL07ASM01], [MODE"& _ 
                "L07ASM02], [MODEL07ASM03], [MODEL07ASM04], [MODEL07ASM05], [MODEL08ASM01], [MODE"& _ 
                "L08ASM02], [MODEL08ASM03], [MODEL08ASM04], [MODEL08ASM05], [MODEL09ASM01], [MODE"& _ 
                "L09ASM02], [MODEL09ASM03], [MODEL09ASM04], [MODEL09ASM05], [MODEL10ASM01], [MODE"& _ 
                "L10ASM02], [MODEL10ASM03], [MODEL10ASM04], [MODEL10ASM05], [MODEL11ASM01], [MODE"& _ 
                "L11ASM02], [MODEL11ASM03], [MODEL11ASM04], [MODEL11ASM05], [MODEL12ASM01], [MODE"& _ 
                "L12ASM02], [MODEL12ASM03], [MODEL12ASM04], [MODEL12ASM05], [MODEL13ASM01], [MODE"& _ 
                "L13ASM02], [MODEL13ASM03], [MODEL13ASM04], [MODEL13ASM05], [MODEL14ASM01], [MODE"& _ 
                "L14ASM02], [MODEL14ASM03], [MODEL14ASM04], [MODEL14ASM05], [MODEL15ASM01], [MODE"& _ 
                "L15ASM02], [MODEL15ASM03], [MODEL15ASM04], [MODEL15ASM05], [MODEL16ASM01], [MODE"& _ 
                "L16ASM02], [MODEL16ASM03], [MODEL16ASM04], [MODEL16ASM05], [MODEL17ASM01], [MODE"& _ 
                "L17ASM02], [MODEL17ASM03], [MODEL17ASM04], [MODEL17ASM05], [MODEL18ASM01], [MODE"& _ 
                "L18ASM02], [MODEL18ASM03], [MODEL18ASM04], [MODEL18ASM05], [MODEL19ASM01], [MODE"& _ 
                "L19ASM02], [MODEL19ASM03], [MODEL19ASM04], [MODEL19ASM05], [MODEL20ASM01], [MODE"& _ 
                "L20ASM02], [MODEL20ASM03], [MODEL20ASM04], [MODEL20ASM05], [Reserve01], [Reserve"& _ 
                "02], [SubSeq], [XchgFlag], [InstructFlag], [FileName]) VALUES (@SeqNo, @ModelYea"& _ 
                "r, @SuffixCode, @LotID, @LotNo, @Unit, @BlockModel, @BlockSeq, @MARK, @Productio"& _ 
                "nDate, @ProductionTime, @ImportCode, @YChassisFlag, @GAShop, @HanmmerYears, @MOD"& _ 
                "EL01ASM01, @MODEL01ASM02, @MODEL01ASM03, @MODEL01ASM04, @MODEL01ASM05, @MODEL02A"& _ 
                "SM01, @MODEL02ASM02, @MODEL02ASM03, @MODEL02ASM04, @MODEL02ASM05, @MODEL03ASM01,"& _ 
                " @MODEL03ASM02, @MODEL03ASM03, @MODEL03ASM04, @MODEL03ASM05, @MODEL04ASM01, @MOD"& _ 
                "EL04ASM02, @MODEL04ASM03, @MODEL04ASM04, @MODEL04ASM05, @MODEL05ASM01, @MODEL05A"& _ 
                "SM02, @MODEL05ASM03, @MODEL05ASM04, @MODEL05ASM05, @MODEL06ASM01, @MODEL06ASM02,"& _ 
                " @MODEL06ASM03, @MODEL06ASM04, @MODEL06ASM05, @MODEL07ASM01, @MODEL07ASM02, @MOD"& _ 
                "EL07ASM03, @MODEL07ASM04, @MODEL07ASM05, @MODEL08ASM01, @MODEL08ASM02, @MODEL08A"& _ 
                "SM03, @MODEL08ASM04, @MODEL08ASM05, @MODEL09ASM01, @MODEL09ASM02, @MODEL09ASM03,"& _ 
                " @MODEL09ASM04, @MODEL09ASM05, @MODEL10ASM01, @MODEL10ASM02, @MODEL10ASM03, @MOD"& _ 
                "EL10ASM04, @MODEL10ASM05, @MODEL11ASM01, @MODEL11ASM02, @MODEL11ASM03, @MODEL11A"& _ 
                "SM04, @MODEL11ASM05, @MODEL12ASM01, @MODEL12ASM02, @MODEL12ASM03, @MODEL12ASM04,"& _ 
                " @MODEL12ASM05, @MODEL13ASM01, @MODEL13ASM02, @MODEL13ASM03, @MODEL13ASM04, @MOD"& _ 
                "EL13ASM05, @MODEL14ASM01, @MODEL14ASM02, @MODEL14ASM03, @MODEL14ASM04, @MODEL14A"& _ 
                "SM05, @MODEL15ASM01, @MODEL15ASM02, @MODEL15ASM03, @MODEL15ASM04, @MODEL15ASM05,"& _ 
                " @MODEL16ASM01, @MODEL16ASM02, @MODEL16ASM03, @MODEL16ASM04, @MODEL16ASM05, @MOD"& _ 
                "EL17ASM01, @MODEL17ASM02, @MODEL17ASM03, @MODEL17ASM04, @MODEL17ASM05, @MODEL18A"& _ 
                "SM01, @MODEL18ASM02, @MODEL18ASM03, @MODEL18ASM04, @MODEL18ASM05, @MODEL19ASM01,"& _ 
                " @MODEL19ASM02, @MODEL19ASM03, @MODEL19ASM04, @MODEL19ASM05, @MODEL20ASM01, @MOD"& _ 
                "EL20ASM02, @MODEL20ASM03, @MODEL20ASM04, @MODEL20ASM05, @Reserve01, @Reserve02, "& _ 
                "@SubSeq, @XchgFlag, @InstructFlag, @FileName);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SeqNo, ModelYear, SuffixC"& _ 
                "ode, LotID, LotNo, Unit, BlockModel, BlockSeq, MARK, ProductionDate, ProductionT"& _ 
                "ime, ImportCode, YChassisFlag, GAShop, HanmmerYears, MODEL01ASM01, MODEL01ASM02,"& _ 
                " MODEL01ASM03, MODEL01ASM04, MODEL01ASM05, MODEL02ASM01, MODEL02ASM02, MODEL02AS"& _ 
                "M03, MODEL02ASM04, MODEL02ASM05, MODEL03ASM01, MODEL03ASM02, MODEL03ASM03, MODEL"& _ 
                "03ASM04, MODEL03ASM05, MODEL04ASM01, MODEL04ASM02, MODEL04ASM03, MODEL04ASM04, M"& _ 
                "ODEL04ASM05, MODEL05ASM01, MODEL05ASM02, MODEL05ASM03, MODEL05ASM04, MODEL05ASM0"& _ 
                "5, MODEL06ASM01, MODEL06ASM02, MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, MODEL07"& _ 
                "ASM01, MODEL07ASM02, MODEL07ASM03, MODEL07ASM04, MODEL07ASM05, MODEL08ASM01, MOD"& _ 
                "EL08ASM02, MODEL08ASM03, MODEL08ASM04, MODEL08ASM05, MODEL09ASM01, MODEL09ASM02,"& _ 
                " MODEL09ASM03, MODEL09ASM04, MODEL09ASM05, MODEL10ASM01, MODEL10ASM02, MODEL10AS"& _ 
                "M03, MODEL10ASM04, MODEL10ASM05, MODEL11ASM01, MODEL11ASM02, MODEL11ASM03, MODEL"& _ 
                "11ASM04, MODEL11ASM05, MODEL12ASM01, MODEL12ASM02, MODEL12ASM03, MODEL12ASM04, M"& _ 
                "ODEL12ASM05, MODEL13ASM01, MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MODEL13ASM0"& _ 
                "5, MODEL14ASM01, MODEL14ASM02, MODEL14ASM03, MODEL14ASM04, MODEL14ASM05, MODEL15"& _ 
                "ASM01, MODEL15ASM02, MODEL15ASM03, MODEL15ASM04, MODEL15ASM05, MODEL16ASM01, MOD"& _ 
                "EL16ASM02, MODEL16ASM03, MODEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17ASM02,"& _ 
                " MODEL17ASM03, MODEL17ASM04, MODEL17ASM05, MODEL18ASM01, MODEL18ASM02, MODEL18AS"& _ 
                "M03, MODEL18ASM04, MODEL18ASM05, MODEL19ASM01, MODEL19ASM02, MODEL19ASM03, MODEL"& _ 
                "19ASM04, MODEL19ASM05, MODEL20ASM01, MODEL20ASM02, MODEL20ASM03, MODEL20ASM04, M"& _ 
                "ODEL20ASM05, Reserve01, Reserve02, SubSeq, XchgFlag, InstructFlag, FileName FROM"& _ 
                " T_Production_DAT WHERE (LotNo = @LotNo) AND (ModelYear = @ModelYear) AND (Suffi"& _ 
                "xCode = @SuffixCode) AND (Unit = @Unit) ORDER BY ProductionDate, ProductionTime,"& _ 
                " SeqNo, SubSeq"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModelYear", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SuffixCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Unit", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlockModel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlockSeq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MARK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ImportCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YChassisFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GAShop", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HanmmerYears", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL01ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL01ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL01ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL01ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL01ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL02ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL02ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL02ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL02ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL02ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL03ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL03ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL03ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL03ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL03ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL04ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL04ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL04ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL04ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL04ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL05ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL05ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL05ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL05ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL05ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL06ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL06ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL06ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL06ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL06ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL07ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL07ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL07ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL07ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL07ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL08ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL08ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL08ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL08ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL08ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL09ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL09ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL09ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL09ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL09ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL10ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL10ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL10ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL10ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL10ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL11ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL11ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL11ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL11ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL11ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL12ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL12ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL12ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL12ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL12ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL13ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL13ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL13ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL13ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL13ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL14ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL14ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL14ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL14ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL14ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL15ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL15ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL15ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL15ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL15ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL16ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL16ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL16ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL16ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL16ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL17ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL17ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL17ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL17ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL17ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL18ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL18ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL18ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL18ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL18ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL19ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL19ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL19ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL19ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL19ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL20ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL20ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL20ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL20ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL20ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Reserve01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Reserve02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XchgFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstructFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InstructFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FileName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FileName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [T_Production_DAT] SET [SeqNo] = @SeqNo, [ModelYear] = @ModelYear, [Suffix"& _ 
                "Code] = @SuffixCode, [LotID] = @LotID, [LotNo] = @LotNo, [Unit] = @Unit, [BlockM"& _ 
                "odel] = @BlockModel, [BlockSeq] = @BlockSeq, [MARK] = @MARK, [ProductionDate] = "& _ 
                "@ProductionDate, [ProductionTime] = @ProductionTime, [ImportCode] = @ImportCode,"& _ 
                " [YChassisFlag] = @YChassisFlag, [GAShop] = @GAShop, [HanmmerYears] = @HanmmerYe"& _ 
                "ars, [MODEL01ASM01] = @MODEL01ASM01, [MODEL01ASM02] = @MODEL01ASM02, [MODEL01ASM"& _ 
                "03] = @MODEL01ASM03, [MODEL01ASM04] = @MODEL01ASM04, [MODEL01ASM05] = @MODEL01AS"& _ 
                "M05, [MODEL02ASM01] = @MODEL02ASM01, [MODEL02ASM02] = @MODEL02ASM02, [MODEL02ASM"& _ 
                "03] = @MODEL02ASM03, [MODEL02ASM04] = @MODEL02ASM04, [MODEL02ASM05] = @MODEL02AS"& _ 
                "M05, [MODEL03ASM01] = @MODEL03ASM01, [MODEL03ASM02] = @MODEL03ASM02, [MODEL03ASM"& _ 
                "03] = @MODEL03ASM03, [MODEL03ASM04] = @MODEL03ASM04, [MODEL03ASM05] = @MODEL03AS"& _ 
                "M05, [MODEL04ASM01] = @MODEL04ASM01, [MODEL04ASM02] = @MODEL04ASM02, [MODEL04ASM"& _ 
                "03] = @MODEL04ASM03, [MODEL04ASM04] = @MODEL04ASM04, [MODEL04ASM05] = @MODEL04AS"& _ 
                "M05, [MODEL05ASM01] = @MODEL05ASM01, [MODEL05ASM02] = @MODEL05ASM02, [MODEL05ASM"& _ 
                "03] = @MODEL05ASM03, [MODEL05ASM04] = @MODEL05ASM04, [MODEL05ASM05] = @MODEL05AS"& _ 
                "M05, [MODEL06ASM01] = @MODEL06ASM01, [MODEL06ASM02] = @MODEL06ASM02, [MODEL06ASM"& _ 
                "03] = @MODEL06ASM03, [MODEL06ASM04] = @MODEL06ASM04, [MODEL06ASM05] = @MODEL06AS"& _ 
                "M05, [MODEL07ASM01] = @MODEL07ASM01, [MODEL07ASM02] = @MODEL07ASM02, [MODEL07ASM"& _ 
                "03] = @MODEL07ASM03, [MODEL07ASM04] = @MODEL07ASM04, [MODEL07ASM05] = @MODEL07AS"& _ 
                "M05, [MODEL08ASM01] = @MODEL08ASM01, [MODEL08ASM02] = @MODEL08ASM02, [MODEL08ASM"& _ 
                "03] = @MODEL08ASM03, [MODEL08ASM04] = @MODEL08ASM04, [MODEL08ASM05] = @MODEL08AS"& _ 
                "M05, [MODEL09ASM01] = @MODEL09ASM01, [MODEL09ASM02] = @MODEL09ASM02, [MODEL09ASM"& _ 
                "03] = @MODEL09ASM03, [MODEL09ASM04] = @MODEL09ASM04, [MODEL09ASM05] = @MODEL09AS"& _ 
                "M05, [MODEL10ASM01] = @MODEL10ASM01, [MODEL10ASM02] = @MODEL10ASM02, [MODEL10ASM"& _ 
                "03] = @MODEL10ASM03, [MODEL10ASM04] = @MODEL10ASM04, [MODEL10ASM05] = @MODEL10AS"& _ 
                "M05, [MODEL11ASM01] = @MODEL11ASM01, [MODEL11ASM02] = @MODEL11ASM02, [MODEL11ASM"& _ 
                "03] = @MODEL11ASM03, [MODEL11ASM04] = @MODEL11ASM04, [MODEL11ASM05] = @MODEL11AS"& _ 
                "M05, [MODEL12ASM01] = @MODEL12ASM01, [MODEL12ASM02] = @MODEL12ASM02, [MODEL12ASM"& _ 
                "03] = @MODEL12ASM03, [MODEL12ASM04] = @MODEL12ASM04, [MODEL12ASM05] = @MODEL12AS"& _ 
                "M05, [MODEL13ASM01] = @MODEL13ASM01, [MODEL13ASM02] = @MODEL13ASM02, [MODEL13ASM"& _ 
                "03] = @MODEL13ASM03, [MODEL13ASM04] = @MODEL13ASM04, [MODEL13ASM05] = @MODEL13AS"& _ 
                "M05, [MODEL14ASM01] = @MODEL14ASM01, [MODEL14ASM02] = @MODEL14ASM02, [MODEL14ASM"& _ 
                "03] = @MODEL14ASM03, [MODEL14ASM04] = @MODEL14ASM04, [MODEL14ASM05] = @MODEL14AS"& _ 
                "M05, [MODEL15ASM01] = @MODEL15ASM01, [MODEL15ASM02] = @MODEL15ASM02, [MODEL15ASM"& _ 
                "03] = @MODEL15ASM03, [MODEL15ASM04] = @MODEL15ASM04, [MODEL15ASM05] = @MODEL15AS"& _ 
                "M05, [MODEL16ASM01] = @MODEL16ASM01, [MODEL16ASM02] = @MODEL16ASM02, [MODEL16ASM"& _ 
                "03] = @MODEL16ASM03, [MODEL16ASM04] = @MODEL16ASM04, [MODEL16ASM05] = @MODEL16AS"& _ 
                "M05, [MODEL17ASM01] = @MODEL17ASM01, [MODEL17ASM02] = @MODEL17ASM02, [MODEL17ASM"& _ 
                "03] = @MODEL17ASM03, [MODEL17ASM04] = @MODEL17ASM04, [MODEL17ASM05] = @MODEL17AS"& _ 
                "M05, [MODEL18ASM01] = @MODEL18ASM01, [MODEL18ASM02] = @MODEL18ASM02, [MODEL18ASM"& _ 
                "03] = @MODEL18ASM03, [MODEL18ASM04] = @MODEL18ASM04, [MODEL18ASM05] = @MODEL18AS"& _ 
                "M05, [MODEL19ASM01] = @MODEL19ASM01, [MODEL19ASM02] = @MODEL19ASM02, [MODEL19ASM"& _ 
                "03] = @MODEL19ASM03, [MODEL19ASM04] = @MODEL19ASM04, [MODEL19ASM05] = @MODEL19AS"& _ 
                "M05, [MODEL20ASM01] = @MODEL20ASM01, [MODEL20ASM02] = @MODEL20ASM02, [MODEL20ASM"& _ 
                "03] = @MODEL20ASM03, [MODEL20ASM04] = @MODEL20ASM04, [MODEL20ASM05] = @MODEL20AS"& _ 
                "M05, [Reserve01] = @Reserve01, [Reserve02] = @Reserve02, [SubSeq] = @SubSeq, [Xc"& _ 
                "hgFlag] = @XchgFlag, [InstructFlag] = @InstructFlag, [FileName] = @FileName WHER"& _ 
                "E (([SeqNo] = @Original_SeqNo) AND ([ModelYear] = @Original_ModelYear) AND ([Suf"& _ 
                "fixCode] = @Original_SuffixCode) AND ([LotID] = @Original_LotID) AND ([LotNo] = "& _ 
                "@Original_LotNo) AND ([Unit] = @Original_Unit) AND ((@IsNull_BlockModel = 1 AND "& _ 
                "[BlockModel] IS NULL) OR ([BlockModel] = @Original_BlockModel)) AND ((@IsNull_Bl"& _ 
                "ockSeq = 1 AND [BlockSeq] IS NULL) OR ([BlockSeq] = @Original_BlockSeq)) AND ((@"& _ 
                "IsNull_MARK = 1 AND [MARK] IS NULL) OR ([MARK] = @Original_MARK)) AND ((@IsNull_"& _ 
                "ProductionDate = 1 AND [ProductionDate] IS NULL) OR ([ProductionDate] = @Origina"& _ 
                "l_ProductionDate)) AND ((@IsNull_ProductionTime = 1 AND [ProductionTime] IS NULL"& _ 
                ") OR ([ProductionTime] = @Original_ProductionTime)) AND ((@IsNull_ImportCode = 1"& _ 
                " AND [ImportCode] IS NULL) OR ([ImportCode] = @Original_ImportCode)) AND ((@IsNu"& _ 
                "ll_YChassisFlag = 1 AND [YChassisFlag] IS NULL) OR ([YChassisFlag] = @Original_Y"& _ 
                "ChassisFlag)) AND ((@IsNull_GAShop = 1 AND [GAShop] IS NULL) OR ([GAShop] = @Ori"& _ 
                "ginal_GAShop)) AND ((@IsNull_HanmmerYears = 1 AND [HanmmerYears] IS NULL) OR ([H"& _ 
                "anmmerYears] = @Original_HanmmerYears)) AND ((@IsNull_MODEL01ASM01 = 1 AND [MODE"& _ 
                "L01ASM01] IS NULL) OR ([MODEL01ASM01] = @Original_MODEL01ASM01)) AND ((@IsNull_M"& _ 
                "ODEL01ASM02 = 1 AND [MODEL01ASM02] IS NULL) OR ([MODEL01ASM02] = @Original_MODEL"& _ 
                "01ASM02)) AND ((@IsNull_MODEL01ASM03 = 1 AND [MODEL01ASM03] IS NULL) OR ([MODEL0"& _ 
                "1ASM03] = @Original_MODEL01ASM03)) AND ((@IsNull_MODEL01ASM04 = 1 AND [MODEL01AS"& _ 
                "M04] IS NULL) OR ([MODEL01ASM04] = @Original_MODEL01ASM04)) AND ((@IsNull_MODEL0"& _ 
                "1ASM05 = 1 AND [MODEL01ASM05] IS NULL) OR ([MODEL01ASM05] = @Original_MODEL01ASM"& _ 
                "05)) AND ((@IsNull_MODEL02ASM01 = 1 AND [MODEL02ASM01] IS NULL) OR ([MODEL02ASM0"& _ 
                "1] = @Original_MODEL02ASM01)) AND ((@IsNull_MODEL02ASM02 = 1 AND [MODEL02ASM02] "& _ 
                "IS NULL) OR ([MODEL02ASM02] = @Original_MODEL02ASM02)) AND ((@IsNull_MODEL02ASM0"& _ 
                "3 = 1 AND [MODEL02ASM03] IS NULL) OR ([MODEL02ASM03] = @Original_MODEL02ASM03)) "& _ 
                "AND ((@IsNull_MODEL02ASM04 = 1 AND [MODEL02ASM04] IS NULL) OR ([MODEL02ASM04] = "& _ 
                "@Original_MODEL02ASM04)) AND ((@IsNull_MODEL02ASM05 = 1 AND [MODEL02ASM05] IS NU"& _ 
                "LL) OR ([MODEL02ASM05] = @Original_MODEL02ASM05)) AND ((@IsNull_MODEL03ASM01 = 1"& _ 
                " AND [MODEL03ASM01] IS NULL) OR ([MODEL03ASM01] = @Original_MODEL03ASM01)) AND ("& _ 
                "(@IsNull_MODEL03ASM02 = 1 AND [MODEL03ASM02] IS NULL) OR ([MODEL03ASM02] = @Orig"& _ 
                "inal_MODEL03ASM02)) AND ((@IsNull_MODEL03ASM03 = 1 AND [MODEL03ASM03] IS NULL) O"& _ 
                "R ([MODEL03ASM03] = @Original_MODEL03ASM03)) AND ((@IsNull_MODEL03ASM04 = 1 AND "& _ 
                "[MODEL03ASM04] IS NULL) OR ([MODEL03ASM04] = @Original_MODEL03ASM04)) AND ((@IsN"& _ 
                "ull_MODEL03ASM05 = 1 AND [MODEL03ASM05] IS NULL) OR ([MODEL03ASM05] = @Original_"& _ 
                "MODEL03ASM05)) AND ((@IsNull_MODEL04ASM01 = 1 AND [MODEL04ASM01] IS NULL) OR ([M"& _ 
                "ODEL04ASM01] = @Original_MODEL04ASM01)) AND ((@IsNull_MODEL04ASM02 = 1 AND [MODE"& _ 
                "L04ASM02] IS NULL) OR ([MODEL04ASM02] = @Original_MODEL04ASM02)) AND ((@IsNull_M"& _ 
                "ODEL04ASM03 = 1 AND [MODEL04ASM03] IS NULL) OR ([MODEL04ASM03] = @Original_MODEL"& _ 
                "04ASM03)) AND ((@IsNull_MODEL04ASM04 = 1 AND [MODEL04ASM04] IS NULL) OR ([MODEL0"& _ 
                "4ASM04] = @Original_MODEL04ASM04)) AND ((@IsNull_MODEL04ASM05 = 1 AND [MODEL04AS"& _ 
                "M05] IS NULL) OR ([MODEL04ASM05] = @Original_MODEL04ASM05)) AND ((@IsNull_MODEL0"& _ 
                "5ASM01 = 1 AND [MODEL05ASM01] IS NULL) OR ([MODEL05ASM01] = @Original_MODEL05ASM"& _ 
                "01)) AND ((@IsNull_MODEL05ASM02 = 1 AND [MODEL05ASM02] IS NULL) OR ([MODEL05ASM0"& _ 
                "2] = @Original_MODEL05ASM02)) AND ((@IsNull_MODEL05ASM03 = 1 AND [MODEL05ASM03] "& _ 
                "IS NULL) OR ([MODEL05ASM03] = @Original_MODEL05ASM03)) AND ((@IsNull_MODEL05ASM0"& _ 
                "4 = 1 AND [MODEL05ASM04] IS NULL) OR ([MODEL05ASM04] = @Original_MODEL05ASM04)) "& _ 
                "AND ((@IsNull_MODEL05ASM05 = 1 AND [MODEL05ASM05] IS NULL) OR ([MODEL05ASM05] = "& _ 
                "@Original_MODEL05ASM05)) AND ((@IsNull_MODEL06ASM01 = 1 AND [MODEL06ASM01] IS NU"& _ 
                "LL) OR ([MODEL06ASM01] = @Original_MODEL06ASM01)) AND ((@IsNull_MODEL06ASM02 = 1"& _ 
                " AND [MODEL06ASM02] IS NULL) OR ([MODEL06ASM02] = @Original_MODEL06ASM02)) AND ("& _ 
                "(@IsNull_MODEL06ASM03 = 1 AND [MODEL06ASM03] IS NULL) OR ([MODEL06ASM03] = @Orig"& _ 
                "inal_MODEL06ASM03)) AND ((@IsNull_MODEL06ASM04 = 1 AND [MODEL06ASM04] IS NULL) O"& _ 
                "R ([MODEL06ASM04] = @Original_MODEL06ASM04)) AND ((@IsNull_MODEL06ASM05 = 1 AND "& _ 
                "[MODEL06ASM05] IS NULL) OR ([MODEL06ASM05] = @Original_MODEL06ASM05)) AND ((@IsN"& _ 
                "ull_MODEL07ASM01 = 1 AND [MODEL07ASM01] IS NULL) OR ([MODEL07ASM01] = @Original_"& _ 
                "MODEL07ASM01)) AND ((@IsNull_MODEL07ASM02 = 1 AND [MODEL07ASM02] IS NULL) OR ([M"& _ 
                "ODEL07ASM02] = @Original_MODEL07ASM02)) AND ((@IsNull_MODEL07ASM03 = 1 AND [MODE"& _ 
                "L07ASM03] IS NULL) OR ([MODEL07ASM03] = @Original_MODEL07ASM03)) AND ((@IsNull_M"& _ 
                "ODEL07ASM04 = 1 AND [MODEL07ASM04] IS NULL) OR ([MODEL07ASM04] = @Original_MODEL"& _ 
                "07ASM04)) AND ((@IsNull_MODEL07ASM05 = 1 AND [MODEL07ASM05] IS NULL) OR ([MODEL0"& _ 
                "7ASM05] = @Original_MODEL07ASM05)) AND ((@IsNull_MODEL08ASM01 = 1 AND [MODEL08AS"& _ 
                "M01] IS NULL) OR ([MODEL08ASM01] = @Original_MODEL08ASM01)) AND ((@IsNull_MODEL0"& _ 
                "8ASM02 = 1 AND [MODEL08ASM02] IS NULL) OR ([MODEL08ASM02] = @Original_MODEL08ASM"& _ 
                "02)) AND ((@IsNull_MODEL08ASM03 = 1 AND [MODEL08ASM03] IS NULL) OR ([MODEL08ASM0"& _ 
                "3] = @Original_MODEL08ASM03)) AND ((@IsNull_MODEL08ASM04 = 1 AND [MODEL08ASM04] "& _ 
                "IS NULL) OR ([MODEL08ASM04] = @Original_MODEL08ASM04)) AND ((@IsNull_MODEL08ASM0"& _ 
                "5 = 1 AND [MODEL08ASM05] IS NULL) OR ([MODEL08ASM05] = @Original_MODEL08ASM05)) "& _ 
                "AND ((@IsNull_MODEL09ASM01 = 1 AND [MODEL09ASM01] IS NULL) OR ([MODEL09ASM01] = "& _ 
                "@Original_MODEL09ASM01)) AND ((@IsNull_MODEL09ASM02 = 1 AND [MODEL09ASM02] IS NU"& _ 
                "LL) OR ([MODEL09ASM02] = @Original_MODEL09ASM02)) AND ((@IsNull_MODEL09ASM03 = 1"& _ 
                " AND [MODEL09ASM03] IS NULL) OR ([MODEL09ASM03] = @Original_MODEL09ASM03)) AND ("& _ 
                "(@IsNull_MODEL09ASM04 = 1 AND [MODEL09ASM04] IS NULL) OR ([MODEL09ASM04] = @Orig"& _ 
                "inal_MODEL09ASM04)) AND ((@IsNull_MODEL09ASM05 = 1 AND [MODEL09ASM05] IS NULL) O"& _ 
                "R ([MODEL09ASM05] = @Original_MODEL09ASM05)) AND ((@IsNull_MODEL10ASM01 = 1 AND "& _ 
                "[MODEL10ASM01] IS NULL) OR ([MODEL10ASM01] = @Original_MODEL10ASM01)) AND ((@IsN"& _ 
                "ull_MODEL10ASM02 = 1 AND [MODEL10ASM02] IS NULL) OR ([MODEL10ASM02] = @Original_"& _ 
                "MODEL10ASM02)) AND ((@IsNull_MODEL10ASM03 = 1 AND [MODEL10ASM03] IS NULL) OR ([M"& _ 
                "ODEL10ASM03] = @Original_MODEL10ASM03)) AND ((@IsNull_MODEL10ASM04 = 1 AND [MODE"& _ 
                "L10ASM04] IS NULL) OR ([MODEL10ASM04] = @Original_MODEL10ASM04)) AND ((@IsNull_M"& _ 
                "ODEL10ASM05 = 1 AND [MODEL10ASM05] IS NULL) OR ([MODEL10ASM05] = @Original_MODEL"& _ 
                "10ASM05)) AND ((@IsNull_MODEL11ASM01 = 1 AND [MODEL11ASM01] IS NULL) OR ([MODEL1"& _ 
                "1ASM01] = @Original_MODEL11ASM01)) AND ((@IsNull_MODEL11ASM02 = 1 AND [MODEL11AS"& _ 
                "M02] IS NULL) OR ([MODEL11ASM02] = @Original_MODEL11ASM02)) AND ((@IsNull_MODEL1"& _ 
                "1ASM03 = 1 AND [MODEL11ASM03] IS NULL) OR ([MODEL11ASM03] = @Original_MODEL11ASM"& _ 
                "03)) AND ((@IsNull_MODEL11ASM04 = 1 AND [MODEL11ASM04] IS NULL) OR ([MODEL11ASM0"& _ 
                "4] = @Original_MODEL11ASM04)) AND ((@IsNull_MODEL11ASM05 = 1 AND [MODEL11ASM05] "& _ 
                "IS NULL) OR ([MODEL11ASM05] = @Original_MODEL11ASM05)) AND ((@IsNull_MODEL12ASM0"& _ 
                "1 = 1 AND [MODEL12ASM01] IS NULL) OR ([MODEL12ASM01] = @Original_MODEL12ASM01)) "& _ 
                "AND ((@IsNull_MODEL12ASM02 = 1 AND [MODEL12ASM02] IS NULL) OR ([MODEL12ASM02] = "& _ 
                "@Original_MODEL12ASM02)) AND ((@IsNull_MODEL12ASM03 = 1 AND [MODEL12ASM03] IS NU"& _ 
                "LL) OR ([MODEL12ASM03] = @Original_MODEL12ASM03)) AND ((@IsNull_MODEL12ASM04 = 1"& _ 
                " AND [MODEL12ASM04] IS NULL) OR ([MODEL12ASM04] = @Original_MODEL12ASM04)) AND ("& _ 
                "(@IsNull_MODEL12ASM05 = 1 AND [MODEL12ASM05] IS NULL) OR ([MODEL12ASM05] = @Orig"& _ 
                "inal_MODEL12ASM05)) AND ((@IsNull_MODEL13ASM01 = 1 AND [MODEL13ASM01] IS NULL) O"& _ 
                "R ([MODEL13ASM01] = @Original_MODEL13ASM01)) AND ((@IsNull_MODEL13ASM02 = 1 AND "& _ 
                "[MODEL13ASM02] IS NULL) OR ([MODEL13ASM02] = @Original_MODEL13ASM02)) AND ((@IsN"& _ 
                "ull_MODEL13ASM03 = 1 AND [MODEL13ASM03] IS NULL) OR ([MODEL13ASM03] = @Original_"& _ 
                "MODEL13ASM03)) AND ((@IsNull_MODEL13ASM04 = 1 AND [MODEL13ASM04] IS NULL) OR ([M"& _ 
                "ODEL13ASM04] = @Original_MODEL13ASM04)) AND ((@IsNull_MODEL13ASM05 = 1 AND [MODE"& _ 
                "L13ASM05] IS NULL) OR ([MODEL13ASM05] = @Original_MODEL13ASM05)) AND ((@IsNull_M"& _ 
                "ODEL14ASM01 = 1 AND [MODEL14ASM01] IS NULL) OR ([MODEL14ASM01] = @Original_MODEL"& _ 
                "14ASM01)) AND ((@IsNull_MODEL14ASM02 = 1 AND [MODEL14ASM02] IS NULL) OR ([MODEL1"& _ 
                "4ASM02] = @Original_MODEL14ASM02)) AND ((@IsNull_MODEL14ASM03 = 1 AND [MODEL14AS"& _ 
                "M03] IS NULL) OR ([MODEL14ASM03] = @Original_MODEL14ASM03)) AND ((@IsNull_MODEL1"& _ 
                "4ASM04 = 1 AND [MODEL14ASM04] IS NULL) OR ([MODEL14ASM04] = @Original_MODEL14ASM"& _ 
                "04)) AND ((@IsNull_MODEL14ASM05 = 1 AND [MODEL14ASM05] IS NULL) OR ([MODEL14ASM0"& _ 
                "5] = @Original_MODEL14ASM05)) AND ((@IsNull_MODEL15ASM01 = 1 AND [MODEL15ASM01] "& _ 
                "IS NULL) OR ([MODEL15ASM01] = @Original_MODEL15ASM01)) AND ((@IsNull_MODEL15ASM0"& _ 
                "2 = 1 AND [MODEL15ASM02] IS NULL) OR ([MODEL15ASM02] = @Original_MODEL15ASM02)) "& _ 
                "AND ((@IsNull_MODEL15ASM03 = 1 AND [MODEL15ASM03] IS NULL) OR ([MODEL15ASM03] = "& _ 
                "@Original_MODEL15ASM03)) AND ((@IsNull_MODEL15ASM04 = 1 AND [MODEL15ASM04] IS NU"& _ 
                "LL) OR ([MODEL15ASM04] = @Original_MODEL15ASM04)) AND ((@IsNull_MODEL15ASM05 = 1"& _ 
                " AND [MODEL15ASM05] IS NULL) OR ([MODEL15ASM05] = @Original_MODEL15ASM05)) AND ("& _ 
                "(@IsNull_MODEL16ASM01 = 1 AND [MODEL16ASM01] IS NULL) OR ([MODEL16ASM01] = @Orig"& _ 
                "inal_MODEL16ASM01)) AND ((@IsNull_MODEL16ASM02 = 1 AND [MODEL16ASM02] IS NULL) O"& _ 
                "R ([MODEL16ASM02] = @Original_MODEL16ASM02)) AND ((@IsNull_MODEL16ASM03 = 1 AND "& _ 
                "[MODEL16ASM03] IS NULL) OR ([MODEL16ASM03] = @Original_MODEL16ASM03)) AND ((@IsN"& _ 
                "ull_MODEL16ASM04 = 1 AND [MODEL16ASM04] IS NULL) OR ([MODEL16ASM04] = @Original_"& _ 
                "MODEL16ASM04)) AND ((@IsNull_MODEL16ASM05 = 1 AND [MODEL16ASM05] IS NULL) OR ([M"& _ 
                "ODEL16ASM05] = @Original_MODEL16ASM05)) AND ((@IsNull_MODEL17ASM01 = 1 AND [MODE"& _ 
                "L17ASM01] IS NULL) OR ([MODEL17ASM01] = @Original_MODEL17ASM01)) AND ((@IsNull_M"& _ 
                "ODEL17ASM02 = 1 AND [MODEL17ASM02] IS NULL) OR ([MODEL17ASM02] = @Original_MODEL"& _ 
                "17ASM02)) AND ((@IsNull_MODEL17ASM03 = 1 AND [MODEL17ASM03] IS NULL) OR ([MODEL1"& _ 
                "7ASM03] = @Original_MODEL17ASM03)) AND ((@IsNull_MODEL17ASM04 = 1 AND [MODEL17AS"& _ 
                "M04] IS NULL) OR ([MODEL17ASM04] = @Original_MODEL17ASM04)) AND ((@IsNull_MODEL1"& _ 
                "7ASM05 = 1 AND [MODEL17ASM05] IS NULL) OR ([MODEL17ASM05] = @Original_MODEL17ASM"& _ 
                "05)) AND ((@IsNull_MODEL18ASM01 = 1 AND [MODEL18ASM01] IS NULL) OR ([MODEL18ASM0"& _ 
                "1] = @Original_MODEL18ASM01)) AND ((@IsNull_MODEL18ASM02 = 1 AND [MODEL18ASM02] "& _ 
                "IS NULL) OR ([MODEL18ASM02] = @Original_MODEL18ASM02)) AND ((@IsNull_MODEL18ASM0"& _ 
                "3 = 1 AND [MODEL18ASM03] IS NULL) OR ([MODEL18ASM03] = @Original_MODEL18ASM03)) "& _ 
                "AND ((@IsNull_MODEL18ASM04 = 1 AND [MODEL18ASM04] IS NULL) OR ([MODEL18ASM04] = "& _ 
                "@Original_MODEL18ASM04)) AND ((@IsNull_MODEL18ASM05 = 1 AND [MODEL18ASM05] IS NU"& _ 
                "LL) OR ([MODEL18ASM05] = @Original_MODEL18ASM05)) AND ((@IsNull_MODEL19ASM01 = 1"& _ 
                " AND [MODEL19ASM01] IS NULL) OR ([MODEL19ASM01] = @Original_MODEL19ASM01)) AND ("& _ 
                "(@IsNull_MODEL19ASM02 = 1 AND [MODEL19ASM02] IS NULL) OR ([MODEL19ASM02] = @Orig"& _ 
                "inal_MODEL19ASM02)) AND ((@IsNull_MODEL19ASM03 = 1 AND [MODEL19ASM03] IS NULL) O"& _ 
                "R ([MODEL19ASM03] = @Original_MODEL19ASM03)) AND ((@IsNull_MODEL19ASM04 = 1 AND "& _ 
                "[MODEL19ASM04] IS NULL) OR ([MODEL19ASM04] = @Original_MODEL19ASM04)) AND ((@IsN"& _ 
                "ull_MODEL19ASM05 = 1 AND [MODEL19ASM05] IS NULL) OR ([MODEL19ASM05] = @Original_"& _ 
                "MODEL19ASM05)) AND ((@IsNull_MODEL20ASM01 = 1 AND [MODEL20ASM01] IS NULL) OR ([M"& _ 
                "ODEL20ASM01] = @Original_MODEL20ASM01)) AND ((@IsNull_MODEL20ASM02 = 1 AND [MODE"& _ 
                "L20ASM02] IS NULL) OR ([MODEL20ASM02] = @Original_MODEL20ASM02)) AND ((@IsNull_M"& _ 
                "ODEL20ASM03 = 1 AND [MODEL20ASM03] IS NULL) OR ([MODEL20ASM03] = @Original_MODEL"& _ 
                "20ASM03)) AND ((@IsNull_MODEL20ASM04 = 1 AND [MODEL20ASM04] IS NULL) OR ([MODEL2"& _ 
                "0ASM04] = @Original_MODEL20ASM04)) AND ((@IsNull_MODEL20ASM05 = 1 AND [MODEL20AS"& _ 
                "M05] IS NULL) OR ([MODEL20ASM05] = @Original_MODEL20ASM05)) AND ((@IsNull_Reserv"& _ 
                "e01 = 1 AND [Reserve01] IS NULL) OR ([Reserve01] = @Original_Reserve01)) AND ((@"& _ 
                "IsNull_Reserve02 = 1 AND [Reserve02] IS NULL) OR ([Reserve02] = @Original_Reserv"& _ 
                "e02)) AND ((@IsNull_SubSeq = 1 AND [SubSeq] IS NULL) OR ([SubSeq] = @Original_Su"& _ 
                "bSeq)) AND ((@IsNull_XchgFlag = 1 AND [XchgFlag] IS NULL) OR ([XchgFlag] = @Orig"& _ 
                "inal_XchgFlag)) AND ((@IsNull_InstructFlag = 1 AND [InstructFlag] IS NULL) OR (["& _ 
                "InstructFlag] = @Original_InstructFlag)) AND ((@IsNull_FileName = 1 AND [FileNam"& _ 
                "e] IS NULL) OR ([FileName] = @Original_FileName)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SeqNo, ModelYear, Su"& _ 
                "ffixCode, LotID, LotNo, Unit, BlockModel, BlockSeq, MARK, ProductionDate, Produc"& _ 
                "tionTime, ImportCode, YChassisFlag, GAShop, HanmmerYears, MODEL01ASM01, MODEL01A"& _ 
                "SM02, MODEL01ASM03, MODEL01ASM04, MODEL01ASM05, MODEL02ASM01, MODEL02ASM02, MODE"& _ 
                "L02ASM03, MODEL02ASM04, MODEL02ASM05, MODEL03ASM01, MODEL03ASM02, MODEL03ASM03, "& _ 
                "MODEL03ASM04, MODEL03ASM05, MODEL04ASM01, MODEL04ASM02, MODEL04ASM03, MODEL04ASM"& _ 
                "04, MODEL04ASM05, MODEL05ASM01, MODEL05ASM02, MODEL05ASM03, MODEL05ASM04, MODEL0"& _ 
                "5ASM05, MODEL06ASM01, MODEL06ASM02, MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, MO"& _ 
                "DEL07ASM01, MODEL07ASM02, MODEL07ASM03, MODEL07ASM04, MODEL07ASM05, MODEL08ASM01"& _ 
                ", MODEL08ASM02, MODEL08ASM03, MODEL08ASM04, MODEL08ASM05, MODEL09ASM01, MODEL09A"& _ 
                "SM02, MODEL09ASM03, MODEL09ASM04, MODEL09ASM05, MODEL10ASM01, MODEL10ASM02, MODE"& _ 
                "L10ASM03, MODEL10ASM04, MODEL10ASM05, MODEL11ASM01, MODEL11ASM02, MODEL11ASM03, "& _ 
                "MODEL11ASM04, MODEL11ASM05, MODEL12ASM01, MODEL12ASM02, MODEL12ASM03, MODEL12ASM"& _ 
                "04, MODEL12ASM05, MODEL13ASM01, MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MODEL1"& _ 
                "3ASM05, MODEL14ASM01, MODEL14ASM02, MODEL14ASM03, MODEL14ASM04, MODEL14ASM05, MO"& _ 
                "DEL15ASM01, MODEL15ASM02, MODEL15ASM03, MODEL15ASM04, MODEL15ASM05, MODEL16ASM01"& _ 
                ", MODEL16ASM02, MODEL16ASM03, MODEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17A"& _ 
                "SM02, MODEL17ASM03, MODEL17ASM04, MODEL17ASM05, MODEL18ASM01, MODEL18ASM02, MODE"& _ 
                "L18ASM03, MODEL18ASM04, MODEL18ASM05, MODEL19ASM01, MODEL19ASM02, MODEL19ASM03, "& _ 
                "MODEL19ASM04, MODEL19ASM05, MODEL20ASM01, MODEL20ASM02, MODEL20ASM03, MODEL20ASM"& _ 
                "04, MODEL20ASM05, Reserve01, Reserve02, SubSeq, XchgFlag, InstructFlag, FileName"& _ 
                " FROM T_Production_DAT WHERE (LotNo = @LotNo) AND (ModelYear = @ModelYear) AND ("& _ 
                "SuffixCode = @SuffixCode) AND (Unit = @Unit) ORDER BY ProductionDate, Production"& _ 
                "Time, SeqNo, SubSeq"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModelYear", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SuffixCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Unit", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlockModel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlockSeq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MARK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ImportCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YChassisFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GAShop", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HanmmerYears", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL01ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL01ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL01ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL01ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL01ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL02ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL02ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL02ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL02ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL02ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL03ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL03ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL03ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL03ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL03ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL04ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL04ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL04ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL04ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL04ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL05ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL05ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL05ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL05ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL05ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL06ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL06ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL06ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL06ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL06ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL07ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL07ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL07ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL07ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL07ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL08ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL08ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL08ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL08ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL08ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL09ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL09ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL09ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL09ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL09ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL10ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL10ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL10ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL10ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL10ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL11ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL11ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL11ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL11ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL11ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL12ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL12ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL12ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL12ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL12ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL13ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL13ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL13ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL13ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL13ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL14ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL14ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL14ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL14ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL14ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL15ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL15ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL15ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL15ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL15ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL16ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL16ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL16ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL16ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL16ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL17ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL17ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL17ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL17ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL17ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL18ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL18ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL18ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL18ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL18ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL19ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL19ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL19ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL19ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL19ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL20ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL20ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL20ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL20ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL20ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Reserve01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Reserve02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XchgFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstructFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InstructFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FileName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FileName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SeqNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModelYear", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SuffixCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Unit", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BlockModel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BlockModel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BlockSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BlockSeq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MARK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MARK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProductionDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProductionDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProductionTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProductionTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ImportCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ImportCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YChassisFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YChassisFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GAShop", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GAShop", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HanmmerYears", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HanmmerYears", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL01ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL01ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL01ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL01ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL01ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL01ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL01ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL01ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL01ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL01ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL01ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL02ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL02ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL02ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL02ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL02ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL02ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL02ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL02ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL02ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL02ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL02ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL03ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL03ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL03ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL03ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL03ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL03ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL03ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL03ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL03ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL03ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL03ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL04ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL04ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL04ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL04ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL04ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL04ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL04ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL04ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL04ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL04ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL04ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL05ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL05ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL05ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL05ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL05ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL05ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL05ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL05ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL05ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL05ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL05ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL06ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL06ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL06ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL06ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL06ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL06ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL06ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL06ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL06ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL06ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL06ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL07ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL07ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL07ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL07ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL07ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL07ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL07ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL07ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL07ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL07ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL07ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL08ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL08ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL08ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL08ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL08ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL08ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL08ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL08ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL08ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL08ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL08ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL09ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL09ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL09ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL09ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL09ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL09ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL09ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL09ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL09ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL09ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL09ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL10ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL10ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL10ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL10ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL10ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL10ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL10ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL10ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL10ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL10ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL10ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL11ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL11ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL11ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL11ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL11ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL11ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL11ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL11ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL11ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL11ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL11ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL12ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL12ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL12ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL12ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL12ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL12ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL12ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL12ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL12ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL12ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL12ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL13ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL13ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL13ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL13ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL13ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL13ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL13ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL13ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL13ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL13ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL13ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL14ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL14ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL14ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL14ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL14ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL14ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL14ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL14ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL14ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL14ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL14ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL15ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL15ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL15ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL15ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL15ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL15ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL15ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL15ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL15ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL15ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL15ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL16ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL16ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL16ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL16ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL16ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL16ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL16ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL16ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL16ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL16ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL16ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL17ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL17ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL17ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL17ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL17ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL17ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL17ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL17ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL17ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL17ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL17ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL18ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL18ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL18ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL18ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL18ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL18ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL18ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL18ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL18ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL18ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL18ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL19ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL19ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL19ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL19ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL19ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL19ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL19ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL19ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL19ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL19ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL19ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL20ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL20ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL20ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL20ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL20ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL20ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL20ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL20ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODEL20ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL20ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL20ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Reserve01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Reserve01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Reserve02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Reserve02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reserve02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_XchgFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_XchgFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InstructFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InstructFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InstructFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InstructFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FileName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FileName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FileName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FileName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.InstructionSystem.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(26) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     SeqNo, ModelYear, SuffixCode, LotID, LotNo, Unit, BlockModel, BlockSeq"& _ 
                ", MARK, ProductionDate, ProductionTime, ImportCode, YChassisFlag, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "          GAShop, HanmmerYears, MODEL01ASM01, MODEL01ASM02, MODEL01ASM03, MODEL0"& _ 
                "1ASM04, MODEL01ASM05, MODEL02ASM01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL02ASM02, MODEL0"& _ 
                "2ASM03, MODEL02ASM04, MODEL02ASM05, MODEL03ASM01, MODEL03ASM02, MODEL03ASM03, MO"& _ 
                "DEL03ASM04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL03ASM05, MODEL04ASM01, MODEL04ASM02, MO"& _ 
                "DEL04ASM03, MODEL04ASM04, MODEL04ASM05, MODEL05ASM01, MODEL05ASM02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "            MODEL05ASM03, MODEL05ASM04, MODEL05ASM05, MODEL06ASM01, MODEL06ASM02"& _ 
                ", MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL07ASM01"& _ 
                ", MODEL07ASM02, MODEL07ASM03, MODEL07ASM04, MODEL07ASM05, MODEL08ASM01, MODEL08A"& _ 
                "SM02, MODEL08ASM03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL08ASM04, MODEL08ASM05, MODEL09A"& _ 
                "SM01, MODEL09ASM02, MODEL09ASM03, MODEL09ASM04, MODEL09ASM05, MODEL10ASM01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                    MODEL10ASM02, MODEL10ASM03, MODEL10ASM04, MODEL10ASM05, MODE"& _ 
                "L11ASM01, MODEL11ASM02, MODEL11ASM03, MODEL11ASM04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODE"& _ 
                "L11ASM05, MODEL12ASM01, MODEL12ASM02, MODEL12ASM03, MODEL12ASM04, MODEL12ASM05, "& _ 
                "MODEL13ASM01, MODEL13ASM02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL13ASM03, MODEL13ASM04, "& _ 
                "MODEL13ASM05, MODEL14ASM01, MODEL14ASM02, MODEL14ASM03, MODEL14ASM04, MODEL14ASM"& _ 
                "05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL15ASM01, MODEL15ASM02, MODEL15ASM03, MODEL15ASM"& _ 
                "04, MODEL15ASM05, MODEL16ASM01, MODEL16ASM02, MODEL16ASM03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    MODEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17ASM02, MODEL17ASM03, MODEL1"& _ 
                "7ASM04, MODEL17ASM05, MODEL18ASM01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL18ASM02, MODEL1"& _ 
                "8ASM03, MODEL18ASM04, MODEL18ASM05, MODEL19ASM01, MODEL19ASM02, MODEL19ASM03, MO"& _ 
                "DEL19ASM04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL19ASM05, MODEL20ASM01, MODEL20ASM02, MO"& _ 
                "DEL20ASM03, MODEL20ASM04, MODEL20ASM05, Reserve01, Reserve02, SubSeq, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              XchgFlag, InstructFlag, FileName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"O"& _ 
                "RDER BY ProductionDate, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM T_Production_DAT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE modelYear = @pModelYear AND suffixCode = @pS"& _ 
                "uffixCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND lotNo = @pLotNo AND unit = @pUnit"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pUnit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "DELETE FROM T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE BlockModel = @pBlockModel"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND substring(xchg"& _ 
                "Flag,1,1) = '1'"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pBlockModel", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "DELETE FROM T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE modelYear = @pModelYear AND suffixCode = @pSu"& _ 
                "ffixCode AND LotNo = @pLotNo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND substring(xchgFlag,1,1) = '1'"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     substring(xchgFlag,1,1) = '1'"& _ 
                ""
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT BlockModel, BlockSeq, FileName, GAShop, HanmmerYears, ImportCode, Instruct"& _ 
                "Flag, LotID, LotNo, MARK, MODEL01ASM01, MODEL01ASM02, MODEL01ASM03, MODEL01ASM04"& _ 
                ", MODEL01ASM05, MODEL02ASM01, MODEL02ASM02, MODEL02ASM03, MODEL02ASM04, MODEL02A"& _ 
                "SM05, MODEL03ASM01, MODEL03ASM02, MODEL03ASM03, MODEL03ASM04, MODEL03ASM05, MODE"& _ 
                "L04ASM01, MODEL04ASM02, MODEL04ASM03, MODEL04ASM04, MODEL04ASM05, MODEL05ASM01, "& _ 
                "MODEL05ASM02, MODEL05ASM03, MODEL05ASM04, MODEL05ASM05, MODEL06ASM01, MODEL06ASM"& _ 
                "02, MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, MODEL07ASM01, MODEL07ASM02, MODEL0"& _ 
                "7ASM03, MODEL07ASM04, MODEL07ASM05, MODEL08ASM01, MODEL08ASM02, MODEL08ASM03, MO"& _ 
                "DEL08ASM04, MODEL08ASM05, MODEL09ASM01, MODEL09ASM02, MODEL09ASM03, MODEL09ASM04"& _ 
                ", MODEL09ASM05, MODEL10ASM01, MODEL10ASM02, MODEL10ASM03, MODEL10ASM04, MODEL10A"& _ 
                "SM05, MODEL11ASM01, MODEL11ASM02, MODEL11ASM03, MODEL11ASM04, MODEL11ASM05, MODE"& _ 
                "L12ASM01, MODEL12ASM02, MODEL12ASM03, MODEL12ASM04, MODEL12ASM05, MODEL13ASM01, "& _ 
                "MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MODEL13ASM05, MODEL14ASM01, MODEL14ASM"& _ 
                "02, MODEL14ASM03, MODEL14ASM04, MODEL14ASM05, MODEL15ASM01, MODEL15ASM02, MODEL1"& _ 
                "5ASM03, MODEL15ASM04, MODEL15ASM05, MODEL16ASM01, MODEL16ASM02, MODEL16ASM03, MO"& _ 
                "DEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17ASM02, MODEL17ASM03, MODEL17ASM04"& _ 
                ", MODEL17ASM05, MODEL18ASM01, MODEL18ASM02, MODEL18ASM03, MODEL18ASM04, MODEL18A"& _ 
                "SM05, MODEL19ASM01, MODEL19ASM02, MODEL19ASM03, MODEL19ASM04, MODEL19ASM05, MODE"& _ 
                "L20ASM01, MODEL20ASM02, MODEL20ASM03, MODEL20ASM04, MODEL20ASM05, ModelYear, Pro"& _ 
                "ductionDate, ProductionTime, Reserve01, Reserve02, SeqNo, SubSeq, SuffixCode, Un"& _ 
                "it, XchgFlag, YChassisFlag FROM T_Production_DAT WHERE (BlockModel = @pBlockMode"& _ 
                "l)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProductionDate, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pBlockModel", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT     TOP (1) *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (InstructFlag < 2)"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND substring(XchgFlag,1,1) <> '1'"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT     TOP (1) *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     substring(XchgFlag"& _ 
                ",1,1) <> '1'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProductionDate DESC, ProductionTime DESC, SeqNo DESC, Sub"& _ 
                "Seq DESC"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT BlockModel, BlockSeq, FileName, GAShop, HanmmerYears, ImportCode, Instruct"& _ 
                "Flag, LotID, LotNo, MARK, MODEL01ASM01, MODEL01ASM02, MODEL01ASM03, MODEL01ASM04"& _ 
                ", MODEL01ASM05, MODEL02ASM01, MODEL02ASM02, MODEL02ASM03, MODEL02ASM04, MODEL02A"& _ 
                "SM05, MODEL03ASM01, MODEL03ASM02, MODEL03ASM03, MODEL03ASM04, MODEL03ASM05, MODE"& _ 
                "L04ASM01, MODEL04ASM02, MODEL04ASM03, MODEL04ASM04, MODEL04ASM05, MODEL05ASM01, "& _ 
                "MODEL05ASM02, MODEL05ASM03, MODEL05ASM04, MODEL05ASM05, MODEL06ASM01, MODEL06ASM"& _ 
                "02, MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, MODEL07ASM01, MODEL07ASM02, MODEL0"& _ 
                "7ASM03, MODEL07ASM04, MODEL07ASM05, MODEL08ASM01, MODEL08ASM02, MODEL08ASM03, MO"& _ 
                "DEL08ASM04, MODEL08ASM05, MODEL09ASM01, MODEL09ASM02, MODEL09ASM03, MODEL09ASM04"& _ 
                ", MODEL09ASM05, MODEL10ASM01, MODEL10ASM02, MODEL10ASM03, MODEL10ASM04, MODEL10A"& _ 
                "SM05, MODEL11ASM01, MODEL11ASM02, MODEL11ASM03, MODEL11ASM04, MODEL11ASM05, MODE"& _ 
                "L12ASM01, MODEL12ASM02, MODEL12ASM03, MODEL12ASM04, MODEL12ASM05, MODEL13ASM01, "& _ 
                "MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MODEL13ASM05, MODEL14ASM01, MODEL14ASM"& _ 
                "02, MODEL14ASM03, MODEL14ASM04, MODEL14ASM05, MODEL15ASM01, MODEL15ASM02, MODEL1"& _ 
                "5ASM03, MODEL15ASM04, MODEL15ASM05, MODEL16ASM01, MODEL16ASM02, MODEL16ASM03, MO"& _ 
                "DEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17ASM02, MODEL17ASM03, MODEL17ASM04"& _ 
                ", MODEL17ASM05, MODEL18ASM01, MODEL18ASM02, MODEL18ASM03, MODEL18ASM04, MODEL18A"& _ 
                "SM05, MODEL19ASM01, MODEL19ASM02, MODEL19ASM03, MODEL19ASM04, MODEL19ASM05, MODE"& _ 
                "L20ASM01, MODEL20ASM02, MODEL20ASM03, MODEL20ASM04, MODEL20ASM05, ModelYear, Pro"& _ 
                "ductionDate, ProductionTime, Reserve01, Reserve02, SeqNo, SubSeq, SuffixCode, Un"& _ 
                "it, XchgFlag, YChassisFlag "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM T_Production_DAT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (substring(XchgFlag,1"& _ 
                ",1) <> '1') AND (ModelYear = @pModelYear) AND (SuffixCode = @pSuffixCode) AND (L"& _ 
                "otNo = @pLotNo) AND (Unit = @pUnit) ORDER BY ProductionDate, ProductionTime, Seq"& _ 
                "No, SubSeq"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pUnit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT BlockModel, BlockSeq, FileName, GAShop, HanmmerYears, ImportCode, Instruct"& _ 
                "Flag, LotID, LotNo, MARK, MODEL01ASM01, MODEL01ASM02, MODEL01ASM03, MODEL01ASM04"& _ 
                ", MODEL01ASM05, MODEL02ASM01, MODEL02ASM02, MODEL02ASM03, MODEL02ASM04, MODEL02A"& _ 
                "SM05, MODEL03ASM01, MODEL03ASM02, MODEL03ASM03, MODEL03ASM04, MODEL03ASM05, MODE"& _ 
                "L04ASM01, MODEL04ASM02, MODEL04ASM03, MODEL04ASM04, MODEL04ASM05, MODEL05ASM01, "& _ 
                "MODEL05ASM02, MODEL05ASM03, MODEL05ASM04, MODEL05ASM05, MODEL06ASM01, MODEL06ASM"& _ 
                "02, MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, MODEL07ASM01, MODEL07ASM02, MODEL0"& _ 
                "7ASM03, MODEL07ASM04, MODEL07ASM05, MODEL08ASM01, MODEL08ASM02, MODEL08ASM03, MO"& _ 
                "DEL08ASM04, MODEL08ASM05, MODEL09ASM01, MODEL09ASM02, MODEL09ASM03, MODEL09ASM04"& _ 
                ", MODEL09ASM05, MODEL10ASM01, MODEL10ASM02, MODEL10ASM03, MODEL10ASM04, MODEL10A"& _ 
                "SM05, MODEL11ASM01, MODEL11ASM02, MODEL11ASM03, MODEL11ASM04, MODEL11ASM05, MODE"& _ 
                "L12ASM01, MODEL12ASM02, MODEL12ASM03, MODEL12ASM04, MODEL12ASM05, MODEL13ASM01, "& _ 
                "MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MODEL13ASM05, MODEL14ASM01, MODEL14ASM"& _ 
                "02, MODEL14ASM03, MODEL14ASM04, MODEL14ASM05, MODEL15ASM01, MODEL15ASM02, MODEL1"& _ 
                "5ASM03, MODEL15ASM04, MODEL15ASM05, MODEL16ASM01, MODEL16ASM02, MODEL16ASM03, MO"& _ 
                "DEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17ASM02, MODEL17ASM03, MODEL17ASM04"& _ 
                ", MODEL17ASM05, MODEL18ASM01, MODEL18ASM02, MODEL18ASM03, MODEL18ASM04, MODEL18A"& _ 
                "SM05, MODEL19ASM01, MODEL19ASM02, MODEL19ASM03, MODEL19ASM04, MODEL19ASM05, MODE"& _ 
                "L20ASM01, MODEL20ASM02, MODEL20ASM03, MODEL20ASM04, MODEL20ASM05, ModelYear, Pro"& _ 
                "ductionDate, ProductionTime, Reserve01, Reserve02, SeqNo, SubSeq, SuffixCode, Un"& _ 
                "it, XchgFlag, YChassisFlag "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM T_Production_DAT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (ModelYear = @pModelY"& _ 
                "ear) AND (SuffixCode = @pSuffixCode) AND (LotNo = @pLotNo) AND (Unit = @pUnit) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProductionDate, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pUnit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT BlockModel, BlockSeq, FileName, GAShop, HanmmerYears, ImportCode, Instruct"& _ 
                "Flag, LotID, LotNo, MARK, MODEL01ASM01, MODEL01ASM02, MODEL01ASM03, MODEL01ASM04"& _ 
                ", MODEL01ASM05, MODEL02ASM01, MODEL02ASM02, MODEL02ASM03, MODEL02ASM04, MODEL02A"& _ 
                "SM05, MODEL03ASM01, MODEL03ASM02, MODEL03ASM03, MODEL03ASM04, MODEL03ASM05, MODE"& _ 
                "L04ASM01, MODEL04ASM02, MODEL04ASM03, MODEL04ASM04, MODEL04ASM05, MODEL05ASM01, "& _ 
                "MODEL05ASM02, MODEL05ASM03, MODEL05ASM04, MODEL05ASM05, MODEL06ASM01, MODEL06ASM"& _ 
                "02, MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, MODEL07ASM01, MODEL07ASM02, MODEL0"& _ 
                "7ASM03, MODEL07ASM04, MODEL07ASM05, MODEL08ASM01, MODEL08ASM02, MODEL08ASM03, MO"& _ 
                "DEL08ASM04, MODEL08ASM05, MODEL09ASM01, MODEL09ASM02, MODEL09ASM03, MODEL09ASM04"& _ 
                ", MODEL09ASM05, MODEL10ASM01, MODEL10ASM02, MODEL10ASM03, MODEL10ASM04, MODEL10A"& _ 
                "SM05, MODEL11ASM01, MODEL11ASM02, MODEL11ASM03, MODEL11ASM04, MODEL11ASM05, MODE"& _ 
                "L12ASM01, MODEL12ASM02, MODEL12ASM03, MODEL12ASM04, MODEL12ASM05, MODEL13ASM01, "& _ 
                "MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MODEL13ASM05, MODEL14ASM01, MODEL14ASM"& _ 
                "02, MODEL14ASM03, MODEL14ASM04, MODEL14ASM05, MODEL15ASM01, MODEL15ASM02, MODEL1"& _ 
                "5ASM03, MODEL15ASM04, MODEL15ASM05, MODEL16ASM01, MODEL16ASM02, MODEL16ASM03, MO"& _ 
                "DEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17ASM02, MODEL17ASM03, MODEL17ASM04"& _ 
                ", MODEL17ASM05, MODEL18ASM01, MODEL18ASM02, MODEL18ASM03, MODEL18ASM04, MODEL18A"& _ 
                "SM05, MODEL19ASM01, MODEL19ASM02, MODEL19ASM03, MODEL19ASM04, MODEL19ASM05, MODE"& _ 
                "L20ASM01, MODEL20ASM02, MODEL20ASM03, MODEL20ASM04, MODEL20ASM05, ModelYear, Pro"& _ 
                "ductionDate, ProductionTime, Reserve01, Reserve02, SeqNo, SubSeq, SuffixCode, Un"& _ 
                "it, XchgFlag, YChassisFlag FROM T_Production_DAT WHERE (modelYear = @pModelYear)"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (suffixCode = @pSuffixCode) AND (LotNo = @pLotNo)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProductionDat"& _ 
                "e, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT TOP (@Block)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"0 as indexNo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELEC"& _ 
                "T *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"  *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM [T_Production_DAT] p"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"[ProductionDate] >= @ProductionDate AND substring(XchgFlag,1,1)"& _ 
                " <> '1'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") d"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT (d.[ProductionDate] = @ProductionDate AND d.[Pr"& _ 
                "oductionTime] < @ProductionTime)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") t"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT (t.[ProductionDate] = @Pro"& _ 
                "ductionDate AND t.[ProductionTime] = @ProductionTime AND t.[SeqNo] < @SeqNo)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&")"& _ 
                " s"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE NOT(s.[ProductionDate] = @ProductionDate AND s.[ProductionTime] = @Pro"& _ 
                "ductionTime AND s.[SeqNo] = @SeqNo AND s.[SubSeq] <= @SubSeq)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"  [Pr"& _ 
                "oductionDate]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [ProductionTime]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [SeqNo]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [SubSeq];"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Block", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionDate", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionTime", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNo", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubSeq", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "SELECT TOP 1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT TOP (@Block+1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM [T_Prod"& _ 
                "uction_DAT] p"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"[ProductionDate] <= @ProductionDate AND s"& _ 
                "ubstring(XchgFlag,1,1) <> '1'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") d"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT (d.[ProductionDate] ="& _ 
                " @ProductionDate AND d.[ProductionTime] > @ProductionTime)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") t"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE "& _ 
                "NOT (t.[ProductionDate] = @ProductionDate AND t.[ProductionTime] = @ProductionTi"& _ 
                "me AND t.[SeqNo] > @SeqNo)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") s"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT(s.[ProductionDate] = @Production"& _ 
                "Date AND s.[ProductionTime] = @ProductionTime AND s.[SeqNo] = @SeqNo AND s.[SubS"& _ 
                "eq] >= @SubSeq)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"ORDER BY "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"  [ProductionDate] DESC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [ProductionTime] "& _ 
                "DESC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [SeqNo] DESC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [SubSeq] DESC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&") ss"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"  [ProductionDat"& _ 
                "e]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [ProductionTime]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [SeqNo]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [SubSeq]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&";"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Block", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionDate", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionTime", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNo", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubSeq", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(13).Connection = Me.Connection
            Me._commandCollection(13).CommandText = "SELECT BlockModel, BlockSeq, FileName, GAShop, HanmmerYears, ImportCode, Instruct"& _ 
                "Flag, LotID, LotNo, MARK, MODEL01ASM01, MODEL01ASM02, MODEL01ASM03, MODEL01ASM04"& _ 
                ", MODEL01ASM05, MODEL02ASM01, MODEL02ASM02, MODEL02ASM03, MODEL02ASM04, MODEL02A"& _ 
                "SM05, MODEL03ASM01, MODEL03ASM02, MODEL03ASM03, MODEL03ASM04, MODEL03ASM05, MODE"& _ 
                "L04ASM01, MODEL04ASM02, MODEL04ASM03, MODEL04ASM04, MODEL04ASM05, MODEL05ASM01, "& _ 
                "MODEL05ASM02, MODEL05ASM03, MODEL05ASM04, MODEL05ASM05, MODEL06ASM01, MODEL06ASM"& _ 
                "02, MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, MODEL07ASM01, MODEL07ASM02, MODEL0"& _ 
                "7ASM03, MODEL07ASM04, MODEL07ASM05, MODEL08ASM01, MODEL08ASM02, MODEL08ASM03, MO"& _ 
                "DEL08ASM04, MODEL08ASM05, MODEL09ASM01, MODEL09ASM02, MODEL09ASM03, MODEL09ASM04"& _ 
                ", MODEL09ASM05, MODEL10ASM01, MODEL10ASM02, MODEL10ASM03, MODEL10ASM04, MODEL10A"& _ 
                "SM05, MODEL11ASM01, MODEL11ASM02, MODEL11ASM03, MODEL11ASM04, MODEL11ASM05, MODE"& _ 
                "L12ASM01, MODEL12ASM02, MODEL12ASM03, MODEL12ASM04, MODEL12ASM05, MODEL13ASM01, "& _ 
                "MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MODEL13ASM05, MODEL14ASM01, MODEL14ASM"& _ 
                "02, MODEL14ASM03, MODEL14ASM04, MODEL14ASM05, MODEL15ASM01, MODEL15ASM02, MODEL1"& _ 
                "5ASM03, MODEL15ASM04, MODEL15ASM05, MODEL16ASM01, MODEL16ASM02, MODEL16ASM03, MO"& _ 
                "DEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17ASM02, MODEL17ASM03, MODEL17ASM04"& _ 
                ", MODEL17ASM05, MODEL18ASM01, MODEL18ASM02, MODEL18ASM03, MODEL18ASM04, MODEL18A"& _ 
                "SM05, MODEL19ASM01, MODEL19ASM02, MODEL19ASM03, MODEL19ASM04, MODEL19ASM05, MODE"& _ 
                "L20ASM01, MODEL20ASM02, MODEL20ASM03, MODEL20ASM04, MODEL20ASM05, ModelYear, Pro"& _ 
                "ductionDate, ProductionTime, Reserve01, Reserve02, SeqNo, SubSeq, SuffixCode, Un"& _ 
                "it, XchgFlag, YChassisFlag FROM T_Production_DAT WHERE (ModelYear = @pModelYear)"& _ 
                " AND (SuffixCode = @pSuffixCode) AND (LotNo = @LotNo) AND (Unit = @pUnit)"
            Me._commandCollection(13).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pUnit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(14).Connection = Me.Connection
            Me._commandCollection(14).CommandText = "SELECT     indexNo, SeqNo, SubSeq, SeqNo + CASE WHEN SubSeq IS NULL THEN '' ELSE "& _ 
                "CASE WHEN SubSeq < 10 THEN '-00' + CAST(SubSeq AS VARCHAR) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "   ELSE '-0' + CAST(SubSeq AS VARCHAR) END END AS SEQ_DESC, ModelYear, SuffixCod"& _ 
                "e, LotID, LotNo, Unit, BlockModel, BlockSeq, MARK, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Produ"& _ 
                "ctionDate, ProductionTime, ImportCode, YChassisFlag, GAShop, HanmmerYears, MODEL"& _ 
                "01ASM01, MODEL01ASM02, MODEL01ASM03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL01ASM04, MODEL"& _ 
                "01ASM05, MODEL02ASM01, MODEL02ASM02, MODEL02ASM03, MODEL02ASM04, MODEL02ASM05, M"& _ 
                "ODEL03ASM01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL03ASM02, MODEL03ASM03, MODEL03ASM04, M"& _ 
                "ODEL03ASM05, MODEL04ASM01, MODEL04ASM02, MODEL04ASM03, MODEL04ASM04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "             MODEL04ASM05, MODEL05ASM01, MODEL05ASM02, MODEL05ASM03, MODEL05ASM0"& _ 
                "4, MODEL05ASM05, MODEL06ASM01, MODEL06ASM02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL06ASM0"& _ 
                "3, MODEL06ASM04, MODEL06ASM05, MODEL07ASM01, MODEL07ASM02, MODEL07ASM03, MODEL07"& _ 
                "ASM04, MODEL07ASM05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL08ASM01, MODEL08ASM02, MODEL08"& _ 
                "ASM03, MODEL08ASM04, MODEL08ASM05, MODEL09ASM01, MODEL09ASM02, MODEL09ASM03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                     MODEL09ASM04, MODEL09ASM05, MODEL10ASM01, MODEL10ASM02, MOD"& _ 
                "EL10ASM03, MODEL10ASM04, MODEL10ASM05, MODEL11ASM01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MOD"& _ 
                "EL11ASM02, MODEL11ASM03, MODEL11ASM04, MODEL11ASM05, MODEL12ASM01, MODEL12ASM02,"& _ 
                " MODEL12ASM03, MODEL12ASM04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL12ASM05, MODEL13ASM01,"& _ 
                " MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MODEL13ASM05, MODEL14ASM01, MODEL14AS"& _ 
                "M02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL14ASM03, MODEL14ASM04, MODEL14ASM05, MODEL15AS"& _ 
                "M01, MODEL15ASM02, MODEL15ASM03, MODEL15ASM04, MODEL15ASM05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "     MODEL16ASM01, MODEL16ASM02, MODEL16ASM03, MODEL16ASM04, MODEL16ASM05, MODEL"& _ 
                "17ASM01, MODEL17ASM02, MODEL17ASM03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL17ASM04, MODEL"& _ 
                "17ASM05, MODEL18ASM01, MODEL18ASM02, MODEL18ASM03, MODEL18ASM04, MODEL18ASM05, M"& _ 
                "ODEL19ASM01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL19ASM02, MODEL19ASM03, MODEL19ASM04, M"& _ 
                "ODEL19ASM05, MODEL20ASM01, MODEL20ASM02, MODEL20ASM03, MODEL20ASM04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "             MODEL20ASM05, Reserve01, Reserve02, XchgFlag, InstructFlag, FileNam"& _ 
                "e"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         (SELECT     SeqNo, ModelYear, SuffixCode, LotID, LotNo, Unit, Bl"& _ 
                "ockModel, BlockSeq, MARK, ProductionDate, ProductionTime, ImportCode, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                                      YChassisFlag, GAShop, HanmmerYears, MODEL0"& _ 
                "1ASM01, MODEL01ASM02, MODEL01ASM03, MODEL01ASM04, MODEL01ASM05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                MODEL02ASM01, MODEL02ASM02, MODEL02ASM03, MODEL0"& _ 
                "2ASM04, MODEL02ASM05, MODEL03ASM01, MODEL03ASM02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            "& _ 
                "                  MODEL03ASM03, MODEL03ASM04, MODEL03ASM05, MODEL04ASM01, MODEL0"& _ 
                "4ASM02, MODEL04ASM03, MODEL04ASM04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                          "& _ 
                "    MODEL04ASM05, MODEL05ASM01, MODEL05ASM02, MODEL05ASM03, MODEL05ASM04, MODEL0"& _ 
                "5ASM05, MODEL06ASM01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              MODEL06ASM"& _ 
                "02, MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, MODEL07ASM01, MODEL07ASM02, MODEL0"& _ 
                "7ASM03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              MODEL07ASM04, MODEL07ASM"& _ 
                "05, MODEL08ASM01, MODEL08ASM02, MODEL08ASM03, MODEL08ASM04, MODEL08ASM05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                                          MODEL09ASM01, MODEL09ASM02, MODEL09ASM"& _ 
                "03, MODEL09ASM04, MODEL09ASM05, MODEL10ASM01, MODEL10ASM02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "                            MODEL10ASM03, MODEL10ASM04, MODEL10ASM05, MODEL11ASM"& _ 
                "01, MODEL11ASM02, MODEL11ASM03, MODEL11ASM04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                "& _ 
                "              MODEL11ASM05, MODEL12ASM01, MODEL12ASM02, MODEL12ASM03, MODEL12ASM"& _ 
                "04, MODEL12ASM05, MODEL13ASM01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MODEL13ASM05, MODEL14ASM01, MODEL14ASM"& _ 
                "02, MODEL14ASM03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              MODEL14ASM04, "& _ 
                "MODEL14ASM05, MODEL15ASM01, MODEL15ASM02, MODEL15ASM03, MODEL15ASM04, MODEL15ASM"& _ 
                "05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              MODEL16ASM01, MODEL16ASM02, "& _ 
                "MODEL16ASM03, MODEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17ASM02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                                      MODEL17ASM03, MODEL17ASM04, MODEL17ASM05, "& _ 
                "MODEL18ASM01, MODEL18ASM02, MODEL18ASM03, MODEL18ASM04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                        MODEL18ASM05, MODEL19ASM01, MODEL19ASM02, MODEL19ASM03, "& _ 
                "MODEL19ASM04, MODEL19ASM05, MODEL20ASM01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    "& _ 
                "          MODEL20ASM02, MODEL20ASM03, MODEL20ASM04, MODEL20ASM05, Reserve01, Res"& _ 
                "erve02, SubSeq, XchgFlag, InstructFlag, FileName,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             "& _ 
                "                     (SELECT     COUNT(*) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            "& _ 
                "                        FROM          T_Production_DAT AS p"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "                                 WHERE      (ProductionDate + ProductionTime + S"& _ 
                "eqNo + ISNULL(CASE WHEN SubSeq < 10 THEN '0' + CAST(SubSeq AS VARCHAR) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                    ELSE CAST(Su"& _ 
                "bSeq AS VARCHAR) END, '') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    "& _ 
                "                       <= t_production_dat.productionDate + t_production_dat.pro"& _ 
                "ductionTime + t_production_dat.seqNo + ISNULL(CASE WHEN t_production_dat.SubSeq "& _ 
                "< 10 THEN '0' +"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "             CAST(t_production_dat.SubSeq AS VARCHAR) ELSE CAST(t_production_dat"& _ 
                ".SubSeq AS VARCHAR) END, '')) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                            "& _ 
                "                               (substring(XchgFlag,1,1) <> '1')) AS indexNo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                    FROM          T_Production_DAT) AS prod"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (substrin"& _ 
                "g(XchgFlag,1,1) <> '1') AND (SeqNo = '00000')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProductionDate, Producti"& _ 
                "onTime, SEQ_DESC"
            Me._commandCollection(14).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(15).Connection = Me.Connection
            Me._commandCollection(15).CommandText = "SELECT     BlockModel, BlockSeq, FileName, GAShop, HanmmerYears, ImportCode, Inst"& _ 
                "ructFlag, LotID, LotNo, MARK, MODEL01ASM01, MODEL01ASM02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "  MODEL01ASM03, MODEL01ASM04, MODEL01ASM05, MODEL02ASM01, MODEL02ASM02, MODEL02A"& _ 
                "SM03, MODEL02ASM04, MODEL02ASM05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL03ASM01, MODEL03A"& _ 
                "SM02, MODEL03ASM03, MODEL03ASM04, MODEL03ASM05, MODEL04ASM01, MODEL04ASM02, MODE"& _ 
                "L04ASM03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL04ASM04, MODEL04ASM05, MODEL05ASM01, MODE"& _ 
                "L05ASM02, MODEL05ASM03, MODEL05ASM04, MODEL05ASM05, MODEL06ASM01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "          MODEL06ASM02, MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, MODEL07ASM01, "& _ 
                "MODEL07ASM02, MODEL07ASM03, MODEL07ASM04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL07ASM05, "& _ 
                "MODEL08ASM01, MODEL08ASM02, MODEL08ASM03, MODEL08ASM04, MODEL08ASM05, MODEL09ASM"& _ 
                "01, MODEL09ASM02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL09ASM03, MODEL09ASM04, MODEL09ASM"& _ 
                "05, MODEL10ASM01, MODEL10ASM02, MODEL10ASM03, MODEL10ASM04, MODEL10ASM05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                  MODEL11ASM01, MODEL11ASM02, MODEL11ASM03, MODEL11ASM04, MODEL1"& _ 
                "1ASM05, MODEL12ASM01, MODEL12ASM02, MODEL12ASM03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL1"& _ 
                "2ASM04, MODEL12ASM05, MODEL13ASM01, MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MO"& _ 
                "DEL13ASM05, MODEL14ASM01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL14ASM02, MODEL14ASM03, MO"& _ 
                "DEL14ASM04, MODEL14ASM05, MODEL15ASM01, MODEL15ASM02, MODEL15ASM03, MODEL15ASM04"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL15ASM05, MODEL16ASM01, MODEL16ASM02, MODEL16ASM03"& _ 
                ", MODEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17ASM02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "  MODEL17ASM03, MODEL17ASM04, MODEL17ASM05, MODEL18ASM01, MODEL18ASM02, MODEL18A"& _ 
                "SM03, MODEL18ASM04, MODEL18ASM05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL19ASM01, MODEL19A"& _ 
                "SM02, MODEL19ASM03, MODEL19ASM04, MODEL19ASM05, MODEL20ASM01, MODEL20ASM02, MODE"& _ 
                "L20ASM03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MODEL20ASM04, MODEL20ASM05, ModelYear, Product"& _ 
                "ionDate, ProductionTime, Reserve01, Reserve02, SeqNo, SubSeq, SuffixCode, Unit, "& _ 
                "XchgFlag, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      YChassisFlag"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"W"& _ 
                "HERE     (SeqNo = @pSeqNo) AND (ProductionDate = @pProDate) AND (ProductionTime "& _ 
                "= @pProTime)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProductionDate, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(15).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSeqNo", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pProDate", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pProTime", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(16).Connection = Me.Connection
            Me._commandCollection(16).CommandText = "SELECT * FROM          T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     substring(xchgFlag,3,2) = '01'"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (InstructFlag > 0)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProductionDate, ProductionTime, seqNo, subSeq"& _ 
                ""
            Me._commandCollection(16).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(17) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(17).Connection = Me.Connection
            Me._commandCollection(17).CommandText = "SELECT TOP 1 *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE substring(XchgFlag,1,1) <> '1'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND "& _ 
                "(ModelYear + SuffixCode = @pModelYearSuffix) AND (BlockModel = @pBlockModel)"
            Me._commandCollection(17).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYearSuffix", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pBlockModel", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(18) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(18).Connection = Me.Connection
            Me._commandCollection(18).CommandText = "SELECT TOP 1 *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE substring(XchgFlag,1,1) <> '1'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND "& _ 
                "(ModelYear + SuffixCode = @pModelCode) AND (LotNo = @pLotNo)"
            Me._commandCollection(18).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelCode", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(19) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(19).Connection = Me.Connection
            Me._commandCollection(19).CommandText = "SELECT * FROM T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (BlockModel = @pBlockModel) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND substring"& _ 
                "(xchgFlag,1,1) = '1'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProductionDate, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(19).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pBlockModel", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(20) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(20).Connection = Me.Connection
            Me._commandCollection(20).CommandText = "SELECT * "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM T_Production_DAT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (modelYear = @pModelYear) AND (suffixCod"& _ 
                "e = @pSuffixCode) AND (LotNo = @pLotNo) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND substring(xchgFlag,1,1) = '1'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORD"& _ 
                "ER BY ProductionDate, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(20).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(20).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(20).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(20).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(21) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(21).Connection = Me.Connection
            Me._commandCollection(21).CommandText = "SELECT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"count(*) as OffestBase"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)& _ 
                "FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"  [ProductionDate]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [ProductionTime]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [SeqNo]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [SubSeq]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM [T_Production_DAT] p"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"[ProductionDate] <= @ProductionDate AND substring(XchgFlag,1,1) <> '1'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") d"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT (d.[ProductionDate] = @ProductionDate AND d.[ProductionTi"& _ 
                "me] > @ProductionTime)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") t"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT (t.[ProductionDate] = @ProductionDat"& _ 
                "e AND t.[ProductionTime] = @ProductionTime AND t.[SeqNo] > @SeqNo)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&") s"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE "& _ 
                "NOT(s.[ProductionDate] = @ProductionDate AND s.[ProductionTime] = @ProductionTim"& _ 
                "e AND s.[SeqNo] = @SeqNo AND s.[SubSeq] > @SubSeq)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&";"
            Me._commandCollection(21).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(21).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionDate", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(21).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionTime", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(21).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNo", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(21).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(22).Connection = Me.Connection
            Me._commandCollection(22).CommandText = "UPDATE T_Production_DAT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET ProductionDate = @ProductionDate, ProductionTime = "& _ 
                "@ProductionTime, SeqNo = @SeqNo, subSeq = @pSubSeq, xchgFlag = STUFF(xchgFlag,3,"& _ 
                "2,@pXchgFlag), instructFlag = @pInstructFlag"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM T_Production_DAT WHERE (Model"& _ 
                "Year = @ModelYear) AND (SuffixCode = @SuffixCode) AND  (LotNo = @LotNo) AND (Uni"& _ 
                "t = @Unit)"
            Me._commandCollection(22).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionDate", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionTime", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNo", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSubSeq", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pXchgFlag", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pInstructFlag", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "InstructFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Unit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(23) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(23).Connection = Me.Connection
            Me._commandCollection(23).CommandText = "UPDATE    T_Production_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              InstructFlag = @InstructFlag"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE "& _ 
                "    (ModelYear = @ModelYear) AND (SuffixCode = @SuffixCode) AND (LotNo = @LotNo)"& _ 
                " AND (Unit = @Unit)"
            Me._commandCollection(23).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(23).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstructFlag", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "InstructFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(23).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(23).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(23).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(23).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Unit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(24) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(24).Connection = Me.Connection
            Me._commandCollection(24).CommandText = "UPDATE T_Production_DAT SET XchgFlag = STUFF(XchgFlag,1,1,'1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM T_Production"& _ 
                "_DAT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (BlockModel = @pBlockModel)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND InstructFlag = 0"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND substring(Xc"& _ 
                "hgFlag,3,2) <> '02'"
            Me._commandCollection(24).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pBlockModel", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(25) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(25).Connection = Me.Connection
            Me._commandCollection(25).CommandText = "UPDATE T_Production_DAT SET XchgFlag = STUFF(XchgFlag,1,1,'1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM T_Production"& _ 
                "_DAT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (modelYear = @pModelYear) AND (suffixCode = @pSuffixCode) AND (lotN"& _ 
                "o = @pLotNo)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND InstructFlag = 0"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND substring(XchgFlag,3,2) <> '02'"
            Me._commandCollection(25).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(25).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(25).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(25).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(26) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(26).Connection = Me.Connection
            Me._commandCollection(26).CommandText = "UPDATE T_Production_DAT SET XchgFlag = STUFF(XchgFlag,1,1,'1')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM T_Production"& _ 
                "_DAT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (modelYear = @pModelYear) AND (suffixCode = @pSuffixCode) AND (lotN"& _ 
                "o = @pLotNo)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (unit = @pUnit)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND substring(XchgFlag,3,2) <> '02'"
            Me._commandCollection(26).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pUnit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.T_Production_DATDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllSkipData(ByVal dataTable As DataSet1.T_Production_DATDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllSkipData() As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByBlockModel(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal pBlockModel As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (pBlockModel Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pBlockModel,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByBlockModel(ByVal pBlockModel As String) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (pBlockModel Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pBlockModel,String)
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByFirstInstructFlagLessThan2(ByVal dataTable As DataSet1.T_Production_DATDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByFirstInstructFlagLessThan2() As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLastProduction(ByVal dataTable As DataSet1.T_Production_DATDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLastProduction() As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByModelYearSuffixCodeLotNoUnit(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByModelYearSuffixCodeLotNoUnit(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByModelYearSuffixCodeLotNoUnitAllXchg(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByModelYearSuffixCodeLotNoUnitAllXchg(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByModelYearSuffixLotNo(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByModelYearSuffixLotNo(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByNextBtn(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal Block As Integer, ByVal ProductionDate As String, ByVal ProductionTime As String, ByVal SeqNo As String, ByVal SubSeq As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Block,Integer)
            If (ProductionDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ProductionTime,String)
            End If
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SeqNo,String)
            End If
            If (SubSeq.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByNextBtn(ByVal Block As Integer, ByVal ProductionDate As String, ByVal ProductionTime As String, ByVal SeqNo As String, ByVal SubSeq As Global.System.Nullable(Of Integer)) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Block,Integer)
            If (ProductionDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ProductionTime,String)
            End If
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SeqNo,String)
            End If
            If (SubSeq.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPreviousBtn(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal Block As Integer, ByVal ProductionDate As String, ByVal ProductionTime As String, ByVal SeqNo As String, ByVal SubSeq As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(12)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Block,Integer)
            If (ProductionDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ProductionTime,String)
            End If
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SeqNo,String)
            End If
            If (SubSeq.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPreviousBtn(ByVal Block As Integer, ByVal ProductionDate As String, ByVal ProductionTime As String, ByVal SeqNo As String, ByVal SubSeq As Global.System.Nullable(Of Integer)) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(12)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Block,Integer)
            If (ProductionDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ProductionTime,String)
            End If
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SeqNo,String)
            End If
            If (SubSeq.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPrimaryKey(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal LotNo As String, ByVal pUnit As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(13)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(LotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPrimaryKey(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal LotNo As String, ByVal pUnit As String) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(13)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(LotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySeqNoIsZero(ByVal dataTable As DataSet1.T_Production_DATDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(14)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySeqNoIsZero() As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(14)
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySeqNoProductionDateTime(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal pSeqNo As String, ByVal pProDate As String, ByVal pProTime As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(15)
            If (pSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSeqNo,String)
            End If
            If (pProDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pProDate,String)
            End If
            If (pProTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pProTime,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySeqNoProductionDateTime(ByVal pSeqNo As String, ByVal pProDate As String, ByVal pProTime As String) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(15)
            If (pSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSeqNo,String)
            End If
            If (pProDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pProDate,String)
            End If
            If (pProTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pProTime,String)
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByXchngFlagInsFlagMoreThanZero(ByVal dataTable As DataSet1.T_Production_DATDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(16)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByXchngFlagInsFlagMoreThanZero() As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(16)
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillSkByYearSuffixBlock(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal pModelYearSuffix As String, ByVal pBlockModel As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(17)
            If (pModelYearSuffix Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYearSuffix")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYearSuffix,String)
            End If
            If (pBlockModel Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pBlockModel,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetSkByYearSuffixBlock(ByVal pModelYearSuffix As String, ByVal pBlockModel As String) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(17)
            If (pModelYearSuffix Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYearSuffix")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYearSuffix,String)
            End If
            If (pBlockModel Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pBlockModel,String)
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillSkByYearSuffixLot(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal pModelCode As String, ByVal pLotNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(18)
            If (pModelCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelCode")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pLotNo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetSkByYearSuffixLot(ByVal pModelCode As String, ByVal pLotNo As String) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(18)
            If (pModelCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelCode")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pLotNo,String)
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillSkipByBlockModel(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal pBlockModel As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(19)
            If (pBlockModel Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pBlockModel,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetSkipDataByBlockModel(ByVal pBlockModel As String) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(19)
            If (pBlockModel Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pBlockModel,String)
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillSkipByModelYearSuffixLotNo(ByVal dataTable As DataSet1.T_Production_DATDataTable, ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(20)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetSkipDataByModelYearSuffixLotNo(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String) As DataSet1.T_Production_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(20)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            Dim dataTable As DataSet1.T_Production_DATDataTable = New DataSet1.T_Production_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.T_Production_DATDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "T_Production_DAT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_SeqNo As String,  _
                    ByVal Original_ModelYear As String,  _
                    ByVal Original_SuffixCode As String,  _
                    ByVal Original_LotID As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_Unit As String,  _
                    ByVal Original_BlockModel As String,  _
                    ByVal Original_BlockSeq As String,  _
                    ByVal Original_MARK As String,  _
                    ByVal Original_ProductionDate As String,  _
                    ByVal Original_ProductionTime As String,  _
                    ByVal Original_ImportCode As String,  _
                    ByVal Original_YChassisFlag As String,  _
                    ByVal Original_GAShop As String,  _
                    ByVal Original_HanmmerYears As String,  _
                    ByVal Original_MODEL01ASM01 As String,  _
                    ByVal Original_MODEL01ASM02 As String,  _
                    ByVal Original_MODEL01ASM03 As String,  _
                    ByVal Original_MODEL01ASM04 As String,  _
                    ByVal Original_MODEL01ASM05 As String,  _
                    ByVal Original_MODEL02ASM01 As String,  _
                    ByVal Original_MODEL02ASM02 As String,  _
                    ByVal Original_MODEL02ASM03 As String,  _
                    ByVal Original_MODEL02ASM04 As String,  _
                    ByVal Original_MODEL02ASM05 As String,  _
                    ByVal Original_MODEL03ASM01 As String,  _
                    ByVal Original_MODEL03ASM02 As String,  _
                    ByVal Original_MODEL03ASM03 As String,  _
                    ByVal Original_MODEL03ASM04 As String,  _
                    ByVal Original_MODEL03ASM05 As String,  _
                    ByVal Original_MODEL04ASM01 As String,  _
                    ByVal Original_MODEL04ASM02 As String,  _
                    ByVal Original_MODEL04ASM03 As String,  _
                    ByVal Original_MODEL04ASM04 As String,  _
                    ByVal Original_MODEL04ASM05 As String,  _
                    ByVal Original_MODEL05ASM01 As String,  _
                    ByVal Original_MODEL05ASM02 As String,  _
                    ByVal Original_MODEL05ASM03 As String,  _
                    ByVal Original_MODEL05ASM04 As String,  _
                    ByVal Original_MODEL05ASM05 As String,  _
                    ByVal Original_MODEL06ASM01 As String,  _
                    ByVal Original_MODEL06ASM02 As String,  _
                    ByVal Original_MODEL06ASM03 As String,  _
                    ByVal Original_MODEL06ASM04 As String,  _
                    ByVal Original_MODEL06ASM05 As String,  _
                    ByVal Original_MODEL07ASM01 As String,  _
                    ByVal Original_MODEL07ASM02 As String,  _
                    ByVal Original_MODEL07ASM03 As String,  _
                    ByVal Original_MODEL07ASM04 As String,  _
                    ByVal Original_MODEL07ASM05 As String,  _
                    ByVal Original_MODEL08ASM01 As String,  _
                    ByVal Original_MODEL08ASM02 As String,  _
                    ByVal Original_MODEL08ASM03 As String,  _
                    ByVal Original_MODEL08ASM04 As String,  _
                    ByVal Original_MODEL08ASM05 As String,  _
                    ByVal Original_MODEL09ASM01 As String,  _
                    ByVal Original_MODEL09ASM02 As String,  _
                    ByVal Original_MODEL09ASM03 As String,  _
                    ByVal Original_MODEL09ASM04 As String,  _
                    ByVal Original_MODEL09ASM05 As String,  _
                    ByVal Original_MODEL10ASM01 As String,  _
                    ByVal Original_MODEL10ASM02 As String,  _
                    ByVal Original_MODEL10ASM03 As String,  _
                    ByVal Original_MODEL10ASM04 As String,  _
                    ByVal Original_MODEL10ASM05 As String,  _
                    ByVal Original_MODEL11ASM01 As String,  _
                    ByVal Original_MODEL11ASM02 As String,  _
                    ByVal Original_MODEL11ASM03 As String,  _
                    ByVal Original_MODEL11ASM04 As String,  _
                    ByVal Original_MODEL11ASM05 As String,  _
                    ByVal Original_MODEL12ASM01 As String,  _
                    ByVal Original_MODEL12ASM02 As String,  _
                    ByVal Original_MODEL12ASM03 As String,  _
                    ByVal Original_MODEL12ASM04 As String,  _
                    ByVal Original_MODEL12ASM05 As String,  _
                    ByVal Original_MODEL13ASM01 As String,  _
                    ByVal Original_MODEL13ASM02 As String,  _
                    ByVal Original_MODEL13ASM03 As String,  _
                    ByVal Original_MODEL13ASM04 As String,  _
                    ByVal Original_MODEL13ASM05 As String,  _
                    ByVal Original_MODEL14ASM01 As String,  _
                    ByVal Original_MODEL14ASM02 As String,  _
                    ByVal Original_MODEL14ASM03 As String,  _
                    ByVal Original_MODEL14ASM04 As String,  _
                    ByVal Original_MODEL14ASM05 As String,  _
                    ByVal Original_MODEL15ASM01 As String,  _
                    ByVal Original_MODEL15ASM02 As String,  _
                    ByVal Original_MODEL15ASM03 As String,  _
                    ByVal Original_MODEL15ASM04 As String,  _
                    ByVal Original_MODEL15ASM05 As String,  _
                    ByVal Original_MODEL16ASM01 As String,  _
                    ByVal Original_MODEL16ASM02 As String,  _
                    ByVal Original_MODEL16ASM03 As String,  _
                    ByVal Original_MODEL16ASM04 As String,  _
                    ByVal Original_MODEL16ASM05 As String,  _
                    ByVal Original_MODEL17ASM01 As String,  _
                    ByVal Original_MODEL17ASM02 As String,  _
                    ByVal Original_MODEL17ASM03 As String,  _
                    ByVal Original_MODEL17ASM04 As String,  _
                    ByVal Original_MODEL17ASM05 As String,  _
                    ByVal Original_MODEL18ASM01 As String,  _
                    ByVal Original_MODEL18ASM02 As String,  _
                    ByVal Original_MODEL18ASM03 As String,  _
                    ByVal Original_MODEL18ASM04 As String,  _
                    ByVal Original_MODEL18ASM05 As String,  _
                    ByVal Original_MODEL19ASM01 As String,  _
                    ByVal Original_MODEL19ASM02 As String,  _
                    ByVal Original_MODEL19ASM03 As String,  _
                    ByVal Original_MODEL19ASM04 As String,  _
                    ByVal Original_MODEL19ASM05 As String,  _
                    ByVal Original_MODEL20ASM01 As String,  _
                    ByVal Original_MODEL20ASM02 As String,  _
                    ByVal Original_MODEL20ASM03 As String,  _
                    ByVal Original_MODEL20ASM04 As String,  _
                    ByVal Original_MODEL20ASM05 As String,  _
                    ByVal Original_Reserve01 As String,  _
                    ByVal Original_Reserve02 As String,  _
                    ByVal Original_SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal Original_XchgFlag As String,  _
                    ByVal Original_InstructFlag As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FileName As String) As Integer
            If (Original_SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SeqNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SeqNo,String)
            End If
            If (Original_ModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ModelYear")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ModelYear,String)
            End If
            If (Original_SuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SuffixCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SuffixCode,String)
            End If
            If (Original_LotID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotID")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_LotID,String)
            End If
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_LotNo,String)
            End If
            If (Original_Unit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Unit")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Unit,String)
            End If
            If (Original_BlockModel Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_BlockModel,String)
            End If
            If (Original_BlockSeq Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_BlockSeq,String)
            End If
            If (Original_MARK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_MARK,String)
            End If
            If (Original_ProductionDate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_ProductionDate,String)
            End If
            If (Original_ProductionTime Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ProductionTime,String)
            End If
            If (Original_ImportCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ImportCode,String)
            End If
            If (Original_YChassisFlag Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_YChassisFlag,String)
            End If
            If (Original_GAShop Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_GAShop,String)
            End If
            If (Original_HanmmerYears Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_HanmmerYears,String)
            End If
            If (Original_MODEL01ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_MODEL01ASM01,String)
            End If
            If (Original_MODEL01ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_MODEL01ASM02,String)
            End If
            If (Original_MODEL01ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_MODEL01ASM03,String)
            End If
            If (Original_MODEL01ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_MODEL01ASM04,String)
            End If
            If (Original_MODEL01ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_MODEL01ASM05,String)
            End If
            If (Original_MODEL02ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_MODEL02ASM01,String)
            End If
            If (Original_MODEL02ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_MODEL02ASM02,String)
            End If
            If (Original_MODEL02ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_MODEL02ASM03,String)
            End If
            If (Original_MODEL02ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_MODEL02ASM04,String)
            End If
            If (Original_MODEL02ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_MODEL02ASM05,String)
            End If
            If (Original_MODEL03ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_MODEL03ASM01,String)
            End If
            If (Original_MODEL03ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_MODEL03ASM02,String)
            End If
            If (Original_MODEL03ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_MODEL03ASM03,String)
            End If
            If (Original_MODEL03ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_MODEL03ASM04,String)
            End If
            If (Original_MODEL03ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_MODEL03ASM05,String)
            End If
            If (Original_MODEL04ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_MODEL04ASM01,String)
            End If
            If (Original_MODEL04ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_MODEL04ASM02,String)
            End If
            If (Original_MODEL04ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_MODEL04ASM03,String)
            End If
            If (Original_MODEL04ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_MODEL04ASM04,String)
            End If
            If (Original_MODEL04ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_MODEL04ASM05,String)
            End If
            If (Original_MODEL05ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_MODEL05ASM01,String)
            End If
            If (Original_MODEL05ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_MODEL05ASM02,String)
            End If
            If (Original_MODEL05ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_MODEL05ASM03,String)
            End If
            If (Original_MODEL05ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_MODEL05ASM04,String)
            End If
            If (Original_MODEL05ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_MODEL05ASM05,String)
            End If
            If (Original_MODEL06ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_MODEL06ASM01,String)
            End If
            If (Original_MODEL06ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_MODEL06ASM02,String)
            End If
            If (Original_MODEL06ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_MODEL06ASM03,String)
            End If
            If (Original_MODEL06ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_MODEL06ASM04,String)
            End If
            If (Original_MODEL06ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_MODEL06ASM05,String)
            End If
            If (Original_MODEL07ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_MODEL07ASM01,String)
            End If
            If (Original_MODEL07ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_MODEL07ASM02,String)
            End If
            If (Original_MODEL07ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_MODEL07ASM03,String)
            End If
            If (Original_MODEL07ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_MODEL07ASM04,String)
            End If
            If (Original_MODEL07ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_MODEL07ASM05,String)
            End If
            If (Original_MODEL08ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_MODEL08ASM01,String)
            End If
            If (Original_MODEL08ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_MODEL08ASM02,String)
            End If
            If (Original_MODEL08ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_MODEL08ASM03,String)
            End If
            If (Original_MODEL08ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(Original_MODEL08ASM04,String)
            End If
            If (Original_MODEL08ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(Original_MODEL08ASM05,String)
            End If
            If (Original_MODEL09ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(Original_MODEL09ASM01,String)
            End If
            If (Original_MODEL09ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(Original_MODEL09ASM02,String)
            End If
            If (Original_MODEL09ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(Original_MODEL09ASM03,String)
            End If
            If (Original_MODEL09ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(Original_MODEL09ASM04,String)
            End If
            If (Original_MODEL09ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(Original_MODEL09ASM05,String)
            End If
            If (Original_MODEL10ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(Original_MODEL10ASM01,String)
            End If
            If (Original_MODEL10ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(Original_MODEL10ASM02,String)
            End If
            If (Original_MODEL10ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(Original_MODEL10ASM03,String)
            End If
            If (Original_MODEL10ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(Original_MODEL10ASM04,String)
            End If
            If (Original_MODEL10ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(Original_MODEL10ASM05,String)
            End If
            If (Original_MODEL11ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(Original_MODEL11ASM01,String)
            End If
            If (Original_MODEL11ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(Original_MODEL11ASM02,String)
            End If
            If (Original_MODEL11ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(129).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(Original_MODEL11ASM03,String)
            End If
            If (Original_MODEL11ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(Original_MODEL11ASM04,String)
            End If
            If (Original_MODEL11ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(Original_MODEL11ASM05,String)
            End If
            If (Original_MODEL12ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(135).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(Original_MODEL12ASM01,String)
            End If
            If (Original_MODEL12ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(137).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(Original_MODEL12ASM02,String)
            End If
            If (Original_MODEL12ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(139).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(Original_MODEL12ASM03,String)
            End If
            If (Original_MODEL12ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(141).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(Original_MODEL12ASM04,String)
            End If
            If (Original_MODEL12ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(143).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(Original_MODEL12ASM05,String)
            End If
            If (Original_MODEL13ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(145).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(Original_MODEL13ASM01,String)
            End If
            If (Original_MODEL13ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(147).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(Original_MODEL13ASM02,String)
            End If
            If (Original_MODEL13ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(149).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(Original_MODEL13ASM03,String)
            End If
            If (Original_MODEL13ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(151).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(Original_MODEL13ASM04,String)
            End If
            If (Original_MODEL13ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(153).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(Original_MODEL13ASM05,String)
            End If
            If (Original_MODEL14ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(155).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(Original_MODEL14ASM01,String)
            End If
            If (Original_MODEL14ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(157).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(Original_MODEL14ASM02,String)
            End If
            If (Original_MODEL14ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(159).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(Original_MODEL14ASM03,String)
            End If
            If (Original_MODEL14ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(161).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(Original_MODEL14ASM04,String)
            End If
            If (Original_MODEL14ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(163).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(Original_MODEL14ASM05,String)
            End If
            If (Original_MODEL15ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(165).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(Original_MODEL15ASM01,String)
            End If
            If (Original_MODEL15ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(167).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(Original_MODEL15ASM02,String)
            End If
            If (Original_MODEL15ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(169).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(Original_MODEL15ASM03,String)
            End If
            If (Original_MODEL15ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(170).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(171).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(170).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(171).Value = CType(Original_MODEL15ASM04,String)
            End If
            If (Original_MODEL15ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(173).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(Original_MODEL15ASM05,String)
            End If
            If (Original_MODEL16ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(175).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(Original_MODEL16ASM01,String)
            End If
            If (Original_MODEL16ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(176).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(177).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(176).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(177).Value = CType(Original_MODEL16ASM02,String)
            End If
            If (Original_MODEL16ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(178).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(179).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(178).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(179).Value = CType(Original_MODEL16ASM03,String)
            End If
            If (Original_MODEL16ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(180).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(181).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(180).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(181).Value = CType(Original_MODEL16ASM04,String)
            End If
            If (Original_MODEL16ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(182).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(183).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(182).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(183).Value = CType(Original_MODEL16ASM05,String)
            End If
            If (Original_MODEL17ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(184).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(185).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(184).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(185).Value = CType(Original_MODEL17ASM01,String)
            End If
            If (Original_MODEL17ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(186).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(187).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(186).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(187).Value = CType(Original_MODEL17ASM02,String)
            End If
            If (Original_MODEL17ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(188).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(189).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(188).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(189).Value = CType(Original_MODEL17ASM03,String)
            End If
            If (Original_MODEL17ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(190).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(191).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(190).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(191).Value = CType(Original_MODEL17ASM04,String)
            End If
            If (Original_MODEL17ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(192).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(193).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(192).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(193).Value = CType(Original_MODEL17ASM05,String)
            End If
            If (Original_MODEL18ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(194).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(195).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(194).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(195).Value = CType(Original_MODEL18ASM01,String)
            End If
            If (Original_MODEL18ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(196).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(197).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(196).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(197).Value = CType(Original_MODEL18ASM02,String)
            End If
            If (Original_MODEL18ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(198).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(199).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(198).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(199).Value = CType(Original_MODEL18ASM03,String)
            End If
            If (Original_MODEL18ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(200).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(201).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(200).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(201).Value = CType(Original_MODEL18ASM04,String)
            End If
            If (Original_MODEL18ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(202).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(203).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(202).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(203).Value = CType(Original_MODEL18ASM05,String)
            End If
            If (Original_MODEL19ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(204).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(205).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(204).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(205).Value = CType(Original_MODEL19ASM01,String)
            End If
            If (Original_MODEL19ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(206).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(207).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(206).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(207).Value = CType(Original_MODEL19ASM02,String)
            End If
            If (Original_MODEL19ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(208).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(209).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(208).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(209).Value = CType(Original_MODEL19ASM03,String)
            End If
            If (Original_MODEL19ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(210).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(211).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(210).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(211).Value = CType(Original_MODEL19ASM04,String)
            End If
            If (Original_MODEL19ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(212).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(213).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(212).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(213).Value = CType(Original_MODEL19ASM05,String)
            End If
            If (Original_MODEL20ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(214).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(215).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(214).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(215).Value = CType(Original_MODEL20ASM01,String)
            End If
            If (Original_MODEL20ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(216).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(217).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(216).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(217).Value = CType(Original_MODEL20ASM02,String)
            End If
            If (Original_MODEL20ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(218).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(219).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(218).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(219).Value = CType(Original_MODEL20ASM03,String)
            End If
            If (Original_MODEL20ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(220).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(221).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(220).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(221).Value = CType(Original_MODEL20ASM04,String)
            End If
            If (Original_MODEL20ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(222).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(223).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(222).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(223).Value = CType(Original_MODEL20ASM05,String)
            End If
            If (Original_Reserve01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(224).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(225).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(224).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(225).Value = CType(Original_Reserve01,String)
            End If
            If (Original_Reserve02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(226).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(227).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(226).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(227).Value = CType(Original_Reserve02,String)
            End If
            If (Original_SubSeq.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(228).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(229).Value = CType(Original_SubSeq.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(228).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(229).Value = Global.System.DBNull.Value
            End If
            If (Original_XchgFlag Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(230).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(231).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(230).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(231).Value = CType(Original_XchgFlag,String)
            End If
            If (Original_InstructFlag.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(232).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(233).Value = CType(Original_InstructFlag.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(232).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(233).Value = Global.System.DBNull.Value
            End If
            If (Original_FileName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(234).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(235).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(234).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(235).Value = CType(Original_FileName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal SeqNo As String,  _
                    ByVal ModelYear As String,  _
                    ByVal SuffixCode As String,  _
                    ByVal LotID As String,  _
                    ByVal LotNo As String,  _
                    ByVal Unit As String,  _
                    ByVal BlockModel As String,  _
                    ByVal BlockSeq As String,  _
                    ByVal MARK As String,  _
                    ByVal ProductionDate As String,  _
                    ByVal ProductionTime As String,  _
                    ByVal ImportCode As String,  _
                    ByVal YChassisFlag As String,  _
                    ByVal GAShop As String,  _
                    ByVal HanmmerYears As String,  _
                    ByVal MODEL01ASM01 As String,  _
                    ByVal MODEL01ASM02 As String,  _
                    ByVal MODEL01ASM03 As String,  _
                    ByVal MODEL01ASM04 As String,  _
                    ByVal MODEL01ASM05 As String,  _
                    ByVal MODEL02ASM01 As String,  _
                    ByVal MODEL02ASM02 As String,  _
                    ByVal MODEL02ASM03 As String,  _
                    ByVal MODEL02ASM04 As String,  _
                    ByVal MODEL02ASM05 As String,  _
                    ByVal MODEL03ASM01 As String,  _
                    ByVal MODEL03ASM02 As String,  _
                    ByVal MODEL03ASM03 As String,  _
                    ByVal MODEL03ASM04 As String,  _
                    ByVal MODEL03ASM05 As String,  _
                    ByVal MODEL04ASM01 As String,  _
                    ByVal MODEL04ASM02 As String,  _
                    ByVal MODEL04ASM03 As String,  _
                    ByVal MODEL04ASM04 As String,  _
                    ByVal MODEL04ASM05 As String,  _
                    ByVal MODEL05ASM01 As String,  _
                    ByVal MODEL05ASM02 As String,  _
                    ByVal MODEL05ASM03 As String,  _
                    ByVal MODEL05ASM04 As String,  _
                    ByVal MODEL05ASM05 As String,  _
                    ByVal MODEL06ASM01 As String,  _
                    ByVal MODEL06ASM02 As String,  _
                    ByVal MODEL06ASM03 As String,  _
                    ByVal MODEL06ASM04 As String,  _
                    ByVal MODEL06ASM05 As String,  _
                    ByVal MODEL07ASM01 As String,  _
                    ByVal MODEL07ASM02 As String,  _
                    ByVal MODEL07ASM03 As String,  _
                    ByVal MODEL07ASM04 As String,  _
                    ByVal MODEL07ASM05 As String,  _
                    ByVal MODEL08ASM01 As String,  _
                    ByVal MODEL08ASM02 As String,  _
                    ByVal MODEL08ASM03 As String,  _
                    ByVal MODEL08ASM04 As String,  _
                    ByVal MODEL08ASM05 As String,  _
                    ByVal MODEL09ASM01 As String,  _
                    ByVal MODEL09ASM02 As String,  _
                    ByVal MODEL09ASM03 As String,  _
                    ByVal MODEL09ASM04 As String,  _
                    ByVal MODEL09ASM05 As String,  _
                    ByVal MODEL10ASM01 As String,  _
                    ByVal MODEL10ASM02 As String,  _
                    ByVal MODEL10ASM03 As String,  _
                    ByVal MODEL10ASM04 As String,  _
                    ByVal MODEL10ASM05 As String,  _
                    ByVal MODEL11ASM01 As String,  _
                    ByVal MODEL11ASM02 As String,  _
                    ByVal MODEL11ASM03 As String,  _
                    ByVal MODEL11ASM04 As String,  _
                    ByVal MODEL11ASM05 As String,  _
                    ByVal MODEL12ASM01 As String,  _
                    ByVal MODEL12ASM02 As String,  _
                    ByVal MODEL12ASM03 As String,  _
                    ByVal MODEL12ASM04 As String,  _
                    ByVal MODEL12ASM05 As String,  _
                    ByVal MODEL13ASM01 As String,  _
                    ByVal MODEL13ASM02 As String,  _
                    ByVal MODEL13ASM03 As String,  _
                    ByVal MODEL13ASM04 As String,  _
                    ByVal MODEL13ASM05 As String,  _
                    ByVal MODEL14ASM01 As String,  _
                    ByVal MODEL14ASM02 As String,  _
                    ByVal MODEL14ASM03 As String,  _
                    ByVal MODEL14ASM04 As String,  _
                    ByVal MODEL14ASM05 As String,  _
                    ByVal MODEL15ASM01 As String,  _
                    ByVal MODEL15ASM02 As String,  _
                    ByVal MODEL15ASM03 As String,  _
                    ByVal MODEL15ASM04 As String,  _
                    ByVal MODEL15ASM05 As String,  _
                    ByVal MODEL16ASM01 As String,  _
                    ByVal MODEL16ASM02 As String,  _
                    ByVal MODEL16ASM03 As String,  _
                    ByVal MODEL16ASM04 As String,  _
                    ByVal MODEL16ASM05 As String,  _
                    ByVal MODEL17ASM01 As String,  _
                    ByVal MODEL17ASM02 As String,  _
                    ByVal MODEL17ASM03 As String,  _
                    ByVal MODEL17ASM04 As String,  _
                    ByVal MODEL17ASM05 As String,  _
                    ByVal MODEL18ASM01 As String,  _
                    ByVal MODEL18ASM02 As String,  _
                    ByVal MODEL18ASM03 As String,  _
                    ByVal MODEL18ASM04 As String,  _
                    ByVal MODEL18ASM05 As String,  _
                    ByVal MODEL19ASM01 As String,  _
                    ByVal MODEL19ASM02 As String,  _
                    ByVal MODEL19ASM03 As String,  _
                    ByVal MODEL19ASM04 As String,  _
                    ByVal MODEL19ASM05 As String,  _
                    ByVal MODEL20ASM01 As String,  _
                    ByVal MODEL20ASM02 As String,  _
                    ByVal MODEL20ASM03 As String,  _
                    ByVal MODEL20ASM04 As String,  _
                    ByVal MODEL20ASM05 As String,  _
                    ByVal Reserve01 As String,  _
                    ByVal Reserve02 As String,  _
                    ByVal SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal XchgFlag As String,  _
                    ByVal InstructFlag As Global.System.Nullable(Of Integer),  _
                    ByVal FileName As String) As Integer
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SeqNo,String)
            End If
            If (ModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ModelYear")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ModelYear,String)
            End If
            If (SuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SuffixCode")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SuffixCode,String)
            End If
            If (LotID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotID")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(LotID,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LotNo,String)
            End If
            If (Unit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Unit")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Unit,String)
            End If
            If (BlockModel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(BlockModel,String)
            End If
            If (BlockSeq Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BlockSeq,String)
            End If
            If (MARK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(MARK,String)
            End If
            If (ProductionDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ProductionTime,String)
            End If
            If (ImportCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ImportCode,String)
            End If
            If (YChassisFlag Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(YChassisFlag,String)
            End If
            If (GAShop Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(GAShop,String)
            End If
            If (HanmmerYears Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(HanmmerYears,String)
            End If
            If (MODEL01ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(MODEL01ASM01,String)
            End If
            If (MODEL01ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(MODEL01ASM02,String)
            End If
            If (MODEL01ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(MODEL01ASM03,String)
            End If
            If (MODEL01ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(MODEL01ASM04,String)
            End If
            If (MODEL01ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(MODEL01ASM05,String)
            End If
            If (MODEL02ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(MODEL02ASM01,String)
            End If
            If (MODEL02ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(MODEL02ASM02,String)
            End If
            If (MODEL02ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(MODEL02ASM03,String)
            End If
            If (MODEL02ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(MODEL02ASM04,String)
            End If
            If (MODEL02ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MODEL02ASM05,String)
            End If
            If (MODEL03ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(MODEL03ASM01,String)
            End If
            If (MODEL03ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(MODEL03ASM02,String)
            End If
            If (MODEL03ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(MODEL03ASM03,String)
            End If
            If (MODEL03ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(MODEL03ASM04,String)
            End If
            If (MODEL03ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(MODEL03ASM05,String)
            End If
            If (MODEL04ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(MODEL04ASM01,String)
            End If
            If (MODEL04ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(MODEL04ASM02,String)
            End If
            If (MODEL04ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(MODEL04ASM03,String)
            End If
            If (MODEL04ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(MODEL04ASM04,String)
            End If
            If (MODEL04ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(MODEL04ASM05,String)
            End If
            If (MODEL05ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(MODEL05ASM01,String)
            End If
            If (MODEL05ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(MODEL05ASM02,String)
            End If
            If (MODEL05ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(MODEL05ASM03,String)
            End If
            If (MODEL05ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(MODEL05ASM04,String)
            End If
            If (MODEL05ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(MODEL05ASM05,String)
            End If
            If (MODEL06ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(MODEL06ASM01,String)
            End If
            If (MODEL06ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(MODEL06ASM02,String)
            End If
            If (MODEL06ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(MODEL06ASM03,String)
            End If
            If (MODEL06ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(MODEL06ASM04,String)
            End If
            If (MODEL06ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(MODEL06ASM05,String)
            End If
            If (MODEL07ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(MODEL07ASM01,String)
            End If
            If (MODEL07ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(MODEL07ASM02,String)
            End If
            If (MODEL07ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(MODEL07ASM03,String)
            End If
            If (MODEL07ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(MODEL07ASM04,String)
            End If
            If (MODEL07ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(MODEL07ASM05,String)
            End If
            If (MODEL08ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(MODEL08ASM01,String)
            End If
            If (MODEL08ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(MODEL08ASM02,String)
            End If
            If (MODEL08ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(MODEL08ASM03,String)
            End If
            If (MODEL08ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(MODEL08ASM04,String)
            End If
            If (MODEL08ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(MODEL08ASM05,String)
            End If
            If (MODEL09ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(MODEL09ASM01,String)
            End If
            If (MODEL09ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(MODEL09ASM02,String)
            End If
            If (MODEL09ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(MODEL09ASM03,String)
            End If
            If (MODEL09ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(MODEL09ASM04,String)
            End If
            If (MODEL09ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(MODEL09ASM05,String)
            End If
            If (MODEL10ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(MODEL10ASM01,String)
            End If
            If (MODEL10ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(MODEL10ASM02,String)
            End If
            If (MODEL10ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(MODEL10ASM03,String)
            End If
            If (MODEL10ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(MODEL10ASM04,String)
            End If
            If (MODEL10ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(MODEL10ASM05,String)
            End If
            If (MODEL11ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(MODEL11ASM01,String)
            End If
            If (MODEL11ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(MODEL11ASM02,String)
            End If
            If (MODEL11ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(MODEL11ASM03,String)
            End If
            If (MODEL11ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(MODEL11ASM04,String)
            End If
            If (MODEL11ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(MODEL11ASM05,String)
            End If
            If (MODEL12ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(MODEL12ASM01,String)
            End If
            If (MODEL12ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(MODEL12ASM02,String)
            End If
            If (MODEL12ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(MODEL12ASM03,String)
            End If
            If (MODEL12ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(MODEL12ASM04,String)
            End If
            If (MODEL12ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(MODEL12ASM05,String)
            End If
            If (MODEL13ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(MODEL13ASM01,String)
            End If
            If (MODEL13ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(MODEL13ASM02,String)
            End If
            If (MODEL13ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(MODEL13ASM03,String)
            End If
            If (MODEL13ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(MODEL13ASM04,String)
            End If
            If (MODEL13ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(MODEL13ASM05,String)
            End If
            If (MODEL14ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(MODEL14ASM01,String)
            End If
            If (MODEL14ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(MODEL14ASM02,String)
            End If
            If (MODEL14ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(MODEL14ASM03,String)
            End If
            If (MODEL14ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(MODEL14ASM04,String)
            End If
            If (MODEL14ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(MODEL14ASM05,String)
            End If
            If (MODEL15ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(MODEL15ASM01,String)
            End If
            If (MODEL15ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(MODEL15ASM02,String)
            End If
            If (MODEL15ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(MODEL15ASM03,String)
            End If
            If (MODEL15ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(MODEL15ASM04,String)
            End If
            If (MODEL15ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(MODEL15ASM05,String)
            End If
            If (MODEL16ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(MODEL16ASM01,String)
            End If
            If (MODEL16ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(MODEL16ASM02,String)
            End If
            If (MODEL16ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(MODEL16ASM03,String)
            End If
            If (MODEL16ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(MODEL16ASM04,String)
            End If
            If (MODEL16ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(MODEL16ASM05,String)
            End If
            If (MODEL17ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(MODEL17ASM01,String)
            End If
            If (MODEL17ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(MODEL17ASM02,String)
            End If
            If (MODEL17ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(MODEL17ASM03,String)
            End If
            If (MODEL17ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(MODEL17ASM04,String)
            End If
            If (MODEL17ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(MODEL17ASM05,String)
            End If
            If (MODEL18ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(MODEL18ASM01,String)
            End If
            If (MODEL18ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(MODEL18ASM02,String)
            End If
            If (MODEL18ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(MODEL18ASM03,String)
            End If
            If (MODEL18ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(MODEL18ASM04,String)
            End If
            If (MODEL18ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(MODEL18ASM05,String)
            End If
            If (MODEL19ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(MODEL19ASM01,String)
            End If
            If (MODEL19ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(MODEL19ASM02,String)
            End If
            If (MODEL19ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(MODEL19ASM03,String)
            End If
            If (MODEL19ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(MODEL19ASM04,String)
            End If
            If (MODEL19ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(MODEL19ASM05,String)
            End If
            If (MODEL20ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(MODEL20ASM01,String)
            End If
            If (MODEL20ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(MODEL20ASM02,String)
            End If
            If (MODEL20ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(MODEL20ASM03,String)
            End If
            If (MODEL20ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(113).Value = CType(MODEL20ASM04,String)
            End If
            If (MODEL20ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(114).Value = CType(MODEL20ASM05,String)
            End If
            If (Reserve01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(115).Value = CType(Reserve01,String)
            End If
            If (Reserve02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(116).Value = CType(Reserve02,String)
            End If
            If (SubSeq.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(117).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (XchgFlag Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(118).Value = CType(XchgFlag,String)
            End If
            If (InstructFlag.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(119).Value = CType(InstructFlag.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(119).Value = Global.System.DBNull.Value
            End If
            If (FileName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(120).Value = CType(FileName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SeqNo As String,  _
                    ByVal ModelYear As String,  _
                    ByVal SuffixCode As String,  _
                    ByVal LotID As String,  _
                    ByVal LotNo As String,  _
                    ByVal Unit As String,  _
                    ByVal BlockModel As String,  _
                    ByVal BlockSeq As String,  _
                    ByVal MARK As String,  _
                    ByVal ProductionDate As String,  _
                    ByVal ProductionTime As String,  _
                    ByVal ImportCode As String,  _
                    ByVal YChassisFlag As String,  _
                    ByVal GAShop As String,  _
                    ByVal HanmmerYears As String,  _
                    ByVal MODEL01ASM01 As String,  _
                    ByVal MODEL01ASM02 As String,  _
                    ByVal MODEL01ASM03 As String,  _
                    ByVal MODEL01ASM04 As String,  _
                    ByVal MODEL01ASM05 As String,  _
                    ByVal MODEL02ASM01 As String,  _
                    ByVal MODEL02ASM02 As String,  _
                    ByVal MODEL02ASM03 As String,  _
                    ByVal MODEL02ASM04 As String,  _
                    ByVal MODEL02ASM05 As String,  _
                    ByVal MODEL03ASM01 As String,  _
                    ByVal MODEL03ASM02 As String,  _
                    ByVal MODEL03ASM03 As String,  _
                    ByVal MODEL03ASM04 As String,  _
                    ByVal MODEL03ASM05 As String,  _
                    ByVal MODEL04ASM01 As String,  _
                    ByVal MODEL04ASM02 As String,  _
                    ByVal MODEL04ASM03 As String,  _
                    ByVal MODEL04ASM04 As String,  _
                    ByVal MODEL04ASM05 As String,  _
                    ByVal MODEL05ASM01 As String,  _
                    ByVal MODEL05ASM02 As String,  _
                    ByVal MODEL05ASM03 As String,  _
                    ByVal MODEL05ASM04 As String,  _
                    ByVal MODEL05ASM05 As String,  _
                    ByVal MODEL06ASM01 As String,  _
                    ByVal MODEL06ASM02 As String,  _
                    ByVal MODEL06ASM03 As String,  _
                    ByVal MODEL06ASM04 As String,  _
                    ByVal MODEL06ASM05 As String,  _
                    ByVal MODEL07ASM01 As String,  _
                    ByVal MODEL07ASM02 As String,  _
                    ByVal MODEL07ASM03 As String,  _
                    ByVal MODEL07ASM04 As String,  _
                    ByVal MODEL07ASM05 As String,  _
                    ByVal MODEL08ASM01 As String,  _
                    ByVal MODEL08ASM02 As String,  _
                    ByVal MODEL08ASM03 As String,  _
                    ByVal MODEL08ASM04 As String,  _
                    ByVal MODEL08ASM05 As String,  _
                    ByVal MODEL09ASM01 As String,  _
                    ByVal MODEL09ASM02 As String,  _
                    ByVal MODEL09ASM03 As String,  _
                    ByVal MODEL09ASM04 As String,  _
                    ByVal MODEL09ASM05 As String,  _
                    ByVal MODEL10ASM01 As String,  _
                    ByVal MODEL10ASM02 As String,  _
                    ByVal MODEL10ASM03 As String,  _
                    ByVal MODEL10ASM04 As String,  _
                    ByVal MODEL10ASM05 As String,  _
                    ByVal MODEL11ASM01 As String,  _
                    ByVal MODEL11ASM02 As String,  _
                    ByVal MODEL11ASM03 As String,  _
                    ByVal MODEL11ASM04 As String,  _
                    ByVal MODEL11ASM05 As String,  _
                    ByVal MODEL12ASM01 As String,  _
                    ByVal MODEL12ASM02 As String,  _
                    ByVal MODEL12ASM03 As String,  _
                    ByVal MODEL12ASM04 As String,  _
                    ByVal MODEL12ASM05 As String,  _
                    ByVal MODEL13ASM01 As String,  _
                    ByVal MODEL13ASM02 As String,  _
                    ByVal MODEL13ASM03 As String,  _
                    ByVal MODEL13ASM04 As String,  _
                    ByVal MODEL13ASM05 As String,  _
                    ByVal MODEL14ASM01 As String,  _
                    ByVal MODEL14ASM02 As String,  _
                    ByVal MODEL14ASM03 As String,  _
                    ByVal MODEL14ASM04 As String,  _
                    ByVal MODEL14ASM05 As String,  _
                    ByVal MODEL15ASM01 As String,  _
                    ByVal MODEL15ASM02 As String,  _
                    ByVal MODEL15ASM03 As String,  _
                    ByVal MODEL15ASM04 As String,  _
                    ByVal MODEL15ASM05 As String,  _
                    ByVal MODEL16ASM01 As String,  _
                    ByVal MODEL16ASM02 As String,  _
                    ByVal MODEL16ASM03 As String,  _
                    ByVal MODEL16ASM04 As String,  _
                    ByVal MODEL16ASM05 As String,  _
                    ByVal MODEL17ASM01 As String,  _
                    ByVal MODEL17ASM02 As String,  _
                    ByVal MODEL17ASM03 As String,  _
                    ByVal MODEL17ASM04 As String,  _
                    ByVal MODEL17ASM05 As String,  _
                    ByVal MODEL18ASM01 As String,  _
                    ByVal MODEL18ASM02 As String,  _
                    ByVal MODEL18ASM03 As String,  _
                    ByVal MODEL18ASM04 As String,  _
                    ByVal MODEL18ASM05 As String,  _
                    ByVal MODEL19ASM01 As String,  _
                    ByVal MODEL19ASM02 As String,  _
                    ByVal MODEL19ASM03 As String,  _
                    ByVal MODEL19ASM04 As String,  _
                    ByVal MODEL19ASM05 As String,  _
                    ByVal MODEL20ASM01 As String,  _
                    ByVal MODEL20ASM02 As String,  _
                    ByVal MODEL20ASM03 As String,  _
                    ByVal MODEL20ASM04 As String,  _
                    ByVal MODEL20ASM05 As String,  _
                    ByVal Reserve01 As String,  _
                    ByVal Reserve02 As String,  _
                    ByVal SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal XchgFlag As String,  _
                    ByVal InstructFlag As Global.System.Nullable(Of Integer),  _
                    ByVal FileName As String,  _
                    ByVal Original_SeqNo As String,  _
                    ByVal Original_ModelYear As String,  _
                    ByVal Original_SuffixCode As String,  _
                    ByVal Original_LotID As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_Unit As String,  _
                    ByVal Original_BlockModel As String,  _
                    ByVal Original_BlockSeq As String,  _
                    ByVal Original_MARK As String,  _
                    ByVal Original_ProductionDate As String,  _
                    ByVal Original_ProductionTime As String,  _
                    ByVal Original_ImportCode As String,  _
                    ByVal Original_YChassisFlag As String,  _
                    ByVal Original_GAShop As String,  _
                    ByVal Original_HanmmerYears As String,  _
                    ByVal Original_MODEL01ASM01 As String,  _
                    ByVal Original_MODEL01ASM02 As String,  _
                    ByVal Original_MODEL01ASM03 As String,  _
                    ByVal Original_MODEL01ASM04 As String,  _
                    ByVal Original_MODEL01ASM05 As String,  _
                    ByVal Original_MODEL02ASM01 As String,  _
                    ByVal Original_MODEL02ASM02 As String,  _
                    ByVal Original_MODEL02ASM03 As String,  _
                    ByVal Original_MODEL02ASM04 As String,  _
                    ByVal Original_MODEL02ASM05 As String,  _
                    ByVal Original_MODEL03ASM01 As String,  _
                    ByVal Original_MODEL03ASM02 As String,  _
                    ByVal Original_MODEL03ASM03 As String,  _
                    ByVal Original_MODEL03ASM04 As String,  _
                    ByVal Original_MODEL03ASM05 As String,  _
                    ByVal Original_MODEL04ASM01 As String,  _
                    ByVal Original_MODEL04ASM02 As String,  _
                    ByVal Original_MODEL04ASM03 As String,  _
                    ByVal Original_MODEL04ASM04 As String,  _
                    ByVal Original_MODEL04ASM05 As String,  _
                    ByVal Original_MODEL05ASM01 As String,  _
                    ByVal Original_MODEL05ASM02 As String,  _
                    ByVal Original_MODEL05ASM03 As String,  _
                    ByVal Original_MODEL05ASM04 As String,  _
                    ByVal Original_MODEL05ASM05 As String,  _
                    ByVal Original_MODEL06ASM01 As String,  _
                    ByVal Original_MODEL06ASM02 As String,  _
                    ByVal Original_MODEL06ASM03 As String,  _
                    ByVal Original_MODEL06ASM04 As String,  _
                    ByVal Original_MODEL06ASM05 As String,  _
                    ByVal Original_MODEL07ASM01 As String,  _
                    ByVal Original_MODEL07ASM02 As String,  _
                    ByVal Original_MODEL07ASM03 As String,  _
                    ByVal Original_MODEL07ASM04 As String,  _
                    ByVal Original_MODEL07ASM05 As String,  _
                    ByVal Original_MODEL08ASM01 As String,  _
                    ByVal Original_MODEL08ASM02 As String,  _
                    ByVal Original_MODEL08ASM03 As String,  _
                    ByVal Original_MODEL08ASM04 As String,  _
                    ByVal Original_MODEL08ASM05 As String,  _
                    ByVal Original_MODEL09ASM01 As String,  _
                    ByVal Original_MODEL09ASM02 As String,  _
                    ByVal Original_MODEL09ASM03 As String,  _
                    ByVal Original_MODEL09ASM04 As String,  _
                    ByVal Original_MODEL09ASM05 As String,  _
                    ByVal Original_MODEL10ASM01 As String,  _
                    ByVal Original_MODEL10ASM02 As String,  _
                    ByVal Original_MODEL10ASM03 As String,  _
                    ByVal Original_MODEL10ASM04 As String,  _
                    ByVal Original_MODEL10ASM05 As String,  _
                    ByVal Original_MODEL11ASM01 As String,  _
                    ByVal Original_MODEL11ASM02 As String,  _
                    ByVal Original_MODEL11ASM03 As String,  _
                    ByVal Original_MODEL11ASM04 As String,  _
                    ByVal Original_MODEL11ASM05 As String,  _
                    ByVal Original_MODEL12ASM01 As String,  _
                    ByVal Original_MODEL12ASM02 As String,  _
                    ByVal Original_MODEL12ASM03 As String,  _
                    ByVal Original_MODEL12ASM04 As String,  _
                    ByVal Original_MODEL12ASM05 As String,  _
                    ByVal Original_MODEL13ASM01 As String,  _
                    ByVal Original_MODEL13ASM02 As String,  _
                    ByVal Original_MODEL13ASM03 As String,  _
                    ByVal Original_MODEL13ASM04 As String,  _
                    ByVal Original_MODEL13ASM05 As String,  _
                    ByVal Original_MODEL14ASM01 As String,  _
                    ByVal Original_MODEL14ASM02 As String,  _
                    ByVal Original_MODEL14ASM03 As String,  _
                    ByVal Original_MODEL14ASM04 As String,  _
                    ByVal Original_MODEL14ASM05 As String,  _
                    ByVal Original_MODEL15ASM01 As String,  _
                    ByVal Original_MODEL15ASM02 As String,  _
                    ByVal Original_MODEL15ASM03 As String,  _
                    ByVal Original_MODEL15ASM04 As String,  _
                    ByVal Original_MODEL15ASM05 As String,  _
                    ByVal Original_MODEL16ASM01 As String,  _
                    ByVal Original_MODEL16ASM02 As String,  _
                    ByVal Original_MODEL16ASM03 As String,  _
                    ByVal Original_MODEL16ASM04 As String,  _
                    ByVal Original_MODEL16ASM05 As String,  _
                    ByVal Original_MODEL17ASM01 As String,  _
                    ByVal Original_MODEL17ASM02 As String,  _
                    ByVal Original_MODEL17ASM03 As String,  _
                    ByVal Original_MODEL17ASM04 As String,  _
                    ByVal Original_MODEL17ASM05 As String,  _
                    ByVal Original_MODEL18ASM01 As String,  _
                    ByVal Original_MODEL18ASM02 As String,  _
                    ByVal Original_MODEL18ASM03 As String,  _
                    ByVal Original_MODEL18ASM04 As String,  _
                    ByVal Original_MODEL18ASM05 As String,  _
                    ByVal Original_MODEL19ASM01 As String,  _
                    ByVal Original_MODEL19ASM02 As String,  _
                    ByVal Original_MODEL19ASM03 As String,  _
                    ByVal Original_MODEL19ASM04 As String,  _
                    ByVal Original_MODEL19ASM05 As String,  _
                    ByVal Original_MODEL20ASM01 As String,  _
                    ByVal Original_MODEL20ASM02 As String,  _
                    ByVal Original_MODEL20ASM03 As String,  _
                    ByVal Original_MODEL20ASM04 As String,  _
                    ByVal Original_MODEL20ASM05 As String,  _
                    ByVal Original_Reserve01 As String,  _
                    ByVal Original_Reserve02 As String,  _
                    ByVal Original_SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal Original_XchgFlag As String,  _
                    ByVal Original_InstructFlag As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FileName As String) As Integer
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SeqNo,String)
            End If
            If (ModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ModelYear")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ModelYear,String)
            End If
            If (SuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SuffixCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SuffixCode,String)
            End If
            If (LotID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotID")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(LotID,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LotNo,String)
            End If
            If (Unit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Unit")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Unit,String)
            End If
            If (BlockModel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(BlockModel,String)
            End If
            If (BlockSeq Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(BlockSeq,String)
            End If
            If (MARK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(MARK,String)
            End If
            If (ProductionDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ProductionTime,String)
            End If
            If (ImportCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ImportCode,String)
            End If
            If (YChassisFlag Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(YChassisFlag,String)
            End If
            If (GAShop Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(GAShop,String)
            End If
            If (HanmmerYears Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(HanmmerYears,String)
            End If
            If (MODEL01ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(MODEL01ASM01,String)
            End If
            If (MODEL01ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(MODEL01ASM02,String)
            End If
            If (MODEL01ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(MODEL01ASM03,String)
            End If
            If (MODEL01ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(MODEL01ASM04,String)
            End If
            If (MODEL01ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(MODEL01ASM05,String)
            End If
            If (MODEL02ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(MODEL02ASM01,String)
            End If
            If (MODEL02ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(MODEL02ASM02,String)
            End If
            If (MODEL02ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(MODEL02ASM03,String)
            End If
            If (MODEL02ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(MODEL02ASM04,String)
            End If
            If (MODEL02ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MODEL02ASM05,String)
            End If
            If (MODEL03ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(MODEL03ASM01,String)
            End If
            If (MODEL03ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(MODEL03ASM02,String)
            End If
            If (MODEL03ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(MODEL03ASM03,String)
            End If
            If (MODEL03ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(MODEL03ASM04,String)
            End If
            If (MODEL03ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(MODEL03ASM05,String)
            End If
            If (MODEL04ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(MODEL04ASM01,String)
            End If
            If (MODEL04ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(MODEL04ASM02,String)
            End If
            If (MODEL04ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(MODEL04ASM03,String)
            End If
            If (MODEL04ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(MODEL04ASM04,String)
            End If
            If (MODEL04ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(MODEL04ASM05,String)
            End If
            If (MODEL05ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(MODEL05ASM01,String)
            End If
            If (MODEL05ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(MODEL05ASM02,String)
            End If
            If (MODEL05ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(MODEL05ASM03,String)
            End If
            If (MODEL05ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(MODEL05ASM04,String)
            End If
            If (MODEL05ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(MODEL05ASM05,String)
            End If
            If (MODEL06ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(MODEL06ASM01,String)
            End If
            If (MODEL06ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(MODEL06ASM02,String)
            End If
            If (MODEL06ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(MODEL06ASM03,String)
            End If
            If (MODEL06ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(MODEL06ASM04,String)
            End If
            If (MODEL06ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(MODEL06ASM05,String)
            End If
            If (MODEL07ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(MODEL07ASM01,String)
            End If
            If (MODEL07ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(MODEL07ASM02,String)
            End If
            If (MODEL07ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(MODEL07ASM03,String)
            End If
            If (MODEL07ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(MODEL07ASM04,String)
            End If
            If (MODEL07ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(MODEL07ASM05,String)
            End If
            If (MODEL08ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(MODEL08ASM01,String)
            End If
            If (MODEL08ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(MODEL08ASM02,String)
            End If
            If (MODEL08ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(MODEL08ASM03,String)
            End If
            If (MODEL08ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(MODEL08ASM04,String)
            End If
            If (MODEL08ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(MODEL08ASM05,String)
            End If
            If (MODEL09ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(MODEL09ASM01,String)
            End If
            If (MODEL09ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(MODEL09ASM02,String)
            End If
            If (MODEL09ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(MODEL09ASM03,String)
            End If
            If (MODEL09ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(MODEL09ASM04,String)
            End If
            If (MODEL09ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(MODEL09ASM05,String)
            End If
            If (MODEL10ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(MODEL10ASM01,String)
            End If
            If (MODEL10ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(MODEL10ASM02,String)
            End If
            If (MODEL10ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(MODEL10ASM03,String)
            End If
            If (MODEL10ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(MODEL10ASM04,String)
            End If
            If (MODEL10ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(MODEL10ASM05,String)
            End If
            If (MODEL11ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(MODEL11ASM01,String)
            End If
            If (MODEL11ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(MODEL11ASM02,String)
            End If
            If (MODEL11ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(MODEL11ASM03,String)
            End If
            If (MODEL11ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(MODEL11ASM04,String)
            End If
            If (MODEL11ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(MODEL11ASM05,String)
            End If
            If (MODEL12ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(MODEL12ASM01,String)
            End If
            If (MODEL12ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(MODEL12ASM02,String)
            End If
            If (MODEL12ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(MODEL12ASM03,String)
            End If
            If (MODEL12ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(MODEL12ASM04,String)
            End If
            If (MODEL12ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(MODEL12ASM05,String)
            End If
            If (MODEL13ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(MODEL13ASM01,String)
            End If
            If (MODEL13ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(MODEL13ASM02,String)
            End If
            If (MODEL13ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(MODEL13ASM03,String)
            End If
            If (MODEL13ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(MODEL13ASM04,String)
            End If
            If (MODEL13ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(MODEL13ASM05,String)
            End If
            If (MODEL14ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(MODEL14ASM01,String)
            End If
            If (MODEL14ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(MODEL14ASM02,String)
            End If
            If (MODEL14ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(MODEL14ASM03,String)
            End If
            If (MODEL14ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(MODEL14ASM04,String)
            End If
            If (MODEL14ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(MODEL14ASM05,String)
            End If
            If (MODEL15ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(MODEL15ASM01,String)
            End If
            If (MODEL15ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(MODEL15ASM02,String)
            End If
            If (MODEL15ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(MODEL15ASM03,String)
            End If
            If (MODEL15ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(MODEL15ASM04,String)
            End If
            If (MODEL15ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(MODEL15ASM05,String)
            End If
            If (MODEL16ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(MODEL16ASM01,String)
            End If
            If (MODEL16ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(MODEL16ASM02,String)
            End If
            If (MODEL16ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(MODEL16ASM03,String)
            End If
            If (MODEL16ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(MODEL16ASM04,String)
            End If
            If (MODEL16ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(MODEL16ASM05,String)
            End If
            If (MODEL17ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(MODEL17ASM01,String)
            End If
            If (MODEL17ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(MODEL17ASM02,String)
            End If
            If (MODEL17ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(MODEL17ASM03,String)
            End If
            If (MODEL17ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(MODEL17ASM04,String)
            End If
            If (MODEL17ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(MODEL17ASM05,String)
            End If
            If (MODEL18ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(MODEL18ASM01,String)
            End If
            If (MODEL18ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(MODEL18ASM02,String)
            End If
            If (MODEL18ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(MODEL18ASM03,String)
            End If
            If (MODEL18ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(MODEL18ASM04,String)
            End If
            If (MODEL18ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(MODEL18ASM05,String)
            End If
            If (MODEL19ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(MODEL19ASM01,String)
            End If
            If (MODEL19ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(MODEL19ASM02,String)
            End If
            If (MODEL19ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(MODEL19ASM03,String)
            End If
            If (MODEL19ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(MODEL19ASM04,String)
            End If
            If (MODEL19ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(MODEL19ASM05,String)
            End If
            If (MODEL20ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(MODEL20ASM01,String)
            End If
            If (MODEL20ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(MODEL20ASM02,String)
            End If
            If (MODEL20ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(MODEL20ASM03,String)
            End If
            If (MODEL20ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(MODEL20ASM04,String)
            End If
            If (MODEL20ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(MODEL20ASM05,String)
            End If
            If (Reserve01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Reserve01,String)
            End If
            If (Reserve02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Reserve02,String)
            End If
            If (SubSeq.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (XchgFlag Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(XchgFlag,String)
            End If
            If (InstructFlag.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(InstructFlag.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            End If
            If (FileName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(FileName,String)
            End If
            If (Original_SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SeqNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_SeqNo,String)
            End If
            If (Original_ModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ModelYear")
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_ModelYear,String)
            End If
            If (Original_SuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SuffixCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_SuffixCode,String)
            End If
            If (Original_LotID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotID")
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_LotID,String)
            End If
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_LotNo,String)
            End If
            If (Original_Unit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Unit")
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_Unit,String)
            End If
            If (Original_BlockModel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_BlockModel,String)
            End If
            If (Original_BlockSeq Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_BlockSeq,String)
            End If
            If (Original_MARK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_MARK,String)
            End If
            If (Original_ProductionDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_ProductionDate,String)
            End If
            If (Original_ProductionTime Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_ProductionTime,String)
            End If
            If (Original_ImportCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_ImportCode,String)
            End If
            If (Original_YChassisFlag Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_YChassisFlag,String)
            End If
            If (Original_GAShop Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_GAShop,String)
            End If
            If (Original_HanmmerYears Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_HanmmerYears,String)
            End If
            If (Original_MODEL01ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_MODEL01ASM01,String)
            End If
            If (Original_MODEL01ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_MODEL01ASM02,String)
            End If
            If (Original_MODEL01ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_MODEL01ASM03,String)
            End If
            If (Original_MODEL01ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_MODEL01ASM04,String)
            End If
            If (Original_MODEL01ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_MODEL01ASM05,String)
            End If
            If (Original_MODEL02ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_MODEL02ASM01,String)
            End If
            If (Original_MODEL02ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_MODEL02ASM02,String)
            End If
            If (Original_MODEL02ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_MODEL02ASM03,String)
            End If
            If (Original_MODEL02ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_MODEL02ASM04,String)
            End If
            If (Original_MODEL02ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_MODEL02ASM05,String)
            End If
            If (Original_MODEL03ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_MODEL03ASM01,String)
            End If
            If (Original_MODEL03ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_MODEL03ASM02,String)
            End If
            If (Original_MODEL03ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(Original_MODEL03ASM03,String)
            End If
            If (Original_MODEL03ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(Original_MODEL03ASM04,String)
            End If
            If (Original_MODEL03ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(Original_MODEL03ASM05,String)
            End If
            If (Original_MODEL04ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(Original_MODEL04ASM01,String)
            End If
            If (Original_MODEL04ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(Original_MODEL04ASM02,String)
            End If
            If (Original_MODEL04ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(Original_MODEL04ASM03,String)
            End If
            If (Original_MODEL04ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(Original_MODEL04ASM04,String)
            End If
            If (Original_MODEL04ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(Original_MODEL04ASM05,String)
            End If
            If (Original_MODEL05ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(Original_MODEL05ASM01,String)
            End If
            If (Original_MODEL05ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(Original_MODEL05ASM02,String)
            End If
            If (Original_MODEL05ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(Original_MODEL05ASM03,String)
            End If
            If (Original_MODEL05ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(Original_MODEL05ASM04,String)
            End If
            If (Original_MODEL05ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(Original_MODEL05ASM05,String)
            End If
            If (Original_MODEL06ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(Original_MODEL06ASM01,String)
            End If
            If (Original_MODEL06ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(Original_MODEL06ASM02,String)
            End If
            If (Original_MODEL06ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(Original_MODEL06ASM03,String)
            End If
            If (Original_MODEL06ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(Original_MODEL06ASM04,String)
            End If
            If (Original_MODEL06ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(Original_MODEL06ASM05,String)
            End If
            If (Original_MODEL07ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(Original_MODEL07ASM01,String)
            End If
            If (Original_MODEL07ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(Original_MODEL07ASM02,String)
            End If
            If (Original_MODEL07ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(Original_MODEL07ASM03,String)
            End If
            If (Original_MODEL07ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(Original_MODEL07ASM04,String)
            End If
            If (Original_MODEL07ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(Original_MODEL07ASM05,String)
            End If
            If (Original_MODEL08ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(Original_MODEL08ASM01,String)
            End If
            If (Original_MODEL08ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(218).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(Original_MODEL08ASM02,String)
            End If
            If (Original_MODEL08ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(220).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(Original_MODEL08ASM03,String)
            End If
            If (Original_MODEL08ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(Original_MODEL08ASM04,String)
            End If
            If (Original_MODEL08ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(Original_MODEL08ASM05,String)
            End If
            If (Original_MODEL09ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(Original_MODEL09ASM01,String)
            End If
            If (Original_MODEL09ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(Original_MODEL09ASM02,String)
            End If
            If (Original_MODEL09ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(Original_MODEL09ASM03,String)
            End If
            If (Original_MODEL09ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(232).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(Original_MODEL09ASM04,String)
            End If
            If (Original_MODEL09ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(234).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(234).Value = CType(Original_MODEL09ASM05,String)
            End If
            If (Original_MODEL10ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(Original_MODEL10ASM01,String)
            End If
            If (Original_MODEL10ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(Original_MODEL10ASM02,String)
            End If
            If (Original_MODEL10ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(240).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(Original_MODEL10ASM03,String)
            End If
            If (Original_MODEL10ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(242).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(Original_MODEL10ASM04,String)
            End If
            If (Original_MODEL10ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(244).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(244).Value = CType(Original_MODEL10ASM05,String)
            End If
            If (Original_MODEL11ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(245).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(246).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(245).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(246).Value = CType(Original_MODEL11ASM01,String)
            End If
            If (Original_MODEL11ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(247).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(248).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(247).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(248).Value = CType(Original_MODEL11ASM02,String)
            End If
            If (Original_MODEL11ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(250).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(Original_MODEL11ASM03,String)
            End If
            If (Original_MODEL11ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(252).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(Original_MODEL11ASM04,String)
            End If
            If (Original_MODEL11ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(253).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(254).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(253).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(254).Value = CType(Original_MODEL11ASM05,String)
            End If
            If (Original_MODEL12ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(256).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(Original_MODEL12ASM01,String)
            End If
            If (Original_MODEL12ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(257).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(258).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(257).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(Original_MODEL12ASM02,String)
            End If
            If (Original_MODEL12ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(259).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(260).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(259).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(260).Value = CType(Original_MODEL12ASM03,String)
            End If
            If (Original_MODEL12ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(262).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(Original_MODEL12ASM04,String)
            End If
            If (Original_MODEL12ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(263).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(264).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(263).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(264).Value = CType(Original_MODEL12ASM05,String)
            End If
            If (Original_MODEL13ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(265).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(266).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(265).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(266).Value = CType(Original_MODEL13ASM01,String)
            End If
            If (Original_MODEL13ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(268).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(268).Value = CType(Original_MODEL13ASM02,String)
            End If
            If (Original_MODEL13ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(269).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(270).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(269).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(270).Value = CType(Original_MODEL13ASM03,String)
            End If
            If (Original_MODEL13ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(271).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(272).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(271).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(272).Value = CType(Original_MODEL13ASM04,String)
            End If
            If (Original_MODEL13ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(273).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(274).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(273).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(274).Value = CType(Original_MODEL13ASM05,String)
            End If
            If (Original_MODEL14ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(275).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(276).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(275).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(276).Value = CType(Original_MODEL14ASM01,String)
            End If
            If (Original_MODEL14ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(277).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(278).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(277).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(278).Value = CType(Original_MODEL14ASM02,String)
            End If
            If (Original_MODEL14ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(279).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(280).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(279).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(280).Value = CType(Original_MODEL14ASM03,String)
            End If
            If (Original_MODEL14ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(281).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(282).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(281).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(282).Value = CType(Original_MODEL14ASM04,String)
            End If
            If (Original_MODEL14ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(283).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(284).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(283).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(284).Value = CType(Original_MODEL14ASM05,String)
            End If
            If (Original_MODEL15ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(285).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(286).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(285).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(286).Value = CType(Original_MODEL15ASM01,String)
            End If
            If (Original_MODEL15ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(287).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(288).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(287).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(288).Value = CType(Original_MODEL15ASM02,String)
            End If
            If (Original_MODEL15ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(289).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(290).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(289).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(290).Value = CType(Original_MODEL15ASM03,String)
            End If
            If (Original_MODEL15ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(291).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(292).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(291).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(292).Value = CType(Original_MODEL15ASM04,String)
            End If
            If (Original_MODEL15ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(293).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(294).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(293).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(294).Value = CType(Original_MODEL15ASM05,String)
            End If
            If (Original_MODEL16ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(295).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(296).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(295).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(296).Value = CType(Original_MODEL16ASM01,String)
            End If
            If (Original_MODEL16ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(297).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(298).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(297).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(298).Value = CType(Original_MODEL16ASM02,String)
            End If
            If (Original_MODEL16ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(299).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(300).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(299).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(300).Value = CType(Original_MODEL16ASM03,String)
            End If
            If (Original_MODEL16ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(301).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(302).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(301).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(302).Value = CType(Original_MODEL16ASM04,String)
            End If
            If (Original_MODEL16ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(303).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(304).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(303).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(304).Value = CType(Original_MODEL16ASM05,String)
            End If
            If (Original_MODEL17ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(305).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(306).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(305).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(306).Value = CType(Original_MODEL17ASM01,String)
            End If
            If (Original_MODEL17ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(307).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(308).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(307).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(308).Value = CType(Original_MODEL17ASM02,String)
            End If
            If (Original_MODEL17ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(309).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(310).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(309).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(310).Value = CType(Original_MODEL17ASM03,String)
            End If
            If (Original_MODEL17ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(311).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(312).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(311).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(312).Value = CType(Original_MODEL17ASM04,String)
            End If
            If (Original_MODEL17ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(313).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(314).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(313).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(314).Value = CType(Original_MODEL17ASM05,String)
            End If
            If (Original_MODEL18ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(315).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(316).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(315).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(316).Value = CType(Original_MODEL18ASM01,String)
            End If
            If (Original_MODEL18ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(317).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(318).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(317).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(318).Value = CType(Original_MODEL18ASM02,String)
            End If
            If (Original_MODEL18ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(319).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(320).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(319).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(320).Value = CType(Original_MODEL18ASM03,String)
            End If
            If (Original_MODEL18ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(321).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(322).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(321).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(322).Value = CType(Original_MODEL18ASM04,String)
            End If
            If (Original_MODEL18ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(323).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(324).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(323).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(324).Value = CType(Original_MODEL18ASM05,String)
            End If
            If (Original_MODEL19ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(325).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(326).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(325).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(326).Value = CType(Original_MODEL19ASM01,String)
            End If
            If (Original_MODEL19ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(327).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(328).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(327).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(328).Value = CType(Original_MODEL19ASM02,String)
            End If
            If (Original_MODEL19ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(329).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(330).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(329).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(330).Value = CType(Original_MODEL19ASM03,String)
            End If
            If (Original_MODEL19ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(331).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(332).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(331).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(332).Value = CType(Original_MODEL19ASM04,String)
            End If
            If (Original_MODEL19ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(333).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(334).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(333).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(334).Value = CType(Original_MODEL19ASM05,String)
            End If
            If (Original_MODEL20ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(335).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(336).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(335).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(336).Value = CType(Original_MODEL20ASM01,String)
            End If
            If (Original_MODEL20ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(337).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(338).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(337).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(338).Value = CType(Original_MODEL20ASM02,String)
            End If
            If (Original_MODEL20ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(339).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(340).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(339).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(340).Value = CType(Original_MODEL20ASM03,String)
            End If
            If (Original_MODEL20ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(341).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(342).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(341).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(342).Value = CType(Original_MODEL20ASM04,String)
            End If
            If (Original_MODEL20ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(343).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(344).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(343).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(344).Value = CType(Original_MODEL20ASM05,String)
            End If
            If (Original_Reserve01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(345).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(346).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(345).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(346).Value = CType(Original_Reserve01,String)
            End If
            If (Original_Reserve02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(347).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(348).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(347).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(348).Value = CType(Original_Reserve02,String)
            End If
            If (Original_SubSeq.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(349).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(350).Value = CType(Original_SubSeq.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(349).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(350).Value = Global.System.DBNull.Value
            End If
            If (Original_XchgFlag Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(351).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(352).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(351).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(352).Value = CType(Original_XchgFlag,String)
            End If
            If (Original_InstructFlag.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(353).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(354).Value = CType(Original_InstructFlag.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(353).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(354).Value = Global.System.DBNull.Value
            End If
            If (Original_FileName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(355).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(356).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(355).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(356).Value = CType(Original_FileName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SeqNo As String,  _
                    ByVal LotID As String,  _
                    ByVal BlockModel As String,  _
                    ByVal BlockSeq As String,  _
                    ByVal MARK As String,  _
                    ByVal ProductionDate As String,  _
                    ByVal ProductionTime As String,  _
                    ByVal ImportCode As String,  _
                    ByVal YChassisFlag As String,  _
                    ByVal GAShop As String,  _
                    ByVal HanmmerYears As String,  _
                    ByVal MODEL01ASM01 As String,  _
                    ByVal MODEL01ASM02 As String,  _
                    ByVal MODEL01ASM03 As String,  _
                    ByVal MODEL01ASM04 As String,  _
                    ByVal MODEL01ASM05 As String,  _
                    ByVal MODEL02ASM01 As String,  _
                    ByVal MODEL02ASM02 As String,  _
                    ByVal MODEL02ASM03 As String,  _
                    ByVal MODEL02ASM04 As String,  _
                    ByVal MODEL02ASM05 As String,  _
                    ByVal MODEL03ASM01 As String,  _
                    ByVal MODEL03ASM02 As String,  _
                    ByVal MODEL03ASM03 As String,  _
                    ByVal MODEL03ASM04 As String,  _
                    ByVal MODEL03ASM05 As String,  _
                    ByVal MODEL04ASM01 As String,  _
                    ByVal MODEL04ASM02 As String,  _
                    ByVal MODEL04ASM03 As String,  _
                    ByVal MODEL04ASM04 As String,  _
                    ByVal MODEL04ASM05 As String,  _
                    ByVal MODEL05ASM01 As String,  _
                    ByVal MODEL05ASM02 As String,  _
                    ByVal MODEL05ASM03 As String,  _
                    ByVal MODEL05ASM04 As String,  _
                    ByVal MODEL05ASM05 As String,  _
                    ByVal MODEL06ASM01 As String,  _
                    ByVal MODEL06ASM02 As String,  _
                    ByVal MODEL06ASM03 As String,  _
                    ByVal MODEL06ASM04 As String,  _
                    ByVal MODEL06ASM05 As String,  _
                    ByVal MODEL07ASM01 As String,  _
                    ByVal MODEL07ASM02 As String,  _
                    ByVal MODEL07ASM03 As String,  _
                    ByVal MODEL07ASM04 As String,  _
                    ByVal MODEL07ASM05 As String,  _
                    ByVal MODEL08ASM01 As String,  _
                    ByVal MODEL08ASM02 As String,  _
                    ByVal MODEL08ASM03 As String,  _
                    ByVal MODEL08ASM04 As String,  _
                    ByVal MODEL08ASM05 As String,  _
                    ByVal MODEL09ASM01 As String,  _
                    ByVal MODEL09ASM02 As String,  _
                    ByVal MODEL09ASM03 As String,  _
                    ByVal MODEL09ASM04 As String,  _
                    ByVal MODEL09ASM05 As String,  _
                    ByVal MODEL10ASM01 As String,  _
                    ByVal MODEL10ASM02 As String,  _
                    ByVal MODEL10ASM03 As String,  _
                    ByVal MODEL10ASM04 As String,  _
                    ByVal MODEL10ASM05 As String,  _
                    ByVal MODEL11ASM01 As String,  _
                    ByVal MODEL11ASM02 As String,  _
                    ByVal MODEL11ASM03 As String,  _
                    ByVal MODEL11ASM04 As String,  _
                    ByVal MODEL11ASM05 As String,  _
                    ByVal MODEL12ASM01 As String,  _
                    ByVal MODEL12ASM02 As String,  _
                    ByVal MODEL12ASM03 As String,  _
                    ByVal MODEL12ASM04 As String,  _
                    ByVal MODEL12ASM05 As String,  _
                    ByVal MODEL13ASM01 As String,  _
                    ByVal MODEL13ASM02 As String,  _
                    ByVal MODEL13ASM03 As String,  _
                    ByVal MODEL13ASM04 As String,  _
                    ByVal MODEL13ASM05 As String,  _
                    ByVal MODEL14ASM01 As String,  _
                    ByVal MODEL14ASM02 As String,  _
                    ByVal MODEL14ASM03 As String,  _
                    ByVal MODEL14ASM04 As String,  _
                    ByVal MODEL14ASM05 As String,  _
                    ByVal MODEL15ASM01 As String,  _
                    ByVal MODEL15ASM02 As String,  _
                    ByVal MODEL15ASM03 As String,  _
                    ByVal MODEL15ASM04 As String,  _
                    ByVal MODEL15ASM05 As String,  _
                    ByVal MODEL16ASM01 As String,  _
                    ByVal MODEL16ASM02 As String,  _
                    ByVal MODEL16ASM03 As String,  _
                    ByVal MODEL16ASM04 As String,  _
                    ByVal MODEL16ASM05 As String,  _
                    ByVal MODEL17ASM01 As String,  _
                    ByVal MODEL17ASM02 As String,  _
                    ByVal MODEL17ASM03 As String,  _
                    ByVal MODEL17ASM04 As String,  _
                    ByVal MODEL17ASM05 As String,  _
                    ByVal MODEL18ASM01 As String,  _
                    ByVal MODEL18ASM02 As String,  _
                    ByVal MODEL18ASM03 As String,  _
                    ByVal MODEL18ASM04 As String,  _
                    ByVal MODEL18ASM05 As String,  _
                    ByVal MODEL19ASM01 As String,  _
                    ByVal MODEL19ASM02 As String,  _
                    ByVal MODEL19ASM03 As String,  _
                    ByVal MODEL19ASM04 As String,  _
                    ByVal MODEL19ASM05 As String,  _
                    ByVal MODEL20ASM01 As String,  _
                    ByVal MODEL20ASM02 As String,  _
                    ByVal MODEL20ASM03 As String,  _
                    ByVal MODEL20ASM04 As String,  _
                    ByVal MODEL20ASM05 As String,  _
                    ByVal Reserve01 As String,  _
                    ByVal Reserve02 As String,  _
                    ByVal SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal XchgFlag As String,  _
                    ByVal InstructFlag As Global.System.Nullable(Of Integer),  _
                    ByVal FileName As String,  _
                    ByVal Original_SeqNo As String,  _
                    ByVal Original_ModelYear As String,  _
                    ByVal Original_SuffixCode As String,  _
                    ByVal Original_LotID As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_Unit As String,  _
                    ByVal Original_BlockModel As String,  _
                    ByVal Original_BlockSeq As String,  _
                    ByVal Original_MARK As String,  _
                    ByVal Original_ProductionDate As String,  _
                    ByVal Original_ProductionTime As String,  _
                    ByVal Original_ImportCode As String,  _
                    ByVal Original_YChassisFlag As String,  _
                    ByVal Original_GAShop As String,  _
                    ByVal Original_HanmmerYears As String,  _
                    ByVal Original_MODEL01ASM01 As String,  _
                    ByVal Original_MODEL01ASM02 As String,  _
                    ByVal Original_MODEL01ASM03 As String,  _
                    ByVal Original_MODEL01ASM04 As String,  _
                    ByVal Original_MODEL01ASM05 As String,  _
                    ByVal Original_MODEL02ASM01 As String,  _
                    ByVal Original_MODEL02ASM02 As String,  _
                    ByVal Original_MODEL02ASM03 As String,  _
                    ByVal Original_MODEL02ASM04 As String,  _
                    ByVal Original_MODEL02ASM05 As String,  _
                    ByVal Original_MODEL03ASM01 As String,  _
                    ByVal Original_MODEL03ASM02 As String,  _
                    ByVal Original_MODEL03ASM03 As String,  _
                    ByVal Original_MODEL03ASM04 As String,  _
                    ByVal Original_MODEL03ASM05 As String,  _
                    ByVal Original_MODEL04ASM01 As String,  _
                    ByVal Original_MODEL04ASM02 As String,  _
                    ByVal Original_MODEL04ASM03 As String,  _
                    ByVal Original_MODEL04ASM04 As String,  _
                    ByVal Original_MODEL04ASM05 As String,  _
                    ByVal Original_MODEL05ASM01 As String,  _
                    ByVal Original_MODEL05ASM02 As String,  _
                    ByVal Original_MODEL05ASM03 As String,  _
                    ByVal Original_MODEL05ASM04 As String,  _
                    ByVal Original_MODEL05ASM05 As String,  _
                    ByVal Original_MODEL06ASM01 As String,  _
                    ByVal Original_MODEL06ASM02 As String,  _
                    ByVal Original_MODEL06ASM03 As String,  _
                    ByVal Original_MODEL06ASM04 As String,  _
                    ByVal Original_MODEL06ASM05 As String,  _
                    ByVal Original_MODEL07ASM01 As String,  _
                    ByVal Original_MODEL07ASM02 As String,  _
                    ByVal Original_MODEL07ASM03 As String,  _
                    ByVal Original_MODEL07ASM04 As String,  _
                    ByVal Original_MODEL07ASM05 As String,  _
                    ByVal Original_MODEL08ASM01 As String,  _
                    ByVal Original_MODEL08ASM02 As String,  _
                    ByVal Original_MODEL08ASM03 As String,  _
                    ByVal Original_MODEL08ASM04 As String,  _
                    ByVal Original_MODEL08ASM05 As String,  _
                    ByVal Original_MODEL09ASM01 As String,  _
                    ByVal Original_MODEL09ASM02 As String,  _
                    ByVal Original_MODEL09ASM03 As String,  _
                    ByVal Original_MODEL09ASM04 As String,  _
                    ByVal Original_MODEL09ASM05 As String,  _
                    ByVal Original_MODEL10ASM01 As String,  _
                    ByVal Original_MODEL10ASM02 As String,  _
                    ByVal Original_MODEL10ASM03 As String,  _
                    ByVal Original_MODEL10ASM04 As String,  _
                    ByVal Original_MODEL10ASM05 As String,  _
                    ByVal Original_MODEL11ASM01 As String,  _
                    ByVal Original_MODEL11ASM02 As String,  _
                    ByVal Original_MODEL11ASM03 As String,  _
                    ByVal Original_MODEL11ASM04 As String,  _
                    ByVal Original_MODEL11ASM05 As String,  _
                    ByVal Original_MODEL12ASM01 As String,  _
                    ByVal Original_MODEL12ASM02 As String,  _
                    ByVal Original_MODEL12ASM03 As String,  _
                    ByVal Original_MODEL12ASM04 As String,  _
                    ByVal Original_MODEL12ASM05 As String,  _
                    ByVal Original_MODEL13ASM01 As String,  _
                    ByVal Original_MODEL13ASM02 As String,  _
                    ByVal Original_MODEL13ASM03 As String,  _
                    ByVal Original_MODEL13ASM04 As String,  _
                    ByVal Original_MODEL13ASM05 As String,  _
                    ByVal Original_MODEL14ASM01 As String,  _
                    ByVal Original_MODEL14ASM02 As String,  _
                    ByVal Original_MODEL14ASM03 As String,  _
                    ByVal Original_MODEL14ASM04 As String,  _
                    ByVal Original_MODEL14ASM05 As String,  _
                    ByVal Original_MODEL15ASM01 As String,  _
                    ByVal Original_MODEL15ASM02 As String,  _
                    ByVal Original_MODEL15ASM03 As String,  _
                    ByVal Original_MODEL15ASM04 As String,  _
                    ByVal Original_MODEL15ASM05 As String,  _
                    ByVal Original_MODEL16ASM01 As String,  _
                    ByVal Original_MODEL16ASM02 As String,  _
                    ByVal Original_MODEL16ASM03 As String,  _
                    ByVal Original_MODEL16ASM04 As String,  _
                    ByVal Original_MODEL16ASM05 As String,  _
                    ByVal Original_MODEL17ASM01 As String,  _
                    ByVal Original_MODEL17ASM02 As String,  _
                    ByVal Original_MODEL17ASM03 As String,  _
                    ByVal Original_MODEL17ASM04 As String,  _
                    ByVal Original_MODEL17ASM05 As String,  _
                    ByVal Original_MODEL18ASM01 As String,  _
                    ByVal Original_MODEL18ASM02 As String,  _
                    ByVal Original_MODEL18ASM03 As String,  _
                    ByVal Original_MODEL18ASM04 As String,  _
                    ByVal Original_MODEL18ASM05 As String,  _
                    ByVal Original_MODEL19ASM01 As String,  _
                    ByVal Original_MODEL19ASM02 As String,  _
                    ByVal Original_MODEL19ASM03 As String,  _
                    ByVal Original_MODEL19ASM04 As String,  _
                    ByVal Original_MODEL19ASM05 As String,  _
                    ByVal Original_MODEL20ASM01 As String,  _
                    ByVal Original_MODEL20ASM02 As String,  _
                    ByVal Original_MODEL20ASM03 As String,  _
                    ByVal Original_MODEL20ASM04 As String,  _
                    ByVal Original_MODEL20ASM05 As String,  _
                    ByVal Original_Reserve01 As String,  _
                    ByVal Original_Reserve02 As String,  _
                    ByVal Original_SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal Original_XchgFlag As String,  _
                    ByVal Original_InstructFlag As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FileName As String) As Integer
            Return Me.Update(SeqNo, Original_ModelYear, Original_SuffixCode, LotID, Original_LotNo, Original_Unit, BlockModel, BlockSeq, MARK, ProductionDate, ProductionTime, ImportCode, YChassisFlag, GAShop, HanmmerYears, MODEL01ASM01, MODEL01ASM02, MODEL01ASM03, MODEL01ASM04, MODEL01ASM05, MODEL02ASM01, MODEL02ASM02, MODEL02ASM03, MODEL02ASM04, MODEL02ASM05, MODEL03ASM01, MODEL03ASM02, MODEL03ASM03, MODEL03ASM04, MODEL03ASM05, MODEL04ASM01, MODEL04ASM02, MODEL04ASM03, MODEL04ASM04, MODEL04ASM05, MODEL05ASM01, MODEL05ASM02, MODEL05ASM03, MODEL05ASM04, MODEL05ASM05, MODEL06ASM01, MODEL06ASM02, MODEL06ASM03, MODEL06ASM04, MODEL06ASM05, MODEL07ASM01, MODEL07ASM02, MODEL07ASM03, MODEL07ASM04, MODEL07ASM05, MODEL08ASM01, MODEL08ASM02, MODEL08ASM03, MODEL08ASM04, MODEL08ASM05, MODEL09ASM01, MODEL09ASM02, MODEL09ASM03, MODEL09ASM04, MODEL09ASM05, MODEL10ASM01, MODEL10ASM02, MODEL10ASM03, MODEL10ASM04, MODEL10ASM05, MODEL11ASM01, MODEL11ASM02, MODEL11ASM03, MODEL11ASM04, MODEL11ASM05, MODEL12ASM01, MODEL12ASM02, MODEL12ASM03, MODEL12ASM04, MODEL12ASM05, MODEL13ASM01, MODEL13ASM02, MODEL13ASM03, MODEL13ASM04, MODEL13ASM05, MODEL14ASM01, MODEL14ASM02, MODEL14ASM03, MODEL14ASM04, MODEL14ASM05, MODEL15ASM01, MODEL15ASM02, MODEL15ASM03, MODEL15ASM04, MODEL15ASM05, MODEL16ASM01, MODEL16ASM02, MODEL16ASM03, MODEL16ASM04, MODEL16ASM05, MODEL17ASM01, MODEL17ASM02, MODEL17ASM03, MODEL17ASM04, MODEL17ASM05, MODEL18ASM01, MODEL18ASM02, MODEL18ASM03, MODEL18ASM04, MODEL18ASM05, MODEL19ASM01, MODEL19ASM02, MODEL19ASM03, MODEL19ASM04, MODEL19ASM05, MODEL20ASM01, MODEL20ASM02, MODEL20ASM03, MODEL20ASM04, MODEL20ASM05, Reserve01, Reserve02, SubSeq, XchgFlag, InstructFlag, FileName, Original_SeqNo, Original_ModelYear, Original_SuffixCode, Original_LotID, Original_LotNo, Original_Unit, Original_BlockModel, Original_BlockSeq, Original_MARK, Original_ProductionDate, Original_ProductionTime, Original_ImportCode, Original_YChassisFlag, Original_GAShop, Original_HanmmerYears, Original_MODEL01ASM01, Original_MODEL01ASM02, Original_MODEL01ASM03, Original_MODEL01ASM04, Original_MODEL01ASM05, Original_MODEL02ASM01, Original_MODEL02ASM02, Original_MODEL02ASM03, Original_MODEL02ASM04, Original_MODEL02ASM05, Original_MODEL03ASM01, Original_MODEL03ASM02, Original_MODEL03ASM03, Original_MODEL03ASM04, Original_MODEL03ASM05, Original_MODEL04ASM01, Original_MODEL04ASM02, Original_MODEL04ASM03, Original_MODEL04ASM04, Original_MODEL04ASM05, Original_MODEL05ASM01, Original_MODEL05ASM02, Original_MODEL05ASM03, Original_MODEL05ASM04, Original_MODEL05ASM05, Original_MODEL06ASM01, Original_MODEL06ASM02, Original_MODEL06ASM03, Original_MODEL06ASM04, Original_MODEL06ASM05, Original_MODEL07ASM01, Original_MODEL07ASM02, Original_MODEL07ASM03, Original_MODEL07ASM04, Original_MODEL07ASM05, Original_MODEL08ASM01, Original_MODEL08ASM02, Original_MODEL08ASM03, Original_MODEL08ASM04, Original_MODEL08ASM05, Original_MODEL09ASM01, Original_MODEL09ASM02, Original_MODEL09ASM03, Original_MODEL09ASM04, Original_MODEL09ASM05, Original_MODEL10ASM01, Original_MODEL10ASM02, Original_MODEL10ASM03, Original_MODEL10ASM04, Original_MODEL10ASM05, Original_MODEL11ASM01, Original_MODEL11ASM02, Original_MODEL11ASM03, Original_MODEL11ASM04, Original_MODEL11ASM05, Original_MODEL12ASM01, Original_MODEL12ASM02, Original_MODEL12ASM03, Original_MODEL12ASM04, Original_MODEL12ASM05, Original_MODEL13ASM01, Original_MODEL13ASM02, Original_MODEL13ASM03, Original_MODEL13ASM04, Original_MODEL13ASM05, Original_MODEL14ASM01, Original_MODEL14ASM02, Original_MODEL14ASM03, Original_MODEL14ASM04, Original_MODEL14ASM05, Original_MODEL15ASM01, Original_MODEL15ASM02, Original_MODEL15ASM03, Original_MODEL15ASM04, Original_MODEL15ASM05, Original_MODEL16ASM01, Original_MODEL16ASM02, Original_MODEL16ASM03, Original_MODEL16ASM04, Original_MODEL16ASM05, Original_MODEL17ASM01, Original_MODEL17ASM02, Original_MODEL17ASM03, Original_MODEL17ASM04, Original_MODEL17ASM05, Original_MODEL18ASM01, Original_MODEL18ASM02, Original_MODEL18ASM03, Original_MODEL18ASM04, Original_MODEL18ASM05, Original_MODEL19ASM01, Original_MODEL19ASM02, Original_MODEL19ASM03, Original_MODEL19ASM04, Original_MODEL19ASM05, Original_MODEL20ASM01, Original_MODEL20ASM02, Original_MODEL20ASM03, Original_MODEL20ASM04, Original_MODEL20ASM05, Original_Reserve01, Original_Reserve02, Original_SubSeq, Original_XchgFlag, Original_InstructFlag, Original_FileName)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteByPrimaryKey(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                command.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                command.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                command.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                command.Parameters(3).Value = CType(pUnit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteBySkipBlockModel(ByVal pBlockModel As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (pBlockModel Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(pBlockModel,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteBySkipModelYearSuffixLotNo(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                command.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                command.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                command.Parameters(2).Value = CType(pLotNo,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetOffsetBase(ByVal ProductionDate As String, ByVal ProductionTime As String, ByVal SeqNo As String, ByVal SubSeq As Integer) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(21)
            If (ProductionDate Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ProductionTime")
            Else
                command.Parameters(1).Value = CType(ProductionTime,String)
            End If
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                command.Parameters(2).Value = CType(SeqNo,String)
            End If
            command.Parameters(3).Value = CType(SubSeq,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateDataForInspIn(ByVal ProductionDate As String, ByVal ProductionTime As String, ByVal SeqNo As String, ByVal pSubSeq As Global.System.Nullable(Of Integer), ByVal pXchgFlag As String, ByVal pInstructFlag As Global.System.Nullable(Of Integer), ByVal ModelYear As String, ByVal SuffixCode As String, ByVal LotNo As String, ByVal Unit As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(22)
            If (ProductionDate Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(ProductionTime,String)
            End If
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                command.Parameters(2).Value = CType(SeqNo,String)
            End If
            If (pSubSeq.HasValue = true) Then
                command.Parameters(3).Value = CType(pSubSeq.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (pXchgFlag Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(pXchgFlag,String)
            End If
            If (pInstructFlag.HasValue = true) Then
                command.Parameters(5).Value = CType(pInstructFlag.Value,Integer)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (ModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ModelYear")
            Else
                command.Parameters(6).Value = CType(ModelYear,String)
            End If
            If (SuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SuffixCode")
            Else
                command.Parameters(7).Value = CType(SuffixCode,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                command.Parameters(8).Value = CType(LotNo,String)
            End If
            If (Unit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Unit")
            Else
                command.Parameters(9).Value = CType(Unit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateInstructFlagByPK(ByVal InstructFlag As Global.System.Nullable(Of Integer), ByVal ModelYear As String, ByVal SuffixCode As String, ByVal LotNo As String, ByVal Unit As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(23)
            If (InstructFlag.HasValue = true) Then
                command.Parameters(0).Value = CType(InstructFlag.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (ModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ModelYear")
            Else
                command.Parameters(1).Value = CType(ModelYear,String)
            End If
            If (SuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SuffixCode")
            Else
                command.Parameters(2).Value = CType(SuffixCode,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                command.Parameters(3).Value = CType(LotNo,String)
            End If
            If (Unit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Unit")
            Else
                command.Parameters(4).Value = CType(Unit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateSkipDataByBlock(ByVal pBlockModel As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(24)
            If (pBlockModel Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(pBlockModel,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateSkipDataByModelYearSuffixLot(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(25)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                command.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                command.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                command.Parameters(2).Value = CType(pLotNo,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateSkipDataByPrimaryKey(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(26)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                command.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                command.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                command.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                command.Parameters(3).Value = CType(pUnit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class T_Instruction_DATTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "T_Instruction_DAT"
            tableMapping.ColumnMappings.Add("SeqNo", "SeqNo")
            tableMapping.ColumnMappings.Add("ModelYear", "ModelYear")
            tableMapping.ColumnMappings.Add("SuffixCode", "SuffixCode")
            tableMapping.ColumnMappings.Add("LotID", "LotID")
            tableMapping.ColumnMappings.Add("LotNo", "LotNo")
            tableMapping.ColumnMappings.Add("Unit", "Unit")
            tableMapping.ColumnMappings.Add("BlockModel", "BlockModel")
            tableMapping.ColumnMappings.Add("BlockSeq", "BlockSeq")
            tableMapping.ColumnMappings.Add("MARK", "MARK")
            tableMapping.ColumnMappings.Add("ProductionDate", "ProductionDate")
            tableMapping.ColumnMappings.Add("ProductionTime", "ProductionTime")
            tableMapping.ColumnMappings.Add("ImportCode", "ImportCode")
            tableMapping.ColumnMappings.Add("YChassisFlag", "YChassisFlag")
            tableMapping.ColumnMappings.Add("GAShop", "GAShop")
            tableMapping.ColumnMappings.Add("HanmmerYears", "HanmmerYears")
            tableMapping.ColumnMappings.Add("ASM01", "ASM01")
            tableMapping.ColumnMappings.Add("ASM02", "ASM02")
            tableMapping.ColumnMappings.Add("ASM03", "ASM03")
            tableMapping.ColumnMappings.Add("ASM04", "ASM04")
            tableMapping.ColumnMappings.Add("ASM05", "ASM05")
            tableMapping.ColumnMappings.Add("XchgFlag", "XchgFlag")
            tableMapping.ColumnMappings.Add("InsResult", "InsResult")
            tableMapping.ColumnMappings.Add("InsPassFlag", "InsPassFlag")
            tableMapping.ColumnMappings.Add("Line_No", "Line_No")
            tableMapping.ColumnMappings.Add("CarrResult", "CarrResult")
            tableMapping.ColumnMappings.Add("CarrPassFlag", "CarrPassFlag")
            tableMapping.ColumnMappings.Add("SubSeq", "SubSeq")
            tableMapping.ColumnMappings.Add("BelowDelFlag", "BelowDelFlag")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [T_Instruction_DAT] WHERE (([SeqNo] = @Original_SeqNo) AND ([ModelYea"& _ 
                "r] = @Original_ModelYear) AND ([SuffixCode] = @Original_SuffixCode) AND ([LotID]"& _ 
                " = @Original_LotID) AND ([LotNo] = @Original_LotNo) AND ([Unit] = @Original_Unit"& _ 
                ") AND ((@IsNull_BlockModel = 1 AND [BlockModel] IS NULL) OR ([BlockModel] = @Ori"& _ 
                "ginal_BlockModel)) AND ((@IsNull_BlockSeq = 1 AND [BlockSeq] IS NULL) OR ([Block"& _ 
                "Seq] = @Original_BlockSeq)) AND ((@IsNull_MARK = 1 AND [MARK] IS NULL) OR ([MARK"& _ 
                "] = @Original_MARK)) AND ((@IsNull_ProductionDate = 1 AND [ProductionDate] IS NU"& _ 
                "LL) OR ([ProductionDate] = @Original_ProductionDate)) AND ((@IsNull_ProductionTi"& _ 
                "me = 1 AND [ProductionTime] IS NULL) OR ([ProductionTime] = @Original_Production"& _ 
                "Time)) AND ((@IsNull_ImportCode = 1 AND [ImportCode] IS NULL) OR ([ImportCode] ="& _ 
                " @Original_ImportCode)) AND ((@IsNull_YChassisFlag = 1 AND [YChassisFlag] IS NUL"& _ 
                "L) OR ([YChassisFlag] = @Original_YChassisFlag)) AND ((@IsNull_GAShop = 1 AND [G"& _ 
                "AShop] IS NULL) OR ([GAShop] = @Original_GAShop)) AND ((@IsNull_HanmmerYears = 1"& _ 
                " AND [HanmmerYears] IS NULL) OR ([HanmmerYears] = @Original_HanmmerYears)) AND ("& _ 
                "(@IsNull_ASM01 = 1 AND [ASM01] IS NULL) OR ([ASM01] = @Original_ASM01)) AND ((@I"& _ 
                "sNull_ASM02 = 1 AND [ASM02] IS NULL) OR ([ASM02] = @Original_ASM02)) AND ((@IsNu"& _ 
                "ll_ASM03 = 1 AND [ASM03] IS NULL) OR ([ASM03] = @Original_ASM03)) AND ((@IsNull_"& _ 
                "ASM04 = 1 AND [ASM04] IS NULL) OR ([ASM04] = @Original_ASM04)) AND ((@IsNull_ASM"& _ 
                "05 = 1 AND [ASM05] IS NULL) OR ([ASM05] = @Original_ASM05)) AND ((@IsNull_XchgFl"& _ 
                "ag = 1 AND [XchgFlag] IS NULL) OR ([XchgFlag] = @Original_XchgFlag)) AND ((@IsNu"& _ 
                "ll_InsResult = 1 AND [InsResult] IS NULL) OR ([InsResult] = @Original_InsResult)"& _ 
                ") AND ([InsPassFlag] = @Original_InsPassFlag) AND ([Line_No] = @Original_Line_No"& _ 
                ") AND ((@IsNull_CarrResult = 1 AND [CarrResult] IS NULL) OR ([CarrResult] = @Ori"& _ 
                "ginal_CarrResult)) AND ([CarrPassFlag] = @Original_CarrPassFlag) AND ((@IsNull_S"& _ 
                "ubSeq = 1 AND [SubSeq] IS NULL) OR ([SubSeq] = @Original_SubSeq)) AND ((@IsNull_"& _ 
                "BelowDelFlag = 1 AND [BelowDelFlag] IS NULL) OR ([BelowDelFlag] = @Original_Belo"& _ 
                "wDelFlag)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SeqNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModelYear", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SuffixCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Unit", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BlockModel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BlockModel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BlockSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BlockSeq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MARK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MARK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProductionDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProductionDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProductionTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProductionTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ImportCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ImportCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YChassisFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YChassisFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GAShop", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GAShop", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HanmmerYears", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HanmmerYears", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_XchgFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_XchgFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InsResult", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsResult", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InsResult", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsResult", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InsPassFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsPassFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Line_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CarrResult", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CarrResult", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CarrResult", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CarrResult", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CarrPassFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CarrPassFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BelowDelFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BelowDelFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BelowDelFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BelowDelFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [T_Instruction_DAT] ([SeqNo], [ModelYear], [SuffixCode], [LotID], [Lo"& _ 
                "tNo], [Unit], [BlockModel], [BlockSeq], [MARK], [ProductionDate], [ProductionTim"& _ 
                "e], [ImportCode], [YChassisFlag], [GAShop], [HanmmerYears], [ASM01], [ASM02], [A"& _ 
                "SM03], [ASM04], [ASM05], [XchgFlag], [InsResult], [InsPassFlag], [Line_No], [Car"& _ 
                "rResult], [CarrPassFlag], [SubSeq], [BelowDelFlag]) VALUES (@SeqNo, @ModelYear, "& _ 
                "@SuffixCode, @LotID, @LotNo, @Unit, @BlockModel, @BlockSeq, @MARK, @ProductionDa"& _ 
                "te, @ProductionTime, @ImportCode, @YChassisFlag, @GAShop, @HanmmerYears, @ASM01,"& _ 
                " @ASM02, @ASM03, @ASM04, @ASM05, @XchgFlag, @InsResult, @InsPassFlag, @Line_No, "& _ 
                "@CarrResult, @CarrPassFlag, @SubSeq, @BelowDelFlag);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SeqNo, ModelYear, S"& _ 
                "uffixCode, LotID, LotNo, Unit, BlockModel, BlockSeq, MARK, ProductionDate, Produ"& _ 
                "ctionTime, ImportCode, YChassisFlag, GAShop, HanmmerYears, ASM01, ASM02, ASM03, "& _ 
                "ASM04, ASM05, XchgFlag, InsResult, InsPassFlag, Line_No, CarrResult, CarrPassFla"& _ 
                "g, SubSeq, BelowDelFlag FROM T_Instruction_DAT WHERE (Line_No = @Line_No) AND (L"& _ 
                "otNo = @LotNo) AND (ModelYear = @ModelYear) AND (SuffixCode = @SuffixCode) AND ("& _ 
                "Unit = @Unit)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModelYear", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SuffixCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Unit", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlockModel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlockSeq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MARK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ImportCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YChassisFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GAShop", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HanmmerYears", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XchgFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsResult", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsResult", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsPassFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsPassFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Line_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CarrResult", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CarrResult", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CarrPassFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CarrPassFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BelowDelFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BelowDelFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [T_Instruction_DAT] SET [SeqNo] = @SeqNo, [ModelYear] = @ModelYear, [Suffi"& _ 
                "xCode] = @SuffixCode, [LotID] = @LotID, [LotNo] = @LotNo, [Unit] = @Unit, [Block"& _ 
                "Model] = @BlockModel, [BlockSeq] = @BlockSeq, [MARK] = @MARK, [ProductionDate] ="& _ 
                " @ProductionDate, [ProductionTime] = @ProductionTime, [ImportCode] = @ImportCode"& _ 
                ", [YChassisFlag] = @YChassisFlag, [GAShop] = @GAShop, [HanmmerYears] = @HanmmerY"& _ 
                "ears, [ASM01] = @ASM01, [ASM02] = @ASM02, [ASM03] = @ASM03, [ASM04] = @ASM04, [A"& _ 
                "SM05] = @ASM05, [XchgFlag] = @XchgFlag, [InsResult] = @InsResult, [InsPassFlag] "& _ 
                "= @InsPassFlag, [Line_No] = @Line_No, [CarrResult] = @CarrResult, [CarrPassFlag]"& _ 
                " = @CarrPassFlag, [SubSeq] = @SubSeq, [BelowDelFlag] = @BelowDelFlag WHERE (([Se"& _ 
                "qNo] = @Original_SeqNo) AND ([ModelYear] = @Original_ModelYear) AND ([SuffixCode"& _ 
                "] = @Original_SuffixCode) AND ([LotID] = @Original_LotID) AND ([LotNo] = @Origin"& _ 
                "al_LotNo) AND ([Unit] = @Original_Unit) AND ((@IsNull_BlockModel = 1 AND [BlockM"& _ 
                "odel] IS NULL) OR ([BlockModel] = @Original_BlockModel)) AND ((@IsNull_BlockSeq "& _ 
                "= 1 AND [BlockSeq] IS NULL) OR ([BlockSeq] = @Original_BlockSeq)) AND ((@IsNull_"& _ 
                "MARK = 1 AND [MARK] IS NULL) OR ([MARK] = @Original_MARK)) AND ((@IsNull_Product"& _ 
                "ionDate = 1 AND [ProductionDate] IS NULL) OR ([ProductionDate] = @Original_Produ"& _ 
                "ctionDate)) AND ((@IsNull_ProductionTime = 1 AND [ProductionTime] IS NULL) OR (["& _ 
                "ProductionTime] = @Original_ProductionTime)) AND ((@IsNull_ImportCode = 1 AND [I"& _ 
                "mportCode] IS NULL) OR ([ImportCode] = @Original_ImportCode)) AND ((@IsNull_YCha"& _ 
                "ssisFlag = 1 AND [YChassisFlag] IS NULL) OR ([YChassisFlag] = @Original_YChassis"& _ 
                "Flag)) AND ((@IsNull_GAShop = 1 AND [GAShop] IS NULL) OR ([GAShop] = @Original_G"& _ 
                "AShop)) AND ((@IsNull_HanmmerYears = 1 AND [HanmmerYears] IS NULL) OR ([HanmmerY"& _ 
                "ears] = @Original_HanmmerYears)) AND ((@IsNull_ASM01 = 1 AND [ASM01] IS NULL) OR"& _ 
                " ([ASM01] = @Original_ASM01)) AND ((@IsNull_ASM02 = 1 AND [ASM02] IS NULL) OR (["& _ 
                "ASM02] = @Original_ASM02)) AND ((@IsNull_ASM03 = 1 AND [ASM03] IS NULL) OR ([ASM"& _ 
                "03] = @Original_ASM03)) AND ((@IsNull_ASM04 = 1 AND [ASM04] IS NULL) OR ([ASM04]"& _ 
                " = @Original_ASM04)) AND ((@IsNull_ASM05 = 1 AND [ASM05] IS NULL) OR ([ASM05] = "& _ 
                "@Original_ASM05)) AND ((@IsNull_XchgFlag = 1 AND [XchgFlag] IS NULL) OR ([XchgFl"& _ 
                "ag] = @Original_XchgFlag)) AND ((@IsNull_InsResult = 1 AND [InsResult] IS NULL) "& _ 
                "OR ([InsResult] = @Original_InsResult)) AND ([InsPassFlag] = @Original_InsPassFl"& _ 
                "ag) AND ([Line_No] = @Original_Line_No) AND ((@IsNull_CarrResult = 1 AND [CarrRe"& _ 
                "sult] IS NULL) OR ([CarrResult] = @Original_CarrResult)) AND ([CarrPassFlag] = @"& _ 
                "Original_CarrPassFlag) AND ((@IsNull_SubSeq = 1 AND [SubSeq] IS NULL) OR ([SubSe"& _ 
                "q] = @Original_SubSeq)) AND ((@IsNull_BelowDelFlag = 1 AND [BelowDelFlag] IS NUL"& _ 
                "L) OR ([BelowDelFlag] = @Original_BelowDelFlag)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SeqNo, ModelYear, Suf"& _ 
                "fixCode, LotID, LotNo, Unit, BlockModel, BlockSeq, MARK, ProductionDate, Product"& _ 
                "ionTime, ImportCode, YChassisFlag, GAShop, HanmmerYears, ASM01, ASM02, ASM03, AS"& _ 
                "M04, ASM05, XchgFlag, InsResult, InsPassFlag, Line_No, CarrResult, CarrPassFlag,"& _ 
                " SubSeq, BelowDelFlag FROM T_Instruction_DAT WHERE (Line_No = @Line_No) AND (Lot"& _ 
                "No = @LotNo) AND (ModelYear = @ModelYear) AND (SuffixCode = @SuffixCode) AND (Un"& _ 
                "it = @Unit)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModelYear", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SuffixCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Unit", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlockModel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlockSeq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MARK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ImportCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YChassisFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GAShop", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HanmmerYears", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XchgFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsResult", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsResult", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsPassFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsPassFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Line_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CarrResult", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CarrResult", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CarrPassFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CarrPassFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BelowDelFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BelowDelFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SeqNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModelYear", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SuffixCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Unit", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BlockModel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BlockModel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BlockSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BlockSeq", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockSeq", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MARK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MARK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProductionDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProductionDate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProductionTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProductionTime", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ImportCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ImportCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImportCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YChassisFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YChassisFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YChassisFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GAShop", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GAShop", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAShop", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HanmmerYears", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HanmmerYears", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HanmmerYears", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASM01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASM01", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASM02", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM02", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASM02", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASM03", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM03", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASM03", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASM04", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM04", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASM04", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASM05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASM05", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASM05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_XchgFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_XchgFlag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XchgFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InsResult", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsResult", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InsResult", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsResult", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InsPassFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsPassFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Line_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CarrResult", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CarrResult", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CarrResult", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CarrResult", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CarrPassFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CarrPassFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BelowDelFlag", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BelowDelFlag", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BelowDelFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BelowDelFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.InstructionSystem.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(22) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT * FROM T_Instruction_DAT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM T_Instruction_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  ([ModelYear] = @pModelYear) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND ([SuffixC"& _ 
                "ode] = @pSuffixCode) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND ([LotNo] = @pLotNo) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND ([Unit] = @pUnit) "
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pUnit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "DELETE FROM T_Instruction_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE BlockModel = @pBlockModel"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND substring(xch"& _ 
                "gFlag,1,1) = '1'"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pBlockModel", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "DELETE FROM T_Instruction_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE modelYear = @pModelYear AND suffixCode = @pS"& _ 
                "uffixCode AND LotNo = @pLotNo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND substring(xchgFlag,1,1) = '1'"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, BlockSeq, Car"& _ 
                "rPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, InsResult,"& _ 
                " Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime, SeqNo, "& _ 
                "SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT WHERE (M"& _ 
                "odelYear = @pModelYear) AND (SuffixCode = @pSuffixCode) AND (LotNo = @pLotNo) AN"& _ 
                "D (Unit = @pUnit)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pUnit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, BlockSeq, Car"& _ 
                "rPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, InsResult,"& _ 
                " Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime, SeqNo, "& _ 
                "SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT WHERE (P"& _ 
                "roductionDate + ProductionTime + SeqNo + ISNULL(CAST(SubSeq + 1000000 AS VARCHAR"& _ 
                "), '') >= @StProductionDate + @StProductionTime + @StSeqNo + ISNULL(CAST(@StSubS"& _ 
                "eq + 1000000 AS VARCHAR), '')) AND (ProductionDate + ProductionTime + SeqNo + IS"& _ 
                "NULL(CAST(SubSeq + 1000000 AS VARCHAR), '') < @EndProductionDate + @EndProductio"& _ 
                "nTime + @EndSeqNo + ISNULL(CAST(@EndSubSeq + 1000000 AS VARCHAR), '')) AND (Line"& _ 
                "_No = @pLineNo) AND (SUBSTRING(XchgFlag, 1, 1) <> '1')"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StProductionDate", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StProductionTime", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StSeqNo", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StSubSeq", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndProductionDate", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndProductionTime", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndSeqNo", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndSubSeq", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLineNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT TOP (1) ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, Block"& _ 
                "Seq, CarrPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, In"& _ 
                "sResult, Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime,"& _ 
                " SeqNo, SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT "& _ 
                "WHERE (CarrResult IS NULL) AND (SUBSTRING(XchgFlag, 1, 1) <> '1') AND (Line_No ="& _ 
                " @pLineNo) ORDER BY ProductionDate, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLineNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT TOP (1) ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, Block"& _ 
                "Seq, CarrPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, In"& _ 
                "sResult, Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime,"& _ 
                " SeqNo, SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT "& _ 
                "WHERE (InsResult IS NULL) AND (SUBSTRING(XchgFlag, 1, 1) <> '1') AND (Line_No = "& _ 
                "@pLineNo) ORDER BY ProductionDate, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLineNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT TOP (1) ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, Block"& _ 
                "Seq, CarrPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, In"& _ 
                "sResult, Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime,"& _ 
                " SeqNo, SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT "& _ 
                "WHERE (Line_No = @lineNo) AND (SUBSTRING(XchgFlag, 1, 1) <> '1') ORDER BY Produc"& _ 
                "tionDate DESC, ProductionTime DESC, SeqNo DESC, SubSeq DESC"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lineNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, BlockSeq, Car"& _ 
                "rPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, InsResult,"& _ 
                " Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime, SeqNo, "& _ 
                "SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT WHERE (S"& _ 
                "UBSTRING(XchgFlag, 1, 1) <> '1') AND (Line_No = @pLineNo) AND (SeqNo = @pSeqNo) "& _ 
                "AND (ProductionDate = @pProdDate)"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLineNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSeqNo", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pProdDate", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, BlockSeq, Car"& _ 
                "rPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, InsResult,"& _ 
                " Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime, SeqNo, "& _ 
                "SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT WHERE (S"& _ 
                "UBSTRING(XchgFlag, 1, 1) <> '1') AND (ModelYear = @pModelYear) AND (SuffixCode ="& _ 
                " @pSuffixCode) AND (LotNo = @pLotNo) AND (Unit = @pUnit) ORDER BY ProductionDate"& _ 
                ", ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pUnit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, BlockSeq, Car"& _ 
                "rPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, InsResult,"& _ 
                " Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime, SeqNo, "& _ 
                "SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT WHERE (M"& _ 
                "odelYear = @pModelYear) AND (SuffixCode = @pSuffixCode) AND (LotNo = @pLotNo) AN"& _ 
                "D (Unit = @pUnit) AND (Line_No = @pLineNo) ORDER BY ProductionDate, ProductionTi"& _ 
                "me, SeqNo, SubSeq"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pUnit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLineNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "SELECT ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, BlockSeq, Car"& _ 
                "rPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, InsResult,"& _ 
                " Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime, SeqNo, "& _ 
                "SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT WHERE (M"& _ 
                "odelYear = @pModelYear) AND (SuffixCode = @pSuffixCode) AND (LotNo = @pLotNo) AN"& _ 
                "D (Unit = @pUnit) ORDER BY ProductionDate, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pUnit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(13).Connection = Me.Connection
            Me._commandCollection(13).CommandText = "SELECT ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, BlockSeq, Car"& _ 
                "rPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, InsResult,"& _ 
                " Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime, SeqNo, "& _ 
                "SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT WHERE (S"& _ 
                "UBSTRING(XchgFlag, 1, 1) <> '1') AND (SUBSTRING(XchgFlag, 4, 1) <> '1') AND (Mod"& _ 
                "elYear = @pModelYear) AND (SuffixCode = @pSuffixCode) AND (LotNo = @pLotNo) AND "& _ 
                "(Unit = @pUnit) AND (Line_No = @plineNo) ORDER BY ProductionDate, ProductionTime"& _ 
                ", SeqNo, SubSeq"
            Me._commandCollection(13).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYear", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ModelYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSuffixCode", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pUnit", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@plineNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(14).Connection = Me.Connection
            Me._commandCollection(14).CommandText = "SELECT TOP (@Block)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"0 as indexNo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELEC"& _ 
                "T *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"  *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&" *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM [T_Instruction_DAT]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Line_No = @Line"& _ 
                "_No AND substring(XchgFlag,1,1) <> '1'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") l"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"[Produc"& _ 
                "tionDate] >= @ProductionDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") d"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT (d.[ProductionDate] = @Pro"& _ 
                "ductionDate AND d.[ProductionTime] < @ProductionTime)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") t"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT (t.[P"& _ 
                "roductionDate] = @ProductionDate AND t.[ProductionTime] = @ProductionTime AND t."& _ 
                "[SeqNo] < @SeqNo)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&") s"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE NOT(s.[ProductionDate] = @ProductionDate AND s.[P"& _ 
                "roductionTime] = @ProductionTime AND s.[SeqNo] = @SeqNo AND s.[SubSeq] <= @SubSe"& _ 
                "q)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"  [ProductionDate]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [ProductionTime]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [SeqNo]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [SubSeq]"& _ 
                ";"
            Me._commandCollection(14).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Block", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionDate", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionTime", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNo", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubSeq", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Line_No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(15).Connection = Me.Connection
            Me._commandCollection(15).CommandText = "SELECT TOP 1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT TOP (@Block+1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM [T_Inst"& _ 
                "ruction_DAT] p"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"[ProductionDate] <= @ProductionDate AND "& _ 
                "substring(XchgFlag,1,1) <> '1'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"AND Line_No = @Line_No"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") d"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT (d.[ProductionDate] = @ProductionDate AND d.[ProductionTime] > @Pro"& _ 
                "ductionTime)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") t"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT (t.[ProductionDate] = @ProductionDate AND "& _ 
                "t.[ProductionTime] = @ProductionTime AND t.[SeqNo] > @SeqNo)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") s"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NO"& _ 
                "T(s.[ProductionDate] = @ProductionDate AND s.[ProductionTime] = @ProductionTime "& _ 
                "AND s.[SeqNo] = @SeqNo AND s.[SubSeq] >= @SubSeq)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"ORDER BY "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"  [Production"& _ 
                "Date] DESC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [ProductionTime] DESC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [SeqNo] DESC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [SubSeq] DESC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)& _ 
                ") ss"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"  [ProductionDate]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [ProductionTime]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [SeqNo]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", [SubSe"& _ 
                "q]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&";"
            Me._commandCollection(15).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Block", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionDate", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionTime", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNo", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubSeq", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Line_No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(16).Connection = Me.Connection
            Me._commandCollection(16).CommandText = "SELECT * FROM T_Instruction_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE productionDate = @pProductionDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND pro"& _ 
                "ductionTime = @pProductionTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND seqNo = @pSeqNo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND subSeq = @pSubSeq"
            Me._commandCollection(16).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pProductionDate", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pProductionTime", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSeqNo", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSubSeq", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(17) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(17).Connection = Me.Connection
            Me._commandCollection(17).CommandText = "SELECT     SeqNo, ModelYear, SuffixCode, LotID, LotNo, Unit, BlockModel, BlockSeq"& _ 
                ", MARK, ProductionDate, ProductionTime, ImportCode, YChassisFlag, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "          GAShop, HanmmerYears, ASM01, ASM02, ASM03, ASM04, ASM05, XchgFlag, Ins"& _ 
                "Result, InsPassFlag, Line_No, CarrResult, CarrPassFlag, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "SubSeq"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         T_Instruction_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (SeqNo = @pSeqNo) AND (Product"& _ 
                "ionDate = @pProdDate)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProductionDate, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(17).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSeqNo", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pProdDate", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(18) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(18).Connection = Me.Connection
            Me._commandCollection(18).CommandText = "SELECT ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, BlockSeq, Car"& _ 
                "rPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, InsResult,"& _ 
                " Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime, SeqNo, "& _ 
                "SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT WHERE (S"& _ 
                "eqNo = @pSeqNo) AND (ProductionDate = @pProdDate) AND (Line_No = @pLineNo) ORDER"& _ 
                " BY ProductionDate, ProductionTime, SeqNo, SubSeq"
            Me._commandCollection(18).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSeqNo", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pProdDate", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLineNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(19) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(19).Connection = Me.Connection
            Me._commandCollection(19).CommandText = "SELECT TOP (1) ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, Block"& _ 
                "Seq, CarrPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, In"& _ 
                "sResult, Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime,"& _ 
                " SeqNo, SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT "& _ 
                "WHERE (Line_No = @lineNo) AND (SUBSTRING(XchgFlag, 1, 1) <> '1') AND (ModelYear "& _ 
                "+ SuffixCode = @pModelYearSuffix) AND (BlockModel = @pBlockModel)"
            Me._commandCollection(19).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lineNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelYearSuffix", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pBlockModel", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "BlockModel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(20) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(20).Connection = Me.Connection
            Me._commandCollection(20).CommandText = "SELECT TOP (1) ASM01, ASM02, ASM03, ASM04, ASM05, BelowDelFlag, BlockModel, Block"& _ 
                "Seq, CarrPassFlag, CarrResult, GAShop, HanmmerYears, ImportCode, InsPassFlag, In"& _ 
                "sResult, Line_No, LotID, LotNo, MARK, ModelYear, ProductionDate, ProductionTime,"& _ 
                " SeqNo, SubSeq, SuffixCode, Unit, XchgFlag, YChassisFlag FROM T_Instruction_DAT "& _ 
                "WHERE (Line_No = @lineNo) AND (SUBSTRING(XchgFlag, 1, 1) <> '1') AND (ModelYear "& _ 
                "+ SuffixCode = @pModelCode) AND (LotNo = @pLotNo)"
            Me._commandCollection(20).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(20).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lineNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(20).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pModelCode", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(20).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLotNo", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(21) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(21).Connection = Me.Connection
            Me._commandCollection(21).CommandText = "SELECT COUNT(seqNo) FROM T_Instruction_DAT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE Line_No = @pLineNo"
            Me._commandCollection(21).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(21).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLineNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Line_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(22).Connection = Me.Connection
            Me._commandCollection(22).CommandText = "SELECT   count(*) as OffestBase"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT ProductionDate, ProductionTim"& _ 
                "e, SeqNo, SubSeq, LINE_NO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT ProductionDate, ProductionTime"& _ 
                ", SeqNo, SubSeq, LINE_NO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM ("&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"SELECT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"  [ProductionDate"& _ 
                "]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [ProductionTime]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [SeqNo]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&", [SubSeq]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "                                                                                "& _ 
                "                                      , [Line_No]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FROM T_Instruction_DAT"& _ 
                " p"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"[ProductionDate] <= @ProductionDate AND substring(Xchg"& _ 
                "Flag,1,1) <> '1' AND Line_No = @Line_No"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") d"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT (d.[Productio"& _ 
                "nDate] = @ProductionDate AND d.[ProductionTime] > @ProductionTime)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") t"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)& _ 
                "WHERE NOT (t.[ProductionDate] = @ProductionDate AND t.[ProductionTime] = @Produc"& _ 
                "tionTime AND t.[SeqNo] > @SeqNo)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&") s"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"WHERE NOT(s.[ProductionDate] = @Produc"& _ 
                "tionDate AND s.[ProductionTime] = @ProductionTime AND s.[SeqNo] = @SeqNo AND s.["& _ 
                "SubSeq] > @SubSeq)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&";"
            Me._commandCollection(22).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionDate", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProductionTime", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "ProductionTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNo", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubSeq", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubSeq", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Line_No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.T_Instruction_DATDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllByModelYearSuffixCodeLotNoUnit(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllDataByModelYearSuffixCodeLotNoUnit(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByChangeRecords(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal StProductionDate As String, ByVal StProductionTime As String, ByVal StSeqNo As String, ByVal StSubSeq As String, ByVal EndProductionDate As String, ByVal EndProductionTime As String, ByVal EndSeqNo As String, ByVal EndSubSeq As String, ByVal pLineNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (StProductionDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StProductionDate")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(StProductionDate,String)
            End If
            If (StProductionTime Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StProductionTime")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(StProductionTime,String)
            End If
            If (StSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(StSeqNo,String)
            End If
            If (StSubSeq Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StSubSeq")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(StSubSeq,String)
            End If
            If (EndProductionDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EndProductionDate")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(EndProductionDate,String)
            End If
            If (EndProductionTime Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EndProductionTime")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(EndProductionTime,String)
            End If
            If (EndSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EndSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(EndSeqNo,String)
            End If
            If (EndSubSeq Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EndSubSeq")
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(EndSubSeq,String)
            End If
            Me.Adapter.SelectCommand.Parameters(8).Value = CType(pLineNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByChangeRecords(ByVal StProductionDate As String, ByVal StProductionTime As String, ByVal StSeqNo As String, ByVal StSubSeq As String, ByVal EndProductionDate As String, ByVal EndProductionTime As String, ByVal EndSeqNo As String, ByVal EndSubSeq As String, ByVal pLineNo As Integer) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (StProductionDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StProductionDate")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(StProductionDate,String)
            End If
            If (StProductionTime Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StProductionTime")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(StProductionTime,String)
            End If
            If (StSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(StSeqNo,String)
            End If
            If (StSubSeq Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StSubSeq")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(StSubSeq,String)
            End If
            If (EndProductionDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EndProductionDate")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(EndProductionDate,String)
            End If
            If (EndProductionTime Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EndProductionTime")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(EndProductionTime,String)
            End If
            If (EndSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EndSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(EndSeqNo,String)
            End If
            If (EndSubSeq Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EndSubSeq")
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(EndSubSeq,String)
            End If
            Me.Adapter.SelectCommand.Parameters(8).Value = CType(pLineNo,Integer)
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCurrentCarryOutRow(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal pLineNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLineNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCurrentCarryOutRow(ByVal pLineNo As Integer) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLineNo,Integer)
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCurrentInstructionRow(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal pLineNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLineNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCurrentInstructionRow(ByVal pLineNo As Integer) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLineNo,Integer)
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLastRecord(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal lineNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(lineNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLastRecord(ByVal lineNo As Integer) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(lineNo,Integer)
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLineNoSeqNoProdDate(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal pLineNo As Integer, ByVal pSeqNo As String, ByVal pProdDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLineNo,Integer)
            If (pSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSeqNo,String)
            End If
            If (pProdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pProdDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLineNoSeqNoProdDate(ByVal pLineNo As Integer, ByVal pSeqNo As String, ByVal pProdDate As String) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLineNo,Integer)
            If (pSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSeqNo,String)
            End If
            If (pProdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pProdDate,String)
            End If
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByModelYearSuffixCodeLotNoUnit(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByModelYearSuffixCodeLotNoUnit(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByModelYearSuffixCodeLotNoUnit_NoXChange(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String, ByVal pLineNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(pLineNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByModelYearSuffixCodeLotNoUnit_NoXChange(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String, ByVal pLineNo As Integer) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(pLineNo,Integer)
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByModelYearSuffixCodeLotNoUnitForInsert(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(12)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByModelYearSuffixCodeLotNoUnitForInsert(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(12)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByModelYearSuffixLotUnitLineNo(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String, ByVal plineNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(13)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(plineNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByModelYearSuffixLotUnitLineNo(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String, ByVal plineNo As Integer) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(13)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pUnit,String)
            End If
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(plineNo,Integer)
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByNextBtn(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal Block As Integer, ByVal ProductionDate As String, ByVal ProductionTime As String, ByVal SeqNo As String, ByVal SubSeq As Global.System.Nullable(Of Integer), ByVal Line_No As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(14)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Block,Integer)
            If (ProductionDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ProductionTime,String)
            End If
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SeqNo,String)
            End If
            If (SubSeq.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(5).Value = CType(Line_No,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByNextBtn(ByVal Block As Integer, ByVal ProductionDate As String, ByVal ProductionTime As String, ByVal SeqNo As String, ByVal SubSeq As Global.System.Nullable(Of Integer), ByVal Line_No As Integer) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(14)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Block,Integer)
            If (ProductionDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ProductionTime,String)
            End If
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SeqNo,String)
            End If
            If (SubSeq.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(5).Value = CType(Line_No,Integer)
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPreviousBtn(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal Block As Integer, ByVal ProductionDate As String, ByVal ProductionTime As String, ByVal SeqNo As String, ByVal SubSeq As Global.System.Nullable(Of Integer), ByVal Line_No As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(15)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Block,Integer)
            If (ProductionDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ProductionTime,String)
            End If
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SeqNo,String)
            End If
            If (SubSeq.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(5).Value = CType(Line_No,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPreviousBtn(ByVal Block As Integer, ByVal ProductionDate As String, ByVal ProductionTime As String, ByVal SeqNo As String, ByVal SubSeq As Global.System.Nullable(Of Integer), ByVal Line_No As Integer) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(15)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Block,Integer)
            If (ProductionDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ProductionTime,String)
            End If
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SeqNo,String)
            End If
            If (SubSeq.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(5).Value = CType(Line_No,Integer)
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByProdDateTimeSeqSub(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal pProductionDate As String, ByVal pProductionTime As String, ByVal pSeqNo As String, ByVal pSubSeq As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(16)
            If (pProductionDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pProductionDate,String)
            End If
            If (pProductionTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pProductionTime,String)
            End If
            If (pSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pSeqNo,String)
            End If
            If (pSubSeq.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pSubSeq.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByProdDateTimeSeqSub(ByVal pProductionDate As String, ByVal pProductionTime As String, ByVal pSeqNo As String, ByVal pSubSeq As Global.System.Nullable(Of Integer)) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(16)
            If (pProductionDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pProductionDate,String)
            End If
            If (pProductionTime Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pProductionTime,String)
            End If
            If (pSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pSeqNo,String)
            End If
            If (pSubSeq.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(pSubSeq.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySeqNoProductionDate(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal pSeqNo As String, ByVal pProdDate As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(17)
            If (pSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSeqNo,String)
            End If
            If (pProdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pProdDate,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySeqNoProductionDate(ByVal pSeqNo As String, ByVal pProdDate As String) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(17)
            If (pSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSeqNo,String)
            End If
            If (pProdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pProdDate,String)
            End If
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySeqNoProductionDateLine(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal pSeqNo As String, ByVal pProdDate As String, ByVal pLineNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(18)
            If (pSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSeqNo,String)
            End If
            If (pProdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pProdDate,String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLineNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySeqNoProductionDateLine(ByVal pSeqNo As String, ByVal pProdDate As String, ByVal pLineNo As Integer) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(18)
            If (pSeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSeqNo")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSeqNo,String)
            End If
            If (pProdDate Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pProdDate,String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLineNo,Integer)
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillSkByYearSuffixBlock(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal lineNo As Integer, ByVal pModelYearSuffix As String, ByVal pBlockModel As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(19)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(lineNo,Integer)
            If (pModelYearSuffix Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYearSuffix")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pModelYearSuffix,String)
            End If
            If (pBlockModel Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pBlockModel,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetSkByYearSuffixBlock(ByVal lineNo As Integer, ByVal pModelYearSuffix As String, ByVal pBlockModel As String) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(19)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(lineNo,Integer)
            If (pModelYearSuffix Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYearSuffix")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pModelYearSuffix,String)
            End If
            If (pBlockModel Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pBlockModel,String)
            End If
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillSkByYearSuffixLot(ByVal dataTable As DataSet1.T_Instruction_DATDataTable, ByVal lineNo As Integer, ByVal pModelCode As String, ByVal pLotNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(20)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(lineNo,Integer)
            If (pModelCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pModelCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetSkByYearSuffixLot(ByVal lineNo As Integer, ByVal pModelCode As String, ByVal pLotNo As String) As DataSet1.T_Instruction_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(20)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(lineNo,Integer)
            If (pModelCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelCode")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pModelCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLotNo,String)
            End If
            Dim dataTable As DataSet1.T_Instruction_DATDataTable = New DataSet1.T_Instruction_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.T_Instruction_DATDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "T_Instruction_DAT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_SeqNo As String,  _
                    ByVal Original_ModelYear As String,  _
                    ByVal Original_SuffixCode As String,  _
                    ByVal Original_LotID As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_Unit As String,  _
                    ByVal Original_BlockModel As String,  _
                    ByVal Original_BlockSeq As String,  _
                    ByVal Original_MARK As String,  _
                    ByVal Original_ProductionDate As String,  _
                    ByVal Original_ProductionTime As String,  _
                    ByVal Original_ImportCode As String,  _
                    ByVal Original_YChassisFlag As String,  _
                    ByVal Original_GAShop As String,  _
                    ByVal Original_HanmmerYears As String,  _
                    ByVal Original_ASM01 As String,  _
                    ByVal Original_ASM02 As String,  _
                    ByVal Original_ASM03 As String,  _
                    ByVal Original_ASM04 As String,  _
                    ByVal Original_ASM05 As String,  _
                    ByVal Original_XchgFlag As String,  _
                    ByVal Original_InsResult As Global.System.Nullable(Of Date),  _
                    ByVal Original_InsPassFlag As Boolean,  _
                    ByVal Original_Line_No As Integer,  _
                    ByVal Original_CarrResult As Global.System.Nullable(Of Date),  _
                    ByVal Original_CarrPassFlag As Boolean,  _
                    ByVal Original_SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BelowDelFlag As Global.System.Nullable(Of Boolean)) As Integer
            If (Original_SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SeqNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SeqNo,String)
            End If
            If (Original_ModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ModelYear")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ModelYear,String)
            End If
            If (Original_SuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SuffixCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SuffixCode,String)
            End If
            If (Original_LotID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotID")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_LotID,String)
            End If
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_LotNo,String)
            End If
            If (Original_Unit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Unit")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Unit,String)
            End If
            If (Original_BlockModel Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_BlockModel,String)
            End If
            If (Original_BlockSeq Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_BlockSeq,String)
            End If
            If (Original_MARK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_MARK,String)
            End If
            If (Original_ProductionDate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_ProductionDate,String)
            End If
            If (Original_ProductionTime Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ProductionTime,String)
            End If
            If (Original_ImportCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ImportCode,String)
            End If
            If (Original_YChassisFlag Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_YChassisFlag,String)
            End If
            If (Original_GAShop Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_GAShop,String)
            End If
            If (Original_HanmmerYears Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_HanmmerYears,String)
            End If
            If (Original_ASM01 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_ASM01,String)
            End If
            If (Original_ASM02 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_ASM02,String)
            End If
            If (Original_ASM03 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_ASM03,String)
            End If
            If (Original_ASM04 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_ASM04,String)
            End If
            If (Original_ASM05 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_ASM05,String)
            End If
            If (Original_XchgFlag Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_XchgFlag,String)
            End If
            If (Original_InsResult.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_InsResult.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_InsPassFlag,Boolean)
            Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_Line_No,Integer)
            If (Original_CarrResult.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_CarrResult.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_CarrPassFlag,Boolean)
            If (Original_SubSeq.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_SubSeq.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_BelowDelFlag.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_BelowDelFlag.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal SeqNo As String,  _
                    ByVal ModelYear As String,  _
                    ByVal SuffixCode As String,  _
                    ByVal LotID As String,  _
                    ByVal LotNo As String,  _
                    ByVal Unit As String,  _
                    ByVal BlockModel As String,  _
                    ByVal BlockSeq As String,  _
                    ByVal MARK As String,  _
                    ByVal ProductionDate As String,  _
                    ByVal ProductionTime As String,  _
                    ByVal ImportCode As String,  _
                    ByVal YChassisFlag As String,  _
                    ByVal GAShop As String,  _
                    ByVal HanmmerYears As String,  _
                    ByVal ASM01 As String,  _
                    ByVal ASM02 As String,  _
                    ByVal ASM03 As String,  _
                    ByVal ASM04 As String,  _
                    ByVal ASM05 As String,  _
                    ByVal XchgFlag As String,  _
                    ByVal InsResult As Global.System.Nullable(Of Date),  _
                    ByVal InsPassFlag As Boolean,  _
                    ByVal Line_No As Integer,  _
                    ByVal CarrResult As Global.System.Nullable(Of Date),  _
                    ByVal CarrPassFlag As Boolean,  _
                    ByVal SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal BelowDelFlag As Global.System.Nullable(Of Boolean)) As Integer
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SeqNo,String)
            End If
            If (ModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ModelYear")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ModelYear,String)
            End If
            If (SuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SuffixCode")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SuffixCode,String)
            End If
            If (LotID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotID")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(LotID,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LotNo,String)
            End If
            If (Unit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Unit")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Unit,String)
            End If
            If (BlockModel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(BlockModel,String)
            End If
            If (BlockSeq Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BlockSeq,String)
            End If
            If (MARK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(MARK,String)
            End If
            If (ProductionDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ProductionTime,String)
            End If
            If (ImportCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ImportCode,String)
            End If
            If (YChassisFlag Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(YChassisFlag,String)
            End If
            If (GAShop Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(GAShop,String)
            End If
            If (HanmmerYears Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(HanmmerYears,String)
            End If
            If (ASM01 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(ASM01,String)
            End If
            If (ASM02 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(ASM02,String)
            End If
            If (ASM03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(ASM03,String)
            End If
            If (ASM04 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(ASM04,String)
            End If
            If (ASM05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ASM05,String)
            End If
            If (XchgFlag Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(XchgFlag,String)
            End If
            If (InsResult.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(InsResult.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(InsPassFlag,Boolean)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(Line_No,Integer)
            If (CarrResult.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CarrResult.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(CarrPassFlag,Boolean)
            If (SubSeq.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (BelowDelFlag.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(BelowDelFlag.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SeqNo As String,  _
                    ByVal ModelYear As String,  _
                    ByVal SuffixCode As String,  _
                    ByVal LotID As String,  _
                    ByVal LotNo As String,  _
                    ByVal Unit As String,  _
                    ByVal BlockModel As String,  _
                    ByVal BlockSeq As String,  _
                    ByVal MARK As String,  _
                    ByVal ProductionDate As String,  _
                    ByVal ProductionTime As String,  _
                    ByVal ImportCode As String,  _
                    ByVal YChassisFlag As String,  _
                    ByVal GAShop As String,  _
                    ByVal HanmmerYears As String,  _
                    ByVal ASM01 As String,  _
                    ByVal ASM02 As String,  _
                    ByVal ASM03 As String,  _
                    ByVal ASM04 As String,  _
                    ByVal ASM05 As String,  _
                    ByVal XchgFlag As String,  _
                    ByVal InsResult As Global.System.Nullable(Of Date),  _
                    ByVal InsPassFlag As Boolean,  _
                    ByVal Line_No As Integer,  _
                    ByVal CarrResult As Global.System.Nullable(Of Date),  _
                    ByVal CarrPassFlag As Boolean,  _
                    ByVal SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal BelowDelFlag As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SeqNo As String,  _
                    ByVal Original_ModelYear As String,  _
                    ByVal Original_SuffixCode As String,  _
                    ByVal Original_LotID As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_Unit As String,  _
                    ByVal Original_BlockModel As String,  _
                    ByVal Original_BlockSeq As String,  _
                    ByVal Original_MARK As String,  _
                    ByVal Original_ProductionDate As String,  _
                    ByVal Original_ProductionTime As String,  _
                    ByVal Original_ImportCode As String,  _
                    ByVal Original_YChassisFlag As String,  _
                    ByVal Original_GAShop As String,  _
                    ByVal Original_HanmmerYears As String,  _
                    ByVal Original_ASM01 As String,  _
                    ByVal Original_ASM02 As String,  _
                    ByVal Original_ASM03 As String,  _
                    ByVal Original_ASM04 As String,  _
                    ByVal Original_ASM05 As String,  _
                    ByVal Original_XchgFlag As String,  _
                    ByVal Original_InsResult As Global.System.Nullable(Of Date),  _
                    ByVal Original_InsPassFlag As Boolean,  _
                    ByVal Original_Line_No As Integer,  _
                    ByVal Original_CarrResult As Global.System.Nullable(Of Date),  _
                    ByVal Original_CarrPassFlag As Boolean,  _
                    ByVal Original_SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BelowDelFlag As Global.System.Nullable(Of Boolean)) As Integer
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SeqNo,String)
            End If
            If (ModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ModelYear")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ModelYear,String)
            End If
            If (SuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SuffixCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SuffixCode,String)
            End If
            If (LotID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotID")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(LotID,String)
            End If
            If (LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LotNo,String)
            End If
            If (Unit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Unit")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Unit,String)
            End If
            If (BlockModel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(BlockModel,String)
            End If
            If (BlockSeq Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(BlockSeq,String)
            End If
            If (MARK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(MARK,String)
            End If
            If (ProductionDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ProductionTime,String)
            End If
            If (ImportCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ImportCode,String)
            End If
            If (YChassisFlag Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(YChassisFlag,String)
            End If
            If (GAShop Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(GAShop,String)
            End If
            If (HanmmerYears Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(HanmmerYears,String)
            End If
            If (ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ASM01,String)
            End If
            If (ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(ASM02,String)
            End If
            If (ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(ASM03,String)
            End If
            If (ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(ASM04,String)
            End If
            If (ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ASM05,String)
            End If
            If (XchgFlag Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(XchgFlag,String)
            End If
            If (InsResult.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(InsResult.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(InsPassFlag,Boolean)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Line_No,Integer)
            If (CarrResult.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(CarrResult.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(CarrPassFlag,Boolean)
            If (SubSeq.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(SubSeq.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (BelowDelFlag.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(BelowDelFlag.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SeqNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_SeqNo,String)
            End If
            If (Original_ModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ModelYear")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_ModelYear,String)
            End If
            If (Original_SuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SuffixCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_SuffixCode,String)
            End If
            If (Original_LotID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotID")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_LotID,String)
            End If
            If (Original_LotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LotNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_LotNo,String)
            End If
            If (Original_Unit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Unit")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_Unit,String)
            End If
            If (Original_BlockModel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_BlockModel,String)
            End If
            If (Original_BlockSeq Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_BlockSeq,String)
            End If
            If (Original_MARK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_MARK,String)
            End If
            If (Original_ProductionDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_ProductionDate,String)
            End If
            If (Original_ProductionTime Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_ProductionTime,String)
            End If
            If (Original_ImportCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_ImportCode,String)
            End If
            If (Original_YChassisFlag Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_YChassisFlag,String)
            End If
            If (Original_GAShop Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_GAShop,String)
            End If
            If (Original_HanmmerYears Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_HanmmerYears,String)
            End If
            If (Original_ASM01 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_ASM01,String)
            End If
            If (Original_ASM02 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_ASM02,String)
            End If
            If (Original_ASM03 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_ASM03,String)
            End If
            If (Original_ASM04 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_ASM04,String)
            End If
            If (Original_ASM05 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_ASM05,String)
            End If
            If (Original_XchgFlag Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_XchgFlag,String)
            End If
            If (Original_InsResult.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_InsResult.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_InsPassFlag,Boolean)
            Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_Line_No,Integer)
            If (Original_CarrResult.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_CarrResult.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CarrPassFlag,Boolean)
            If (Original_SubSeq.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_SubSeq.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_BelowDelFlag.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_BelowDelFlag.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SeqNo As String,  _
                    ByVal LotID As String,  _
                    ByVal BlockModel As String,  _
                    ByVal BlockSeq As String,  _
                    ByVal MARK As String,  _
                    ByVal ProductionDate As String,  _
                    ByVal ProductionTime As String,  _
                    ByVal ImportCode As String,  _
                    ByVal YChassisFlag As String,  _
                    ByVal GAShop As String,  _
                    ByVal HanmmerYears As String,  _
                    ByVal ASM01 As String,  _
                    ByVal ASM02 As String,  _
                    ByVal ASM03 As String,  _
                    ByVal ASM04 As String,  _
                    ByVal ASM05 As String,  _
                    ByVal XchgFlag As String,  _
                    ByVal InsResult As Global.System.Nullable(Of Date),  _
                    ByVal InsPassFlag As Boolean,  _
                    ByVal CarrResult As Global.System.Nullable(Of Date),  _
                    ByVal CarrPassFlag As Boolean,  _
                    ByVal SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal BelowDelFlag As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SeqNo As String,  _
                    ByVal Original_ModelYear As String,  _
                    ByVal Original_SuffixCode As String,  _
                    ByVal Original_LotID As String,  _
                    ByVal Original_LotNo As String,  _
                    ByVal Original_Unit As String,  _
                    ByVal Original_BlockModel As String,  _
                    ByVal Original_BlockSeq As String,  _
                    ByVal Original_MARK As String,  _
                    ByVal Original_ProductionDate As String,  _
                    ByVal Original_ProductionTime As String,  _
                    ByVal Original_ImportCode As String,  _
                    ByVal Original_YChassisFlag As String,  _
                    ByVal Original_GAShop As String,  _
                    ByVal Original_HanmmerYears As String,  _
                    ByVal Original_ASM01 As String,  _
                    ByVal Original_ASM02 As String,  _
                    ByVal Original_ASM03 As String,  _
                    ByVal Original_ASM04 As String,  _
                    ByVal Original_ASM05 As String,  _
                    ByVal Original_XchgFlag As String,  _
                    ByVal Original_InsResult As Global.System.Nullable(Of Date),  _
                    ByVal Original_InsPassFlag As Boolean,  _
                    ByVal Original_Line_No As Integer,  _
                    ByVal Original_CarrResult As Global.System.Nullable(Of Date),  _
                    ByVal Original_CarrPassFlag As Boolean,  _
                    ByVal Original_SubSeq As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BelowDelFlag As Global.System.Nullable(Of Boolean)) As Integer
            Return Me.Update(SeqNo, Original_ModelYear, Original_SuffixCode, LotID, Original_LotNo, Original_Unit, BlockModel, BlockSeq, MARK, ProductionDate, ProductionTime, ImportCode, YChassisFlag, GAShop, HanmmerYears, ASM01, ASM02, ASM03, ASM04, ASM05, XchgFlag, InsResult, InsPassFlag, Original_Line_No, CarrResult, CarrPassFlag, SubSeq, BelowDelFlag, Original_SeqNo, Original_ModelYear, Original_SuffixCode, Original_LotID, Original_LotNo, Original_Unit, Original_BlockModel, Original_BlockSeq, Original_MARK, Original_ProductionDate, Original_ProductionTime, Original_ImportCode, Original_YChassisFlag, Original_GAShop, Original_HanmmerYears, Original_ASM01, Original_ASM02, Original_ASM03, Original_ASM04, Original_ASM05, Original_XchgFlag, Original_InsResult, Original_InsPassFlag, Original_Line_No, Original_CarrResult, Original_CarrPassFlag, Original_SubSeq, Original_BelowDelFlag)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteByPrimaryKey(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String, ByVal pUnit As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                command.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                command.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                command.Parameters(2).Value = CType(pLotNo,String)
            End If
            If (pUnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pUnit")
            Else
                command.Parameters(3).Value = CType(pUnit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteBySkipBlockModel(ByVal pBlockModel As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (pBlockModel Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(pBlockModel,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteBySkipModelYearSuffixLotNo(ByVal pModelYear As String, ByVal pSuffixCode As String, ByVal pLotNo As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (pModelYear Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pModelYear")
            Else
                command.Parameters(0).Value = CType(pModelYear,String)
            End If
            If (pSuffixCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSuffixCode")
            Else
                command.Parameters(1).Value = CType(pSuffixCode,String)
            End If
            If (pLotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLotNo")
            Else
                command.Parameters(2).Value = CType(pLotNo,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetCountByLineNo(ByVal pLineNo As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(21)
            command.Parameters(0).Value = CType(pLineNo,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetOffsetBase(ByVal ProductionDate As String, ByVal ProductionTime As String, ByVal SeqNo As String, ByVal SubSeq As Global.System.Nullable(Of Integer), ByVal Line_No As Integer) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(22)
            If (ProductionDate Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(ProductionDate,String)
            End If
            If (ProductionTime Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(ProductionTime,String)
            End If
            If (SeqNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SeqNo")
            Else
                command.Parameters(2).Value = CType(SeqNo,String)
            End If
            If (SubSeq.HasValue = true) Then
                command.Parameters(3).Value = CType(SubSeq.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            command.Parameters(4).Value = CType(Line_No,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class T_Line_MSTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "T_Line_MST"
            tableMapping.ColumnMappings.Add("LineCode", "LineCode")
            tableMapping.ColumnMappings.Add("LineName", "LineName")
            tableMapping.ColumnMappings.Add("LineType", "LineType")
            tableMapping.ColumnMappings.Add("MainLineFlag", "MainLineFlag")
            tableMapping.ColumnMappings.Add("OnlineFlag", "OnlineFlag")
            tableMapping.ColumnMappings.Add("IpAddress", "IpAddress")
            tableMapping.ColumnMappings.Add("NetAddress", "NetAddress")
            tableMapping.ColumnMappings.Add("NodeAddress", "NodeAddress")
            tableMapping.ColumnMappings.Add("UnitAddress", "UnitAddress")
            tableMapping.ColumnMappings.Add("ReadReqAddress", "ReadReqAddress")
            tableMapping.ColumnMappings.Add("WriteProductionAddress", "WriteProductionAddress")
            tableMapping.ColumnMappings.Add("WriteCarryOutAddress", "WriteCarryOutAddress")
            tableMapping.ColumnMappings.Add("Part1", "Part1")
            tableMapping.ColumnMappings.Add("Part2", "Part2")
            tableMapping.ColumnMappings.Add("Part3", "Part3")
            tableMapping.ColumnMappings.Add("Part4", "Part4")
            tableMapping.ColumnMappings.Add("Part5", "Part5")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [T_Line_MST] WHERE (([LineCode] = @Original_LineCode) AND ((@IsNull_L"& _ 
                "ineName = 1 AND [LineName] IS NULL) OR ([LineName] = @Original_LineName)) AND (["& _ 
                "LineType] = @Original_LineType) AND ([MainLineFlag] = @Original_MainLineFlag) AN"& _ 
                "D ([OnlineFlag] = @Original_OnlineFlag) AND ([IpAddress] = @Original_IpAddress) "& _ 
                "AND ([NetAddress] = @Original_NetAddress) AND ([NodeAddress] = @Original_NodeAdd"& _ 
                "ress) AND ([UnitAddress] = @Original_UnitAddress) AND ([ReadReqAddress] = @Origi"& _ 
                "nal_ReadReqAddress) AND ([WriteProductionAddress] = @Original_WriteProductionAdd"& _ 
                "ress) AND ([WriteCarryOutAddress] = @Original_WriteCarryOutAddress) AND ((@IsNul"& _ 
                "l_Part1 = 1 AND [Part1] IS NULL) OR ([Part1] = @Original_Part1)) AND ((@IsNull_P"& _ 
                "art2 = 1 AND [Part2] IS NULL) OR ([Part2] = @Original_Part2)) AND ((@IsNull_Part"& _ 
                "3 = 1 AND [Part3] IS NULL) OR ([Part3] = @Original_Part3)) AND ((@IsNull_Part4 ="& _ 
                " 1 AND [Part4] IS NULL) OR ([Part4] = @Original_Part4)) AND ((@IsNull_Part5 = 1 "& _ 
                "AND [Part5] IS NULL) OR ([Part5] = @Original_Part5)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LineCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LineName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LineName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LineType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MainLineFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainLineFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OnlineFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OnlineFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IpAddress", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IpAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NodeAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NodeAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UnitAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReadReqAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReadReqAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WriteProductionAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WriteProductionAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WriteCarryOutAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WriteCarryOutAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Part1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Part1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Part2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Part2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Part3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Part3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Part4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Part4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Part5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Part5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [T_Line_MST] ([LineCode], [LineName], [LineType], [MainLineFlag], [On"& _ 
                "lineFlag], [IpAddress], [NetAddress], [NodeAddress], [UnitAddress], [ReadReqAddr"& _ 
                "ess], [WriteProductionAddress], [WriteCarryOutAddress], [Part1], [Part2], [Part3"& _ 
                "], [Part4], [Part5]) VALUES (@LineCode, @LineName, @LineType, @MainLineFlag, @On"& _ 
                "lineFlag, @IpAddress, @NetAddress, @NodeAddress, @UnitAddress, @ReadReqAddress, "& _ 
                "@WriteProductionAddress, @WriteCarryOutAddress, @Part1, @Part2, @Part3, @Part4, "& _ 
                "@Part5);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT LineCode, LineName, LineType, MainLineFlag, OnlineFlag, IpAddre"& _ 
                "ss, NetAddress, NodeAddress, UnitAddress, ReadReqAddress, WriteProductionAddress"& _ 
                ", WriteCarryOutAddress, Part1, Part2, Part3, Part4, Part5 FROM T_Line_MST WHERE "& _ 
                "(LineCode = @LineCode)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LineCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LineName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LineType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainLineFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainLineFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OnlineFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OnlineFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IpAddress", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NodeAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NodeAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UnitAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReadReqAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReadReqAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WriteProductionAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WriteProductionAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WriteCarryOutAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WriteCarryOutAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Part1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Part2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Part3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Part4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Part5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [T_Line_MST] SET [LineCode] = @LineCode, [LineName] = @LineName, [LineType"& _ 
                "] = @LineType, [MainLineFlag] = @MainLineFlag, [OnlineFlag] = @OnlineFlag, [IpAd"& _ 
                "dress] = @IpAddress, [NetAddress] = @NetAddress, [NodeAddress] = @NodeAddress, ["& _ 
                "UnitAddress] = @UnitAddress, [ReadReqAddress] = @ReadReqAddress, [WriteProductio"& _ 
                "nAddress] = @WriteProductionAddress, [WriteCarryOutAddress] = @WriteCarryOutAddr"& _ 
                "ess, [Part1] = @Part1, [Part2] = @Part2, [Part3] = @Part3, [Part4] = @Part4, [Pa"& _ 
                "rt5] = @Part5 WHERE (([LineCode] = @Original_LineCode) AND ((@IsNull_LineName = "& _ 
                "1 AND [LineName] IS NULL) OR ([LineName] = @Original_LineName)) AND ([LineType] "& _ 
                "= @Original_LineType) AND ([MainLineFlag] = @Original_MainLineFlag) AND ([Online"& _ 
                "Flag] = @Original_OnlineFlag) AND ([IpAddress] = @Original_IpAddress) AND ([NetA"& _ 
                "ddress] = @Original_NetAddress) AND ([NodeAddress] = @Original_NodeAddress) AND "& _ 
                "([UnitAddress] = @Original_UnitAddress) AND ([ReadReqAddress] = @Original_ReadRe"& _ 
                "qAddress) AND ([WriteProductionAddress] = @Original_WriteProductionAddress) AND "& _ 
                "([WriteCarryOutAddress] = @Original_WriteCarryOutAddress) AND ((@IsNull_Part1 = "& _ 
                "1 AND [Part1] IS NULL) OR ([Part1] = @Original_Part1)) AND ((@IsNull_Part2 = 1 A"& _ 
                "ND [Part2] IS NULL) OR ([Part2] = @Original_Part2)) AND ((@IsNull_Part3 = 1 AND "& _ 
                "[Part3] IS NULL) OR ([Part3] = @Original_Part3)) AND ((@IsNull_Part4 = 1 AND [Pa"& _ 
                "rt4] IS NULL) OR ([Part4] = @Original_Part4)) AND ((@IsNull_Part5 = 1 AND [Part5"& _ 
                "] IS NULL) OR ([Part5] = @Original_Part5)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT LineCode, LineName, LineTyp"& _ 
                "e, MainLineFlag, OnlineFlag, IpAddress, NetAddress, NodeAddress, UnitAddress, Re"& _ 
                "adReqAddress, WriteProductionAddress, WriteCarryOutAddress, Part1, Part2, Part3,"& _ 
                " Part4, Part5 FROM T_Line_MST WHERE (LineCode = @LineCode)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LineCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LineName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LineType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainLineFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainLineFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OnlineFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OnlineFlag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IpAddress", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NodeAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NodeAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UnitAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReadReqAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReadReqAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WriteProductionAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WriteProductionAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WriteCarryOutAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WriteCarryOutAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Part1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Part2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Part3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Part4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Part5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LineCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LineName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LineName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LineType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MainLineFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainLineFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OnlineFlag", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OnlineFlag", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IpAddress", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IpAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NodeAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NodeAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UnitAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReadReqAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReadReqAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WriteProductionAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WriteProductionAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WriteCarryOutAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WriteCarryOutAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Part1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Part1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Part2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Part2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Part3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Part3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Part4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Part4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Part5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Part5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Part5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.InstructionSystem.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(8) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select * from T_Line_MST"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT IpAddress, LineCode, LineName, LineType, MainLineFlag, NetAddress, NodeAdd"& _ 
                "ress, OnlineFlag, Part1, Part2, Part3, Part4, Part5, ReadReqAddress, UnitAddress"& _ 
                ", WriteCarryOutAddress, WriteProductionAddress FROM T_Line_MST WHERE (OnlineFlag"& _ 
                " = 'true')"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT IpAddress, LineCode, LineName, LineType, MainLineFlag, NetAddress, NodeAdd"& _ 
                "ress, OnlineFlag, Part1, Part2, Part3, Part4, Part5, ReadReqAddress, UnitAddress"& _ 
                ", WriteCarryOutAddress, WriteProductionAddress "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM T_Line_MST "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (Online"& _ 
                "Flag = 'true')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND LineType = @pLineType"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLineType", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LineType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT     IpAddress, LineCode, LineName, LineType, MainLineFlag, NetAddress, Nod"& _ 
                "eAddress, OnlineFlag, Part1, Part2, Part3, Part4, Part5, ReadReqAddress, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                 UnitAddress, WriteCarryOutAddress, WriteProductionAddress"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM"& _ 
                "         T_Line_MST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (OnlineFlag = 'true') AND (MainLineFlag = 'true')"& _ 
                ""
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT    *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         T_Line_MST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (LineType > 0) AND (OnlineFlag = "& _ 
                "'true')"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT     IpAddress, LineCode, LineName, LineType, MainLineFlag, NetAddress, Nod"& _ 
                "eAddress, OnlineFlag, Part1, Part2, Part3, Part4, Part5, ReadReqAddress, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                 UnitAddress, WriteCarryOutAddress, WriteProductionAddress"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM"& _ 
                "         T_Line_MST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (OnlineFlag = 'true') AND (MainLineFlag = 'true')"& _ 
                " AND (LineType = @pLineType)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLineType", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LineType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT     TOP (1) LineName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         T_Line_MST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (LineCode = @line"& _ 
                ")"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@line", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LineCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT     LineCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         T_Line_MST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (LineType = @lineType) AN"& _ 
                "D (MainLineFlag = 1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lineType", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LineType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT     COUNT(*) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         T_Line_MST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (OnlineFlag = 't"& _ 
                "rue') AND (LineType > 0)"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.T_Line_MSTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.T_Line_MSTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.T_Line_MSTDataTable = New DataSet1.T_Line_MSTDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllByOnline(ByVal dataTable As DataSet1.T_Line_MSTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllDataByOnline() As DataSet1.T_Line_MSTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DataSet1.T_Line_MSTDataTable = New DataSet1.T_Line_MSTDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllByType(ByVal dataTable As DataSet1.T_Line_MSTDataTable, ByVal pLineType As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLineType,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllDataByType(ByVal pLineType As Integer) As DataSet1.T_Line_MSTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLineType,Integer)
            Dim dataTable As DataSet1.T_Line_MSTDataTable = New DataSet1.T_Line_MSTDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllMainLineByOnLine(ByVal dataTable As DataSet1.T_Line_MSTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllDataMainLineByOnLine() As DataSet1.T_Line_MSTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Dim dataTable As DataSet1.T_Line_MSTDataTable = New DataSet1.T_Line_MSTDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByOnline(ByVal dataTable As DataSet1.T_Line_MSTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByOnline() As DataSet1.T_Line_MSTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Dim dataTable As DataSet1.T_Line_MSTDataTable = New DataSet1.T_Line_MSTDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillMainLineByType(ByVal dataTable As DataSet1.T_Line_MSTDataTable, ByVal pLineType As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLineType,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataMainLineByType(ByVal pLineType As Integer) As DataSet1.T_Line_MSTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLineType,Integer)
            Dim dataTable As DataSet1.T_Line_MSTDataTable = New DataSet1.T_Line_MSTDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.T_Line_MSTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "T_Line_MST")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_LineCode As Integer,  _
                    ByVal Original_LineName As String,  _
                    ByVal Original_LineType As Integer,  _
                    ByVal Original_MainLineFlag As Boolean,  _
                    ByVal Original_OnlineFlag As Boolean,  _
                    ByVal Original_IpAddress As String,  _
                    ByVal Original_NetAddress As Integer,  _
                    ByVal Original_NodeAddress As Integer,  _
                    ByVal Original_UnitAddress As Integer,  _
                    ByVal Original_ReadReqAddress As Integer,  _
                    ByVal Original_WriteProductionAddress As Integer,  _
                    ByVal Original_WriteCarryOutAddress As Integer,  _
                    ByVal Original_Part1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part3 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part4 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part5 As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LineCode,Integer)
            If (Original_LineName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_LineName,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_LineType,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_MainLineFlag,Boolean)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_OnlineFlag,Boolean)
            If (Original_IpAddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IpAddress")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_IpAddress,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_NetAddress,Integer)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_NodeAddress,Integer)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_UnitAddress,Integer)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ReadReqAddress,Integer)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_WriteProductionAddress,Integer)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_WriteCarryOutAddress,Integer)
            If (Original_Part1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Part1.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_Part2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Part2.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_Part3.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_Part3.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_Part4.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Part4.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_Part5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_Part5.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal LineCode As Integer,  _
                    ByVal LineName As String,  _
                    ByVal LineType As Integer,  _
                    ByVal MainLineFlag As Boolean,  _
                    ByVal OnlineFlag As Boolean,  _
                    ByVal IpAddress As String,  _
                    ByVal NetAddress As Integer,  _
                    ByVal NodeAddress As Integer,  _
                    ByVal UnitAddress As Integer,  _
                    ByVal ReadReqAddress As Integer,  _
                    ByVal WriteProductionAddress As Integer,  _
                    ByVal WriteCarryOutAddress As Integer,  _
                    ByVal Part1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part3 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part4 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part5 As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(LineCode,Integer)
            If (LineName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LineName,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(LineType,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(MainLineFlag,Boolean)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(OnlineFlag,Boolean)
            If (IpAddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IpAddress")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(IpAddress,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(NetAddress,Integer)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(NodeAddress,Integer)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(UnitAddress,Integer)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(ReadReqAddress,Integer)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(WriteProductionAddress,Integer)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(WriteCarryOutAddress,Integer)
            If (Part1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Part1.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Part2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Part2.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Part3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Part3.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Part4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Part4.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Part5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Part5.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal LineCode As Integer,  _
                    ByVal LineName As String,  _
                    ByVal LineType As Integer,  _
                    ByVal MainLineFlag As Boolean,  _
                    ByVal OnlineFlag As Boolean,  _
                    ByVal IpAddress As String,  _
                    ByVal NetAddress As Integer,  _
                    ByVal NodeAddress As Integer,  _
                    ByVal UnitAddress As Integer,  _
                    ByVal ReadReqAddress As Integer,  _
                    ByVal WriteProductionAddress As Integer,  _
                    ByVal WriteCarryOutAddress As Integer,  _
                    ByVal Part1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part3 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part4 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part5 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LineCode As Integer,  _
                    ByVal Original_LineName As String,  _
                    ByVal Original_LineType As Integer,  _
                    ByVal Original_MainLineFlag As Boolean,  _
                    ByVal Original_OnlineFlag As Boolean,  _
                    ByVal Original_IpAddress As String,  _
                    ByVal Original_NetAddress As Integer,  _
                    ByVal Original_NodeAddress As Integer,  _
                    ByVal Original_UnitAddress As Integer,  _
                    ByVal Original_ReadReqAddress As Integer,  _
                    ByVal Original_WriteProductionAddress As Integer,  _
                    ByVal Original_WriteCarryOutAddress As Integer,  _
                    ByVal Original_Part1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part3 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part4 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part5 As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LineCode,Integer)
            If (LineName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LineName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LineType,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MainLineFlag,Boolean)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(OnlineFlag,Boolean)
            If (IpAddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IpAddress")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(IpAddress,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(NetAddress,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(NodeAddress,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(UnitAddress,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ReadReqAddress,Integer)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(WriteProductionAddress,Integer)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(WriteCarryOutAddress,Integer)
            If (Part1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Part1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Part2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Part2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Part3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Part3.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Part4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Part4.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Part5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Part5.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_LineCode,Integer)
            If (Original_LineName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_LineName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_LineType,Integer)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_MainLineFlag,Boolean)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_OnlineFlag,Boolean)
            If (Original_IpAddress Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IpAddress")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_IpAddress,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_NetAddress,Integer)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_NodeAddress,Integer)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_UnitAddress,Integer)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_ReadReqAddress,Integer)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_WriteProductionAddress,Integer)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_WriteCarryOutAddress,Integer)
            If (Original_Part1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_Part1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_Part2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_Part2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_Part3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_Part3.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_Part4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_Part4.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_Part5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_Part5.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal LineName As String,  _
                    ByVal LineType As Integer,  _
                    ByVal MainLineFlag As Boolean,  _
                    ByVal OnlineFlag As Boolean,  _
                    ByVal IpAddress As String,  _
                    ByVal NetAddress As Integer,  _
                    ByVal NodeAddress As Integer,  _
                    ByVal UnitAddress As Integer,  _
                    ByVal ReadReqAddress As Integer,  _
                    ByVal WriteProductionAddress As Integer,  _
                    ByVal WriteCarryOutAddress As Integer,  _
                    ByVal Part1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part3 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part4 As Global.System.Nullable(Of Boolean),  _
                    ByVal Part5 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LineCode As Integer,  _
                    ByVal Original_LineName As String,  _
                    ByVal Original_LineType As Integer,  _
                    ByVal Original_MainLineFlag As Boolean,  _
                    ByVal Original_OnlineFlag As Boolean,  _
                    ByVal Original_IpAddress As String,  _
                    ByVal Original_NetAddress As Integer,  _
                    ByVal Original_NodeAddress As Integer,  _
                    ByVal Original_UnitAddress As Integer,  _
                    ByVal Original_ReadReqAddress As Integer,  _
                    ByVal Original_WriteProductionAddress As Integer,  _
                    ByVal Original_WriteCarryOutAddress As Integer,  _
                    ByVal Original_Part1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part3 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part4 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Part5 As Global.System.Nullable(Of Boolean)) As Integer
            Return Me.Update(Original_LineCode, LineName, LineType, MainLineFlag, OnlineFlag, IpAddress, NetAddress, NodeAddress, UnitAddress, ReadReqAddress, WriteProductionAddress, WriteCarryOutAddress, Part1, Part2, Part3, Part4, Part5, Original_LineCode, Original_LineName, Original_LineType, Original_MainLineFlag, Original_OnlineFlag, Original_IpAddress, Original_NetAddress, Original_NodeAddress, Original_UnitAddress, Original_ReadReqAddress, Original_WriteProductionAddress, Original_WriteCarryOutAddress, Original_Part1, Original_Part2, Original_Part3, Original_Part4, Original_Part5)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetLineName(ByVal line As Integer) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(6)
            command.Parameters(0).Value = CType(line,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMainLineCodeByLineType(ByVal lineType As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(7)
            command.Parameters(0).Value = CType(lineType,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetOnlineLineNumber() As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(8)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class T_LOG_DATTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "T_LOG_DAT"
            tableMapping.ColumnMappings.Add("LogType", "LogType")
            tableMapping.ColumnMappings.Add("PcName", "PcName")
            tableMapping.ColumnMappings.Add("OccDate", "OccDate")
            tableMapping.ColumnMappings.Add("Message", "Message")
            tableMapping.ColumnMappings.Add("LineName", "LineName")
            tableMapping.ColumnMappings.Add("LogId", "LogId")
            tableMapping.ColumnMappings.Add("logDetail", "logDetail")
            tableMapping.ColumnMappings.Add("Date", "Date")
            tableMapping.ColumnMappings.Add("Time", "Time")
            tableMapping.ColumnMappings.Add("LogLevel", "LogLevel")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [T_LOG_DAT] WHERE (([LogType] = @Original_LogType) AND ((@IsNull_PcNa"& _ 
                "me = 1 AND [PcName] IS NULL) OR ([PcName] = @Original_PcName)) AND ([OccDate] = "& _ 
                "@Original_OccDate) AND ((@IsNull_Message = 1 AND [Message] IS NULL) OR ([Message"& _ 
                "] = @Original_Message)) AND ((@IsNull_LineName = 1 AND [LineName] IS NULL) OR (["& _ 
                "LineName] = @Original_LineName)) AND ([LogId] = @Original_LogId) AND ([LogLevel]"& _ 
                " = @Original_LogLevel))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LogType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PcName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PcName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PcName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PcName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OccDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OccDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Message", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Message", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Message", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Message", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LineName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LineName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LogId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LogLevel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogLevel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [T_LOG_DAT] ([LogType], [PcName], [OccDate], [Message], [LineName], ["& _ 
                "LogLevel]) VALUES (@LogType, @PcName, @OccDate, @Message, @LineName, @LogLevel);"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT LogType, PcName, OccDate, Message, LineName, LogId, CONVERT (nvarchar, "& _ 
                "OccDate, 111) + ' ' + CONVERT (nvarchar, OccDate, 108) + ' ' + Message AS logDet"& _ 
                "ail, CONVERT (nvarchar, OccDate, 111) AS Date, CONVERT (nvarchar, OccDate, 108) "& _ 
                "AS Time, LogLevel FROM T_LOG_DAT WHERE (LogId = SCOPE_IDENTITY()) AND (LogType ="& _ 
                " @LogType) AND (OccDate = @OccDate)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LogType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PcName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PcName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OccDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OccDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Message", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Message", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LineName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LogLevel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogLevel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [T_LOG_DAT] SET [LogType] = @LogType, [PcName] = @PcName, [OccDate] = @Occ"& _ 
                "Date, [Message] = @Message, [LineName] = @LineName, [LogLevel] = @LogLevel WHERE"& _ 
                " (([LogType] = @Original_LogType) AND ((@IsNull_PcName = 1 AND [PcName] IS NULL)"& _ 
                " OR ([PcName] = @Original_PcName)) AND ([OccDate] = @Original_OccDate) AND ((@Is"& _ 
                "Null_Message = 1 AND [Message] IS NULL) OR ([Message] = @Original_Message)) AND "& _ 
                "((@IsNull_LineName = 1 AND [LineName] IS NULL) OR ([LineName] = @Original_LineNa"& _ 
                "me)) AND ([LogId] = @Original_LogId) AND ([LogLevel] = @Original_LogLevel));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SE"& _ 
                "LECT LogType, PcName, OccDate, Message, LineName, LogId, CONVERT (nvarchar, OccD"& _ 
                "ate, 111) + ' ' + CONVERT (nvarchar, OccDate, 108) + ' ' + Message AS logDetail,"& _ 
                " CONVERT (nvarchar, OccDate, 111) AS Date, CONVERT (nvarchar, OccDate, 108) AS T"& _ 
                "ime, LogLevel FROM T_LOG_DAT WHERE (LogId = @LogId) AND (LogType = @LogType) AND"& _ 
                " (OccDate = @OccDate)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LogType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PcName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PcName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OccDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OccDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Message", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Message", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LineName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LogLevel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogLevel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LogType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PcName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PcName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PcName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PcName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OccDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OccDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Message", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Message", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Message", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Message", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LineName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LineName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LogId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LogLevel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogLevel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LogId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LogId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.InstructionSystem.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     LogType, PcName, OccDate, Message, LineName, LogId, CONVERT(nvarchar, "& _ 
                "OccDate, 111) + ' ' + CONVERT(nvarchar, OccDate, 108) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      + "& _ 
                "' ' + Message AS logDetail, CONVERT(nvarchar, OccDate, 111) AS Date, CONVERT(nva"& _ 
                "rchar, OccDate, 108) AS Time, LogLevel"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         T_LOG_DAT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CONVERT (nvarchar, OccDate, 111) AS Date, LineName, LogId, LogLevel, LogTy"& _ 
                "pe, Message, OccDate, PcName, CONVERT (nvarchar, OccDate, 108) AS Time, CONVERT "& _ 
                "(nvarchar, OccDate, 111) + ' ' + CONVERT (nvarchar, OccDate, 108) + ' ' + Messag"& _ 
                "e AS logDetail FROM T_LOG_DAT"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT CONVERT (nvarchar, OccDate, 111) AS Date, LineName, LogId, LogLevel, LogTy"& _ 
                "pe, Message, OccDate, PcName, CONVERT (nvarchar, OccDate, 108) AS Time, CONVERT "& _ 
                "(nvarchar, OccDate, 111) + ' ' + CONVERT (nvarchar, OccDate, 108) + ' ' + Messag"& _ 
                "e AS logDetail FROM T_LOG_DAT AS tLog WHERE (LogType = @pLogType) ORDER BY CONVE"& _ 
                "RT (nvarchar, OccDate, 111) DESC, CONVERT (nvarchar, OccDate, 108) DESC"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLogType", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LogType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT TOP (30) LineName, LogId, LogLevel, LogType, Message, OccDate, PcName, CON"& _ 
                "VERT (nvarchar, OccDate, 111) + ' ' + CONVERT (nvarchar, OccDate, 108) + ' ' + M"& _ 
                "essage AS logDetail FROM T_LOG_DAT WHERE (LogType = 0 OR LogType = 1) AND (OccDa"& _ 
                "te >= @pDate) AND (LogLevel = 2) ORDER BY OccDate DESC"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "OccDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.T_LOG_DATDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.T_LOG_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.T_LOG_DATDataTable = New DataSet1.T_LOG_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DataSet1.T_LOG_DATDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLogType(ByVal dataTable As DataSet1.T_LOG_DATDataTable, ByVal pLogType As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLogType,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLogType(ByVal pLogType As Integer) As DataSet1.T_LOG_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pLogType,Integer)
            Dim dataTable As DataSet1.T_LOG_DATDataTable = New DataSet1.T_LOG_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTop30LogType0_1(ByVal dataTable As DataSet1.T_LOG_DATDataTable, ByVal pDate As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pDate,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTop30LogType0_1(ByVal pDate As Date) As DataSet1.T_LOG_DATDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pDate,Date)
            Dim dataTable As DataSet1.T_LOG_DATDataTable = New DataSet1.T_LOG_DATDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.T_LOG_DATDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "T_LOG_DAT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_LogType As Integer, ByVal Original_PcName As String, ByVal Original_OccDate As Date, ByVal Original_Message As String, ByVal Original_LineName As String, ByVal Original_LogId As Integer, ByVal Original_LogLevel As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LogType,Integer)
            If (Original_PcName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_PcName,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_OccDate,Date)
            If (Original_Message Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Message,String)
            End If
            If (Original_LineName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_LineName,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_LogId,Integer)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_LogLevel,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal LogType As Integer, ByVal PcName As String, ByVal OccDate As Date, ByVal Message As String, ByVal LineName As String, ByVal LogLevel As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(LogType,Integer)
            If (PcName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PcName,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(OccDate,Date)
            If (Message Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Message,String)
            End If
            If (LineName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LineName,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(LogLevel,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal LogType As Integer, ByVal PcName As String, ByVal OccDate As Date, ByVal Message As String, ByVal LineName As String, ByVal LogLevel As Integer, ByVal Original_LogType As Integer, ByVal Original_PcName As String, ByVal Original_OccDate As Date, ByVal Original_Message As String, ByVal Original_LineName As String, ByVal Original_LogId As Integer, ByVal Original_LogLevel As Integer, ByVal LogId As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LogType,Integer)
            If (PcName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PcName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(OccDate,Date)
            If (Message Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Message,String)
            End If
            If (LineName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LineName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(LogLevel,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_LogType,Integer)
            If (Original_PcName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_PcName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_OccDate,Date)
            If (Original_Message Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Message,String)
            End If
            If (Original_LineName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_LineName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_LogId,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_LogLevel,Integer)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(LogId,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PcName As String, ByVal Message As String, ByVal LineName As String, ByVal LogLevel As Integer, ByVal Original_LogType As Integer, ByVal Original_PcName As String, ByVal Original_OccDate As Date, ByVal Original_Message As String, ByVal Original_LineName As String, ByVal Original_LogId As Integer, ByVal Original_LogLevel As Integer) As Integer
            Return Me.Update(Original_LogType, PcName, Original_OccDate, Message, LineName, LogLevel, Original_LogType, Original_PcName, Original_OccDate, Original_Message, Original_LineName, Original_LogId, Original_LogLevel, Original_LogId)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _t_Production_DATTableAdapter As T_Production_DATTableAdapter
        
        Private _t_Instruction_DATTableAdapter As T_Instruction_DATTableAdapter
        
        Private _t_Line_MSTTableAdapter As T_Line_MSTTableAdapter
        
        Private _t_LOG_DATTableAdapter As T_LOG_DATTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property T_Production_DATTableAdapter() As T_Production_DATTableAdapter
            Get
                Return Me._t_Production_DATTableAdapter
            End Get
            Set
                Me._t_Production_DATTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property T_Instruction_DATTableAdapter() As T_Instruction_DATTableAdapter
            Get
                Return Me._t_Instruction_DATTableAdapter
            End Get
            Set
                Me._t_Instruction_DATTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property T_Line_MSTTableAdapter() As T_Line_MSTTableAdapter
            Get
                Return Me._t_Line_MSTTableAdapter
            End Get
            Set
                Me._t_Line_MSTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property T_LOG_DATTableAdapter() As T_LOG_DATTableAdapter
            Get
                Return Me._t_LOG_DATTableAdapter
            End Get
            Set
                Me._t_LOG_DATTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._t_Production_DATTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._t_Production_DATTableAdapter.Connection) Is Nothing)) Then
                    Return Me._t_Production_DATTableAdapter.Connection
                End If
                If ((Not (Me._t_Instruction_DATTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._t_Instruction_DATTableAdapter.Connection) Is Nothing)) Then
                    Return Me._t_Instruction_DATTableAdapter.Connection
                End If
                If ((Not (Me._t_Line_MSTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._t_Line_MSTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._t_Line_MSTTableAdapter.Connection
                End If
                If ((Not (Me._t_LOG_DATTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._t_LOG_DATTableAdapter.Connection) Is Nothing)) Then
                    Return Me._t_LOG_DATTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._t_Production_DATTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._t_Instruction_DATTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._t_Line_MSTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._t_LOG_DATTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._t_Line_MSTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.T_Line_MST.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._t_Line_MSTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._t_LOG_DATTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.T_LOG_DAT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._t_LOG_DATTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._t_Production_DATTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.T_Production_DAT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._t_Production_DATTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._t_Instruction_DATTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.T_Instruction_DAT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._t_Instruction_DATTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSet1, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._t_Line_MSTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.T_Line_MST.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._t_Line_MSTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._t_LOG_DATTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.T_LOG_DAT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._t_LOG_DATTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._t_Production_DATTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.T_Production_DAT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._t_Production_DATTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._t_Instruction_DATTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.T_Instruction_DAT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._t_Instruction_DATTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._t_Instruction_DATTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.T_Instruction_DAT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._t_Instruction_DATTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._t_Production_DATTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.T_Production_DAT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._t_Production_DATTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._t_LOG_DATTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.T_LOG_DAT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._t_LOG_DATTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._t_Line_MSTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.T_Line_MST.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._t_Line_MSTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSet1) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._t_Production_DATTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._t_Production_DATTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._t_Instruction_DATTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._t_Instruction_DATTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._t_Line_MSTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._t_Line_MSTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._t_LOG_DATTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._t_LOG_DATTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._t_Production_DATTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._t_Production_DATTableAdapter, Me._t_Production_DATTableAdapter.Connection)
                    Me._t_Production_DATTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._t_Production_DATTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._t_Production_DATTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._t_Production_DATTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._t_Production_DATTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._t_Instruction_DATTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._t_Instruction_DATTableAdapter, Me._t_Instruction_DATTableAdapter.Connection)
                    Me._t_Instruction_DATTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._t_Instruction_DATTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._t_Instruction_DATTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._t_Instruction_DATTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._t_Instruction_DATTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._t_Line_MSTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._t_Line_MSTTableAdapter, Me._t_Line_MSTTableAdapter.Connection)
                    Me._t_Line_MSTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._t_Line_MSTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._t_Line_MSTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._t_Line_MSTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._t_Line_MSTTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._t_LOG_DATTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._t_LOG_DATTableAdapter, Me._t_LOG_DATTableAdapter.Connection)
                    Me._t_LOG_DATTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._t_LOG_DATTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._t_LOG_DATTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._t_LOG_DATTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._t_LOG_DATTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._t_Production_DATTableAdapter) Is Nothing) Then
                    Me._t_Production_DATTableAdapter.Connection = CType(revertConnections(Me._t_Production_DATTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._t_Production_DATTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._t_Instruction_DATTableAdapter) Is Nothing) Then
                    Me._t_Instruction_DATTableAdapter.Connection = CType(revertConnections(Me._t_Instruction_DATTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._t_Instruction_DATTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._t_Line_MSTTableAdapter) Is Nothing) Then
                    Me._t_Line_MSTTableAdapter.Connection = CType(revertConnections(Me._t_Line_MSTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._t_Line_MSTTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._t_LOG_DATTableAdapter) Is Nothing) Then
                    Me._t_LOG_DATTableAdapter.Connection = CType(revertConnections(Me._t_LOG_DATTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._t_LOG_DATTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
